Compiling Program: C:\DataFlex Projects\ColegioAppWeb\AppSrc\WebApp.src
Memory Available: 17775947776
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.x64.pkd    (C:\Program Files\DataFlex 24.0\Pkg\AllWebAppClasses.x64.pkd)
36015>Use cConnection.pkg
36015>Use cWebMenuItem.pkg
36015>
36015>Object oApplication is a cApplication
36017>    Object oConnection is a cConnection
36019>        Use LoginEncryption.pkg
Including file: LoginEncryption.pkg    (C:\Program Files\DataFlex 24.0\Pkg\LoginEncryption.pkg)
36019>>>Use cLoginEncryption.pkg
Including file: cLoginEncryption.pkg    (C:\Program Files\DataFlex 24.0\Pkg\cLoginEncryption.pkg)
36019>>>>>Use cCryptographerEx.pkg
36019>>>>>
36019>>>>>Class cLoginEncryption is a cObject
36020>>>>>    
36020>>>>>    Procedure Construct_Object
36022>>>>>        Forward Send Construct_Object
36024>>>>>        // this must be set to a multi (40ish) character random key
36024>>>>>        Property String psEncryptPassword ""
36025>>>>>        
36025>>>>>        Object oDataCrypter is a cCryptographerEx
36027>>>>>            Set piHash to CALG_SHA_256
36028>>>>>            Set piCipher to CALG_AES_256
36029>>>>>            Set psProvider to "" //  Not providing a specific provider gives the default provider for the provider type
36030>>>>>            Set piProvider to PROV_RSA_AES
36031>>>>>        End_Object
36032>>>>>    End_Procedure
36033>>>>>    
36033>>>>>    // This can be augmented to return a password encryption key using any
36033>>>>>    // hidden mechanism desired.
36033>>>>>    Function GetEncryptionPassword Returns String
36035>>>>>        String sPassword
36035>>>>>        Get psEncryptPassword to sPassword
36036>>>>>        Function_Return sPassword
36037>>>>>    End_Function
36038>>>>>    
36038>>>>>    // Encrypts a string into an unreadable hash that can later be decrypted using DecryptKey.
36038>>>>>    //
36038>>>>>    // Params:
36038>>>>>    //   sPlainText     String to encrypt.
36038>>>>>    // Returns:
36038>>>>>    //   Base64 encoded hash.
36038>>>>>    Function EncryptPassword String sPlainText Returns String
36040>>>>>        String sEncryptPassword sBase64
36040>>>>>        UChar[] ucBinary
36041>>>>>        Pointer pBase64
36041>>>>>        Integer iVoid
36041>>>>>        
36041>>>>>        //  Encrypt Key
36041>>>>>        Get GetEncryptionPassword to sEncryptPassword
36042>>>>>        If (sEncryptPassword = "") Begin
36044>>>>>            Error DFERR_PROGRAM "No encryption password set"
36045>>>>>>
36045>>>>>        End
36045>>>>>>
36045>>>>>        
36045>>>>>        Get Encrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) (StringToUCharArray(sPlainText)) to ucBinary
36046>>>>>        
36046>>>>>        If (SizeOfArray(ucBinary) = 0) Begin
36048>>>>>            Error DFERR_PROGRAM "Unable to encrypt database login password"
36049>>>>>>
36049>>>>>            Function_Return ""
36050>>>>>        End
36050>>>>>>
36050>>>>>        
36050>>>>>        //  Encode binary hash to Base64
36050>>>>>        Move (Base64Encode(AddressOf(ucBinary), SizeOfArray(ucBinary))) to pBase64
36051>>>>>        Move (PointerToString(pBase64)) to sBase64
36052>>>>>        Move (Free(pBase64)) to iVoid
36053>>>>>        
36053>>>>>        Function_Return sBase64
36054>>>>>    End_Function
36055>>>>>    
36055>>>>>    
36055>>>>>    // Decrypts the unreadable hash generated by EncryptKey into a readable string.
36055>>>>>    //
36055>>>>>    // Params:
36055>>>>>    //   sBase64EncryptedPassword       Base64 Encrypted password
36055>>>>>    // Returns:
36055>>>>>    //   Readable plain text password
36055>>>>>    Function DecryptPassword String sBase64EncryptedPassword Returns String
36057>>>>>        String sEncryptPassword
36057>>>>>        UChar[] ucBinary ucPlain
36059>>>>>        Boolean bIsHex
36059>>>>>        Integer iLen iVoid
36059>>>>>        Pointer pBinary
36059>>>>>        
36059>>>>>        If (sBase64EncryptedPassword <> "") Begin
36061>>>>>            //  Decode from Base64
36061>>>>>            Move (Base64Decode(AddressOf(sBase64EncryptedPassword), &iLen)) to pBinary
36062>>>>>            
36062>>>>>            Move (ResizeArray(ucBinary, iLen, 0)) to ucBinary
36063>>>>>            Move (MemCopy(AddressOf(ucBinary), pBinary, iLen)) to iVoid
36064>>>>>                        
36064>>>>>            Move (Free(pBinary)) to iVoid
36065>>>>>            
36065>>>>>            //  Encrypted binary hash to string
36065>>>>>            Get GetEncryptionPassword to sEncryptPassword
36066>>>>>            Get Decrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) ucBinary to ucPlain
36067>>>>>        End
36067>>>>>>
36067>>>>>        
36067>>>>>        Function_Return (UCharArrayToString(ucPlain))
36068>>>>>    End_Function
36069>>>>>End_Class
36070>>>
36070>>>Object oLoginEncryption is a cLoginEncryption
36072>>>
36072>>>    // this must be created in your appsrc directory and must contain an encryption
36072>>>    // key that is set to psEncryptPassword. It will look something like this
36072>>>    //
36072>>>    // Set psEncryptPassword to "JchUAo7W@r.b{<Yk~OONi0nq=sMi[*Rn[A-`Vo)q"
36072>>>    //  
Including file: LoginEncryptionKey.inc    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\LoginEncryptionKey.inc)
36072>>>>// Studio generated login encryption key
36072>>>>Set psEncryptPassword to "l0#+3%h0Gfb*z}g.2beO1A.4X~j(p@AB%<{=Rgi3"
36073>>>>
36073>>>    
36073>>>    // use this to register this object to your cConnection Object. This object
36073>>>    // must be created after the cConnection object
36073>>>    Move Self to ghoLoginEncryption
36074>>>End_Object
36075>    End_Object
36076>End_Object
36077>
36077>Object oWebApp is a cWebApp
36079>    Set psTheme to "Df_Material"
36080>    Set peAlignView to alignCenter
36081>    
36081>    // It is important to set this so that all views will default
36081>    // to drill down style views.
36081>    Set peApplicationStyle to wvsDrillDown   
36082>    Set peApplicationStateMode to asmHistoryAndUrls 
36083>    Set psEncryptPassword to "tm<W]8a2xu$eEiKo6To#(dY~P0&#as*~_%sXO,xT"
36084>    Set peLoginMode to lmLoginNone
36085>
36085>    Object oViewStack is a cWebViewStack
36087>    End_Object
36088>    
36088>    Procedure HideHeader
36091>        WebSet pbRender of oHeaderPanel to False
36092>    End_Procedure
36093>
36093>    Procedure ShowHeader
36096>        WebSet pbRender of oHeaderPanel to True 
36097>    End_Procedure
36098>
36098>    Object oHeaderPanel is a cWebPanel
36100>        Set peRegion to prTop
36101>        Set psCSSClass to "HeaderPanel"
36102>        
36102>        Object oMenuPanel is a cWebPanel
36104>            Set peRegion to prLeft
36105>            Set piWidth to 50
36106>            
36106>            Object oMenuButton is a cWebMenuButton
36108>                Set piMenuHeight to 500
36109>
36109>                Object oDashboard_itm is a cWebMenuItem
36111>                    Set psCaption to "Seleccione"
36112>                    
36112>                    WebRegisterPath ntNavigateBegin oDashboard
36118>
36118>                    Procedure OnClick
36121>                        Send NavigatePath
36122>                    End_Procedure
36123>                End_Object
36124>
36124>                Object oViewMenu is a cWebMenuItem
36126>                    Set psCaption to "Listados"
36127>
36127>                    Object oSchoolHouseItem1 is a cWebMenuItem
36129>                        Set psCaption to "Listado de COLEGIOS"
36130>
36130>                        WebRegisterPath ntNavigateBegin oSelectSchoolHouse
36136>
36136>                        Procedure OnClick
36139>                            Forward Send OnClick
36141>                                Send NavigatePath
36142>                        End_Procedure
36143>                    End_Object
36144>
36144>                    Object oSelectStudentItem1 is a cWebMenuItem
36146>                        Set psCaption to "Listado de ESTUDIANTES"
36147>
36147>                        WebRegisterPath ntNavigateBegin oSelectStudent
36153>
36153>                        Procedure OnClick
36156>                            Forward Send OnClick
36158>                                Send NavigatePath
36159>                        End_Procedure
36160>                    End_Object
36161>                End_Object
36162>
36162>                Object oSignOut_itm is a cWebMenuItem
36164>                    Set psCaption to "Salir"
36165>
36165>                    Procedure OnClick
36168>                        Send RequestLogOut of ghoWebSessionManager
36169>                    End_Procedure
36170>                End_Object
36171>            End_Object  
36172>
36172>            Object oBackButton is a cWebButton
36174>                Set psCSSClass to "WebBack_Icon"
36175>                Set pbRender to False
36176>                
36176>                Procedure OnClick
36179>                    Handle hoTop
36179>                    
36179>                    Get TopViewHandle of oViewStack to hoTop
36180>                    If (hoTop > 0) Begin
36182>                        Send NavigateCancel of hoTop 
36183>                    End
36183>                End_Procedure
36184>            End_Object
36185>            
36185>            Send AddClient of oViewStack Self
36186>                
36186>            Procedure OnUpdateViewStack
36189>                Handle hoTop hoDflt
36189>                Integer eMode
36189>                Boolean bTop
36189>                
36189>                WebGet peMode of (Owner(Self)) to eMode
36190>                
36190>                Get TopViewHandle of oViewStack to hoTop
36191>                Get GetDefaultView to hoDflt
36192>                Move (hoTop=0 or hoTop=hoDflt) to bTop
36193>                
36193>                WebSet pbRender of oBackButton to (not(bTop) and eMode >= rmMobile)
36194>                WebSet pbRender of oMenuButton to (bTop or eMode < rmMobile)
36195>            End_Procedure
36196>
36196>        End_Object
36197>
36197>        Object oCaptionPanel is a cWebPanel
36199>            Set piColumnCount to 12
36200>
36200>            Object oCaptionBreadcrumb is a cWebBreadcrumb
36202>                Set peBreadcrumbStyle to crumbCaption
36203>                WebSetResponsive peBreadcrumbStyle rmMobile to crumbDropDown
36204>            End_Object         
36205>        End_Object
36206>        
36206>        Object oActionPanel is a cWebPanel
36208>            Set peRegion to prRight
36209>            Set piColumnCount to 1
36210>            Set piWidth to 120
36211>
36211>            Object oMainActions is a cWebActionBar
36213>                Set psGroupName to "MainActions"
36214>
36214>                Set piColumnSpan to 0
36215>                Set peAlign to alignRight
36216>            End_Object
36217>        End_Object
36218>
36218>        Object oBreadcrumbPanel is a cWebPanel
36220>            Set peRegion to prBottom
36221>            
36221>            Object oHorizontalBreadcrumb is a cWebBreadcrumb
36223>                WebSetResponsive pbRender rmMobile to False
36224>            End_Object         
36225>        End_Object
36226>
36226>    End_Object    
36227>
36227>    Use SessionManager.wo
Including file: SessionManager.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\SessionManager.wo)
36227>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (C:\Program Files\DataFlex 24.0\Pkg\cWebSessionManagerStandard.pkg)
36227>>>>>Use cWebSessionManager.pkg
36227>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (C:\Program Files\DataFlex 24.0\Pkg\cWebAppSessionDataDictionary.dd)
36227>>>>>>>Use DataDict.pkg
36227>>>>>>>
36227>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\WebAppSession.fd)
36229>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\WebAppUser.fd)
36231>>>>>>>
36231>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
36232>>>>>>>    Procedure Construct_Object
36234>>>>>>>        Forward Send Construct_Object
36236>>>>>>>
36236>>>>>>>        Set Main_File to WebAppSession.File_Number
36237>>>>>>>
36237>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
36238>>>>>>>
36238>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
36239>>>>>>>
36239>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36240>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36241>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36242>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36243>>>>>>>
36243>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
36244>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
36245>>>>>>>    End_Procedure
36246>>>>>>>
36246>>>>>>>    Procedure Creating
36248>>>>>>>        DateTime dtCurrentDateTime
36248>>>>>>>        
36248>>>>>>>        Forward Send Creating
36250>>>>>>>        
36250>>>>>>>        //  Init usecounter
36250>>>>>>>        Move 0 to WebAppSession.UseCount
36251>>>>>>>        
36251>>>>>>>        //  Set the creation and access time to the current time
36251>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
36252>>>>>>>    
36252>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
36253>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
36254>>>>>>>        
36254>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
36255>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
36256>>>>>>>    End_Procedure
36257>>>>>>>    
36257>>>>>>>    //
36257>>>>>>>    //  Converts the given time to an string that can be saved in the database.
36257>>>>>>>    //
36257>>>>>>>    //  Params:
36257>>>>>>>    //      dtTime  Time to convert
36257>>>>>>>    //  Returns:
36257>>>>>>>    //      String with "HH:MM:SS" format
36257>>>>>>>    //
36257>>>>>>>    Function TimeToString DateTime dtTime Returns String
36259>>>>>>>        String sHours sMinutes sSeconds
36259>>>>>>>        
36259>>>>>>>        //  Extract parts
36259>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
36260>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
36261>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
36262>>>>>>>        
36262>>>>>>>        //  Fill out with 0
36262>>>>>>>        If (Length(sHours) = 1) ;            Move ("0" + sHours) to sHours
36265>>>>>>>        If (Length(sMinutes) = 1) ;            Move ("0" + sMinutes) to sMinutes
36268>>>>>>>        If (Length(sSeconds) = 1) ;            Move ("0" + sSeconds) to sSeconds
36271>>>>>>>        
36271>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
36272>>>>>>>    End_Function
36273>>>>>>>    
36273>>>>>>>    //
36273>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
36273>>>>>>>    //
36273>>>>>>>    //  Params:
36273>>>>>>>    //      dtTime  Datetime variable to add time to
36273>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
36273>>>>>>>    //  Returns:
36273>>>>>>>    //      dtDateTime with the loaded time
36273>>>>>>>    //
36273>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
36275>>>>>>>        String sHours sMinutes sSeconds
36275>>>>>>>        
36275>>>>>>>        //  Extract parts
36275>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
36276>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
36277>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
36278>>>>>>>        
36278>>>>>>>        //  Set to DateTime
36278>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
36279>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
36280>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
36281>>>>>>>        
36281>>>>>>>        Function_Return dtTime
36282>>>>>>>    End_Function
36283>>>>>>>End_Class
36284>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (C:\Program Files\DataFlex 24.0\Pkg\cWebAppUserDataDictionary.dd)
36284>>>>>>>Use DataDict.pkg
36284>>>>>>>Open WebAppUser
36286>>>>>>>Open WebAppSession
36288>>>>>>>
36288>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
36289>>>>>>>    
36289>>>>>>>    Procedure Construct_Object
36291>>>>>>>        Forward Send Construct_Object
36293>>>>>>>        Set Main_File to WebAppUser.File_Number
36294>>>>>>>
36294>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
36295>>>>>>>
36295>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36296>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36297>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36298>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36299>>>>>>>    End_Procedure
36300>>>>>>>
36300>>>>>>>End_Class
36301>>>>>
36301>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
36302>>>>>    
36302>>>>>    Procedure Construct_Object
36304>>>>>        Handle hoUserDD hoSessionDD
36304>>>>>        
36304>>>>>        Forward Send Construct_Object
36306>>>>>        
36306>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
36307>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
36308>>>>>        
36308>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
36309>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
36310>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
36311>>>>>
36311>>>>>        Set phoUserDD to hoUserDD
36312>>>>>        Set phoSessionDD to hoSessionDD
36313>>>>>        Property Boolean pbCreatingNewSession False
36314>>>>>        Property String psLoginName
36315>>>>>        Property String psUserName ""
36316>>>>>        Property Integer piUserRights 0
36317>>>>>    End_Procedure
36318>>>>>    
36318>>>>>    Function CreateSession String sRemoteAddress Returns String
36320>>>>>        String sSessionKey
36320>>>>>        Integer iErr
36320>>>>>        Boolean bLogWebSession
36320>>>>>        Handle hoSessionDD       
36320>>>>>        Get phoSessionDD to hoSessionDD
36321>>>>>        
36321>>>>>        //  Get session key
36321>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
36323>>>>>        
36323>>>>>        Get pbLogWebSession to bLogWebSession
36324>>>>>        If not bLogWebSession Begin
36326>>>>>            Function_Return sSessionKey        
36327>>>>>        End
36327>>>>>>
36327>>>>>
36327>>>>>        //  Store session
36327>>>>>        Send Clear of hoSessionDD
36328>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
36329>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
36330>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
36331>>>>>        Get Request_Validate of hoSessionDD to iErr
36332>>>>>        If (iErr) Begin
36334>>>>>            // this should not happen. If it does its a programming error
36334>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36335>>>>>>
36335>>>>>            Function_Return ""
36336>>>>>        End
36336>>>>>>
36336>>>>>        Send Request_Save of hoSessionDD
36337>>>>>        If (Err) Begin
36339>>>>>            // this shouldn't happen, if it does likely a duplicate session key issue, even through request_save already gave an error we give another one to make tracking down easier
36339>>>>>            Error DFERR_PROGRAM C_$WebAppSesionSaveFailed
36340>>>>>>
36340>>>>>            Function_Return ""
36341>>>>>        End
36341>>>>>>
36341>>>>>       
36341>>>>>        Function_Return sSessionKey        
36342>>>>>    End_Function
36343>>>>>    
36343>>>>>    
36343>>>>>    Function ValidateSession String sSessionKey Boolean bOptLoadWebApp Returns Boolean
36345>>>>>        DateTime dtLastAccess dtCurrent
36345>>>>>        TimeSpan tsDiff
36345>>>>>        Integer iErr iSessionTimeout iSpanMinutes
36345>>>>>        Boolean bResult bCreatingNewSession
36345>>>>>        Boolean bLogWebSession bLoadWebApp
36345>>>>>        Integer eLoginMode
36345>>>>>        String sTime
36345>>>>>        Handle hoSessionDD hoUserDD       
36345>>>>>        
36345>>>>>        Move False to bLoadWebApp
36346>>>>>        If (num_arguments >= 2) Begin
36348>>>>>            Move bOptLoadWebApp to bLoadWebApp
36349>>>>>        End
36349>>>>>>
36349>>>>>        
36349>>>>>        Get phoSessionDD to hoSessionDD
36350>>>>>        Get phoUserDD to hoUserDD
36351>>>>>        
36351>>>>>        Get pbLogWebSession to bLogWebSession
36352>>>>>        Get peLoginMode to eLoginMode
36353>>>>>        
36353>>>>>        // for this object, you can only disable logging if login completely is disabled
36353>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
36355>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
36356>>>>>>
36356>>>>>            Function_Return False
36357>>>>>        End
36357>>>>>>
36357>>>>>
36357>>>>>        //  Clear session properties
36357>>>>>        Set psSessionKey to ""
36358>>>>>        Send UpdateSessionProperties True
36359>>>>>        
36359>>>>>        If not bLogWebSession Begin
36361>>>>>            Forward Get ValidateSession sSessionKey to bResult
36363>>>>>            Function_Return bResult
36364>>>>>        End        
36364>>>>>>
36364>>>>>        
36364>>>>>        Move False to bResult
36365>>>>>        Get piSessionTimeout to iSessionTimeout 
36366>>>>>        
36366>>>>>        //  Check if session exists
36366>>>>>        Send Clear of hoSessionDD
36367>>>>>        Move sSessionKey to WebAppSession.SessionKey
36368>>>>>        Send Find of hoSessionDD EQ Index.1
36369>>>>>            
36369>>>>>        If (Found) Begin
36371>>>>>            //  Calculate timespan between now and last access time
36371>>>>>            Move (CurrentDateTime()) to dtCurrent
36372>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
36373>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
36374>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
36375>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
36376>>>>>            
36376>>>>>            //  Check if session didn't time out
36376>>>>>            If (IsDateValid(dtLastAccess) and (iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
36378>>>>>                Forward Get ValidateSession sSessionKey to bResult
36380>>>>>                   
36380>>>>>                If (bResult) Begin
36382>>>>>                    //  Update session record
36382>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
36383>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
36384>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
36385>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
36386>>>>>                    Get Request_Validate of hoSessionDD to iErr
36387>>>>>                    If (iErr) Begin
36389>>>>>                        // this should not happen. If it does its a programming error
36389>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36390>>>>>>
36390>>>>>                        Function_Return False
36391>>>>>                    End
36391>>>>>>
36391>>>>>                    Send Request_Save of hoSessionDD
36392>>>>>                    
36392>>>>>                    //  Update user properties
36392>>>>>                    Send UpdateSessionProperties False
36393>>>>>                End
36393>>>>>>
36393>>>>>            End
36393>>>>>>
36393>>>>>            Else Begin
36394>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
36394>>>>>                Get pbCreatingNewSession to bCreatingNewSession
36395>>>>>                
36395>>>>>                If (not(bCreatingNewSession)) Begin
36397>>>>>                    If (not(bLoadWebApp)) Begin
36399>>>>>                        Move False to bResult   //  We can only continue immediately if we were loading the webapp, other operations are not allowed!
36400>>>>>                        Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
36401>>>>>>
36401>>>>>                        Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
36402>>>>>                    End
36402>>>>>>
36402>>>>>                    Else Begin
36403>>>>>                        Set pbCreatingNewSession to True                    
36404>>>>>                        Get RecreateSession of ghoWebApp to bResult 
36405>>>>>                        Set pbCreatingNewSession to False                        
36406>>>>>                    End
36406>>>>>>
36406>>>>>                End
36406>>>>>>
36406>>>>>            End
36406>>>>>>
36406>>>>>        End
36406>>>>>>
36406>>>>>        Else Begin
36407>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
36408>>>>>>
36408>>>>>        End
36408>>>>>>
36408>>>>>        
36408>>>>>        Function_Return bResult
36409>>>>>    End_Function
36410>>>>>    
36410>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
36412>>>>>        String sSessionKey sUserPassword
36412>>>>>        Handle hoSessionDD hoUserDD
36412>>>>>        Boolean bMatch  
36412>>>>>        
36412>>>>>        Get phoSessionDD to hoSessionDD
36413>>>>>        Get phoUserDD to hoUserDD
36414>>>>>        Integer iErr eLoginMode
36414>>>>>        
36414>>>>>        // Refind session record
36414>>>>>        Get psSessionKey to sSessionKey
36415>>>>>        Send Clear of hoSessionDD
36416>>>>>        Move sSessionKey to WebAppSession.SessionKey
36417>>>>>        Send Find of hoSessionDD EQ Index.1
36418>>>>>        
36418>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
36420>>>>>            Get peLoginMode to eLoginMode
36421>>>>>            
36421>>>>>            //  Find the user
36421>>>>>            Move sLoginName to WebAppUser.LoginName
36422>>>>>            Send Find of hoUserDD EQ Index.1
36423>>>>>            
36423>>>>>            // Check username and password
36423>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
36425>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
36426>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
36427>>>>>                
36427>>>>>                If (bMatch) Begin
36429>>>>>                    // Store the login
36429>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
36430>>>>>                    Get Request_Validate of hoSessionDD to iErr
36431>>>>>                    If (iErr) Begin
36433>>>>>                        // this should not happen. If it does its a programming error
36433>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36434>>>>>>
36434>>>>>                        Function_Return False
36435>>>>>                    End
36435>>>>>>
36435>>>>>                    
36435>>>>>                    Send Request_Save of hoSessionDD
36436>>>>>                    
36436>>>>>                    // Update session properties
36436>>>>>                    Send UpdateSessionProperties False
36437>>>>>                    Send NotifyChangeRights
36438>>>>>                    Function_Return True
36439>>>>>                End
36439>>>>>>
36439>>>>>                Else Begin
36440>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
36440>>>>>                    Send Clear of hoUserDD
36441>>>>>                End
36441>>>>>>
36441>>>>>            End
36441>>>>>>
36441>>>>>        End
36441>>>>>>
36441>>>>>          
36441>>>>>        Function_Return False
36442>>>>>    End_Function
36443>>>>>    
36443>>>>>    Function IsLoggedIn Returns Boolean
36445>>>>>        String sLoginName
36445>>>>>        Boolean bLogWebSession bLoggedIn
36445>>>>>        
36445>>>>>        Get pbLogWebSession to bLogWebSession
36446>>>>>        If not bLogWebSession Begin
36448>>>>>            Forward Get IsLoggedIn to bLoggedIn
36450>>>>>            Function_Return bLoggedIn
36451>>>>>        End
36451>>>>>>
36451>>>>>        
36451>>>>>        Get psLoginName to sLoginName
36452>>>>>        
36452>>>>>        Function_Return (sLoginName <> "")
36453>>>>>    End_Function
36454>>>>>    
36454>>>>>    
36454>>>>>    //
36454>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
36454>>>>>    // update properties based on the session and user data. Augment this function to update 
36454>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
36454>>>>>    // the right records when this procedure is called.
36454>>>>>    //
36454>>>>>    // Params:
36454>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
36454>>>>>    //
36454>>>>>    Procedure UpdateSessionProperties Boolean bClear
36456>>>>>        Handle hoUserDD
36456>>>>>        
36456>>>>>        Get phoUserDD to hoUserDD
36457>>>>>        
36457>>>>>        //  Update user properties
36457>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
36459>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
36460>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
36461>>>>>            Set piUserRights to WebAppUser.Rights
36462>>>>>            
36462>>>>>            Send OnSessionPropertiesSet 
36463>>>>>        End
36463>>>>>>
36463>>>>>        Else Begin
36464>>>>>            Set psUsername to ""
36465>>>>>            Set psLoginName to ""
36466>>>>>            Set piUserRights to 0
36467>>>>>            
36467>>>>>            Send OnSessionPropertiesClear
36468>>>>>        End
36468>>>>>>
36468>>>>>    End_Procedure
36469>>>>>    
36469>>>>>    //
36469>>>>>    // This function is called to perform the password comparison. It gets the entered password and
36469>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
36469>>>>>    // right record. This function can be augmented to implement security features like storing the
36469>>>>>    // password as a hashed value.
36469>>>>>    //
36469>>>>>    // Params:
36469>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
36469>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
36469>>>>>    //
36469>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
36471>>>>>        Function_Return (sUserPassword = sEnteredPassword)
36472>>>>>    End_Function
36473>>>>>    
36473>>>>>    Procedure OnSessionPropertiesSet
36475>>>>>        //  Empty event stub
36475>>>>>    End_Procedure
36476>>>>>    
36476>>>>>    Procedure OnSessionPropertiesClear
36478>>>>>        //  Empty event stub
36478>>>>>    End_Procedure
36479>>>>>    
36479>>>>>    Procedure EndSession
36481>>>>>        Integer iErr
36481>>>>>        Boolean bLogWebSession
36481>>>>>        Handle hoSessionDD       
36481>>>>>        
36481>>>>>        Get phoSessionDD to hoSessionDD
36482>>>>>        Get pbLogWebSession to bLogWebSession
36483>>>>>        If not bLogWebSession Begin
36485>>>>>            Forward Send EndSession
36487>>>>>            Procedure_Return
36488>>>>>        End
36488>>>>>>
36488>>>>>            
36488>>>>>        //  Check if session exists
36488>>>>>        Send Clear of hoSessionDD
36489>>>>>        Get psSessionKey to WebAppSession.SessionKey
36490>>>>>        
36490>>>>>        Send Find of hoSessionDD EQ Index.1
36491>>>>>        If (Found) Begin
36493>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
36494>>>>>            Get Request_Validate of hoSessionDD to iErr
36495>>>>>            If (iErr) Begin
36497>>>>>                // this should not happen. If it does its a programming error
36497>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36498>>>>>>
36498>>>>>                Procedure_Return
36499>>>>>            End
36499>>>>>>
36499>>>>>            Send Request_Save of hoSessionDD
36500>>>>>        End
36500>>>>>>
36500>>>>>    End_Procedure
36501>>>>>
36501>>>>>End_Class
36502>>>>>
36502>>>
36502>>>Object oSessionManager is a cWebSessionManagerStandard
36504>>>End_Object
36505>>>
36505>>>
36505>    Use Login.wo
Including file: Login.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\Login.wo)
36505>>>Use cWebView.pkg
36505>>>Use cWebForm.pkg
36505>>>Use cWebButton.pkg
36505>>>Use cWebPanel.pkg
36505>>>Use cWebLabel.pkg
36505>>>Use cWebSpacer.pkg
36505>>>Use cWebImage.pkg
36505>>>
36505>>>Object oLogin is a cWebView
36507>>>    Set piMinWidth to 250
36508>>>    Set piMaxWidth to 420
36509>>>    Set pbLoginModeEnforced to False
36510>>>    Set piColumnCount to 12
36511>>>    Set psCSSClass to "LoginView"
36512>>>    Set pbServerOnSubmit to True
36513>>>    
36513>>>    Set psStateViewName to "Login"
36514>>>    Set pbStateReplace to True  // Always replace the state so the login never becomes its own history item
36515>>>    
36515>>>    Property String psPrevStateHash ""  // Remember the state hash that the user navigated too so we can redirect after login
36518>>>    
36518>>>    Delegate Set phoLoginView to Self
36520>>>    
36520>>>    Object oTopSpacer is a cWebSpacer
36522>>>        Set pbFillHeight to True
36523>>>        Set piColumnSpan to 12
36524>>>    End_Object
36525>>>    
36525>>>    Object oWarning is a cWebLabel
36527>>>        Set pbVisible to False
36528>>>        Set psCaption to "Invalid User ID or password. \n\rHint: 'Guest' & 'guest'."
36529>>>        Set peAlign to alignCenter
36530>>>        Set piColumnSpan to 12
36531>>>        Set psCSSClass to "LoginWarning"
36532>>>    End_Object
36533>>>    
36533>>>    Object oLogo is a cWebImage
36535>>>        Set piColumnSpan to 10
36536>>>        Set psUrl to "images/DF_Logo_Retina.png"
36537>>>        Set pePosition to wiFit
36538>>>        Set piColumnIndex to 1
36539>>>        Set piHeight to 160
36540>>>        
36540>>>        WebSetResponsive piHeight rmMobile to 100  // Best for small smart phones
36541>>>    End_Object
36542>>>    
36542>>>    Object oLoginName is a cWebForm
36544>>>        Set psLabel to "User ID:"
36545>>>        Set peLabelPosition to lpTop
36546>>>        Set piMaxLength to 20
36547>>>        Set piColumnIndex to 1
36548>>>        Set pbShowLabel to False
36549>>>        Set psPlaceHolder to "loginname"
36550>>>        Set piColumnSpan to 10
36551>>>        Set psAutoComplete to "username"
36552>>>    End_Object
36553>>>    
36553>>>    Object oPassword is a cWebForm
36555>>>        Set psLabel to "Password:"
36556>>>        Set pbPassword to True
36557>>>        Set peLabelAlign to alignLeft
36558>>>        Set piMaxLength to 20
36559>>>        Set peLabelPosition to lpTop
36560>>>        Set pbShowLabel to False
36561>>>        Set psPlaceHolder to "password"
36562>>>        Set piColumnSpan to 10
36563>>>        Set piColumnIndex to 1
36564>>>        Set psAutoComplete to "current-password"
36565>>>    End_Object
36566>>>    
36566>>>    Object oWebSpacer1 is a cWebSpacer
36568>>>        Set piColumnSpan to 12
36569>>>        Set piHeight to 10
36570>>>    End_Object
36571>>>    
36571>>>    Object oLoginButton is a cWebButton
36573>>>        Set pbShowLabel to False
36574>>>        Set psCaption to "sign in"
36575>>>        Set pbServerOnClick to True
36576>>>        Set piColumnSpan to 10
36577>>>        Set piColumnIndex to 1
36578>>>        
36578>>>        Procedure OnClick
36581>>>            Send DoLogin
36582>>>        End_Procedure
36583>>>    End_Object
36584>>>    
36584>>>    Object oBottomSpacer is a cWebSpacer
36586>>>        Set pbFillHeight to True
36587>>>        Set piColumnSpan to 12
36588>>>    End_Object
36589>>>    
36589>>>    Procedure DoLogin
36592>>>        String sLoginName sPassword sPrevStateHash
36592>>>        Boolean bResult
36592>>>        
36592>>>        WebGet psValue of oLoginName to sLoginName
36593>>>        WebGet psValue of oPassword to sPassword
36594>>>        
36594>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
36595>>>        
36595>>>        If (bResult) Begin
36597>>>            Send Hide of oLogin
36598>>>            Send ShowHeader of ghoWebApp
36599>>>            WebSet psCSSClass of ghoWebApp to ""
36600>>>            
36600>>>            WebGet psPrevStateHash to sPrevStateHash
36601>>>            Send NavigateToStateHash of ghoWebApp sPrevStateHash True
36602>>>            
36602>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
36602>>>            WebSet psValue of oLoginName to ""
36603>>>            WebSet psValue of oPassword  to ""
36604>>>            WebSet pbVisible of oWarning to False
36605>>>        End
36605>>>>
36605>>>        Else Begin
36606>>>            WebSet pbVisible of oWarning to True
36607>>>        End
36607>>>>
36607>>>    End_Procedure
36608>>>    
36608>>>    Procedure OnSubmit
36611>>>        Send DoLogin
36612>>>    End_Procedure
36613>>>    
36613>>>    Procedure OnLoad
36616>>>        String sPrevStateHash sView
36616>>>        
36616>>>        Forward Send OnLoad
36618>>>        
36618>>>        //  Store the current state so we can go back to that later (only if it points to a different view)
36618>>>        Get StateHash of ghoWebApp to sPrevStateHash
36619>>>        Send ParseViewStateHash sPrevStateHash (&sView)
36620>>>        If (Lowercase(sView) <> Lowercase(psStateViewName(Self))) Begin
36622>>>            WebSet psPrevStateHash to sPrevStateHash
36623>>>        End
36623>>>>
36623>>>        
36623>>>    End_Procedure
36624>>>    
36624>>>    Procedure OnBeforeShow
36627>>>        //  Hide header & apply nice background style
36627>>>        Send HideHeader to ghoWebApp
36628>>>        WebSet psCSSClass of ghoWebApp to "LoginBackground"
36629>>>    End_Procedure
36630>>>    
36630>>>End_Object
36631>>>
36631>>>
36631>>>
36631>>>
36631>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\WebResourceManager.wo)
36631>>>Use cWebResourceManager.pkg
36631>>>
36631>>>Object oWebResourceManager is a cWebResourceManager
36633>>>End_Object
36634>    
36634>    Use Dashboard.wo
Including file: Dashboard.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\Dashboard.wo)
36634>>>Use cWebView.pkg
36634>>>Use cWebPanel.pkg
36634>>>Use cWebForm.pkg
36634>>>Use cWebButton.pkg
36634>>>Use cWebGroup.pkg
36634>>>Use cWebSpacer.pkg
36634>>>Use cWebHtmlBox.pkg
36634>>>Use cWebMenuGroup.pkg
36634>>>Use cWebMenuItem.pkg
36634>>>Use cWebLabel.pkg
36634>>>Use cWebList.pkg
36634>>>Use cWebColumn.pkg
36634>>>
36634>>>Object oDashboard is a cWebView
36636>>>
36636>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
36636>>>    // Add a DDO Structure 
36636>>>    //
36636>>>    // There is no need to synchronize a DD structure on the client so we do
36636>>>    // not set the Server property or send ADDOStructure. We will simply use
36636>>>    // DDO's to mine data and generate HTML for our cWebHTMLBox objects.
36636>>>    // It is the HTML in these objects that is sent to the client each time 
36636>>>    // this page is shown.
36636>>>    //
36636>>>    // Also, it is important for the drill-down Navigation interface that we
36636>>>    // do not set the Server property to some DDO because this will affect 
36636>>>    // constraints in the next view that we navigate to.
36636>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
36636>>>
36636>>>    Set piMaxWidth to 1024
36637>>>    
36637>>>    Set psCaption to "Menú Inicio"
36638>>>    Set peViewType to vtUndefined
36639>>>    Set pbShowCaption to False
36640>>>    Set psCSSClass to "Dashboard"
36641>>>    
36641>>>    Object oWebMainPanel is a cWebPanel
36643>>>        Set piColumnCount to alignCenter
36644>>>        Set psBackgroundColor to "lightblue"
36645>>>        //Set psHtml to '<div><img src="C:\DataFlex Projects\ColegioAppWeb\Bitmaps\colegio.bmp"></div>'
36645>>>        
36645>>>        // - - - - - - - - - - - - - - -
36645>>>        // Main Panel's Responsive Rules
36645>>>        // - - - - - - - - - - - - - - -
36645>>>        WebSetResponsive piColumnCount rmMobile to 1
36646>>>        WebSetResponsive piColumnCount rmTabletPortrait to 16
36647>>>    
36647>>>        Object oTiles_grp is a cWebGroup
36649>>>            Set piColumnSpan to 1
36650>>>            Set pbShowBorder to False
36651>>>            Set pbShowCaption to False
36652>>>            Set piColumnCount to 12
36653>>>            
36653>>>            Set psCSSClass to "TilesGroup"
36654>>>            Set psBackgroundColor to "lightblue"
36655>>>    
36655>>>            /*Object oWelcomeTile is a cWebHtmlBox                Set piColumnSpan to 6                Set psCSSClass to "Tile Light"                Set psHtml to '<div Class="WebCon_Sizer"><div class="Tile_Title">Inicio</div><div Class="Tile_Subtitle">Pantalla Principal</div></div>'                Set psBackgroundColor to "Green"                Set psToolTip to "Pantalla de inicio"                    Procedure OnLoad                    Send UpdateHTML ('<div class="WebCon_Sizer">' + ;                                     '<div class="Tile_Title">Inicio</div>' +;                                     '<div class="Tile_Subtitle">' - htmlEncode(psUserName(ghoWebSessionManager)) - '</div>' +;                                     '</div>')                End_Procedure                            End_Object*/
36655>>>    
36655>>>            Object oTile2 is a cWebHtmlBox
36657>>>                Set pbServerOnClick to True
36658>>>                Set piColumnSpan to 6
36659>>>                Set psCSSClass to "Tile LightAlternate"
36660>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Listado de Colegios</div><div class="Tile_Subtitle"></div></div>'
36661>>>                Set psBackgroundColor to "Green"
36662>>>                Set psToolTip to "Colegios"
36663>>>                Set piColumnIndex to 3
36664>>>                                
36664>>>                WebRegisterPath ntNavigateForwardCustom oSelectSchoolHouse
36670>>>                
36670>>>                Procedure OnClick String sId String sParam
36673>>>                    Send NavigatePath
36674>>>                End_Procedure
36675>>>                
36675>>>            End_Object
36676>>>    
36676>>>            Object oTile3 is a cWebHtmlBox
36678>>>                Set pbServerOnClick to True
36679>>>                Set piColumnSpan to 6
36680>>>                Set psCSSClass to "Tile Dark"
36681>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Listado de Alumnos</div><div class="Tile_Subtitle"></div></div>'
36682>>>                Set psBackgroundColor to "Green"
36683>>>                Set psToolTip to "Alumnos"
36684>>>                Set piColumnIndex to 3
36685>>>    
36685>>>                WebRegisterPath ntNavigateForwardCustom oSelectStudent
36691>>>                
36691>>>                Procedure OnClick String sId String sParam
36694>>>                    Send NavigatePath
36695>>>                End_Procedure
36696>>>                
36696>>>            End_Object
36697>>>    
36697>>>/*            Object oTile4 is a cWebHtmlBox                Set pbServerOnClick to True                Set piColumnSpan to 6                Set piColumnIndex to 6                Set psCSSClass to "Tile DarkAlternate"                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 4</div><div class="Tile_Subtitle"></div></div>'                            // WebRegisterPath ntNavigateForwardCustom oYourViewName                                Procedure OnClick String sId String sParam                    Send NavigatePath                End_Procedure                            End_Object*/
36697>>>        End_Object
36698>>>    
36698>>>    End_Object
36699>>>    
36699>>>    Procedure OnBeforeShow
36702>>>        // Each time this view is shown we will update the appropriate information.
36702>>>    End_Procedure
36703>>>
36703>>>End_Object
36704>    Use SchoolHouse.wo
Including file: SchoolHouse.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\SchoolHouse.wo)
36704>>>// C:\DataFlex Projects\ColegioAppWeb\AppSrc\SchoolHouse.wo
36704>>>// Colegio
36704>>>//
36704>>>
36704>>>Use cWebView.pkg
36704>>>Use cWebPanel.pkg
36704>>>Use cWebMenuGroup.pkg
36704>>>Use cWebMenuItem.pkg
36704>>>Use cWebForm.pkg
36704>>>Use cWebTabContainer.pkg
36704>>>Use cWebTabPage.pkg
36704>>>Use cWebEdit.pkg
36704>>>
36704>>>Use cschoolhouseDataDictionary.dd
Including file: cschoolhouseDataDictionary.dd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\cschoolhouseDataDictionary.dd)
36704>>>>>Use DataDict.pkg
36704>>>>>
36704>>>>>//importar el archivo donde tenemos la funcion principal de validacion
36704>>>>>Use ValidarEmail.pkg
Including file: ValidarEmail.pkg    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\ValidarEmail.pkg)
36704>>>>>>>Use cJsonHttpTransfer.pkg
Including file: cJsonHttpTransfer.pkg    (C:\Program Files\DataFlex 24.0\Pkg\cJsonHttpTransfer.pkg)
36704>>>>>>>>>// DF JSON internet transfer class definitions.
36704>>>>>>>>>Use cHttpTransfer.pkg
Including file: cHttpTransfer.pkg    (C:\Program Files\DataFlex 24.0\Pkg\cHttpTransfer.pkg)
36704>>>>>>>>>>>Use VDFBase.pkg
36704>>>>>>>>>>>Use GlobalFunctionsProcedures.pkg
36704>>>>>>>>>>>
36704>>>>>>>>>>>External_Function WinAPI_HttpQueryInfo "HttpQueryInfoW" WinInet.dll ;    Handle hRequest ;    DWord dwInfoLevel ;    Pointer lpBuffer ;    Pointer lpdwBufferLength ;    Pointer lpdwIndex ;    Returns Integer
36705>>>>>>>>>>>
36705>>>>>>>>>>>/*BOOL InternetSetOptionW(  [in] HINTERNET hInternet,  [in] DWORD     dwOption,  [in] LPVOID    lpBuffer,  [in] DWORD     dwBufferLength);*/
36705>>>>>>>>>>>External_Function WinAPI_InternetSetOption "InternetSetOptionW" WinInet.dll ;    Handle hInternet ;    DWord dwOption ;    Pointer lpBuffer ;    DWord dwBufferLength ;    Returns Integer
36706>>>>>>>>>>>
36706>>>>>>>>>>>/*BOOL InternetQueryOptionW(  [in]      HINTERNET hInternet,  [in]      DWORD     dwOption,  [out]     LPVOID    lpBuffer,  [in, out] LPDWORD   lpdwBufferLength);*/
36706>>>>>>>>>>>External_Function WinAPI_InternetQueryOption "InternetQueryOptionW" WinInet.dll ;    Handle hInternet ;    DWord dwOption ;    Pointer lpBuffer ;    Pointer lpdwBufferLength ;    Returns Integer
36707>>>>>>>>>>>
36707>>>>>>>>>>>
36707>>>>>>>>>>>//  Available options for dwInfoLevel of WinAPI_HttpQueryInfo
36707>>>>>>>>>>>Define HTTP_QUERY_MIME_VERSION                for 0
36707>>>>>>>>>>>Define HTTP_QUERY_CONTENT_TYPE                for 1
36707>>>>>>>>>>>Define HTTP_QUERY_CONTENT_TRANSFER_ENCODING   for 2
36707>>>>>>>>>>>Define HTTP_QUERY_CONTENT_ID                  for 3
36707>>>>>>>>>>>Define HTTP_QUERY_CONTENT_DESCRIPTION         for 4
36707>>>>>>>>>>>Define HTTP_QUERY_CONTENT_LENGTH              for 5
36707>>>>>>>>>>>Define HTTP_QUERY_CONTENT_LANGUAGE            for 6
36707>>>>>>>>>>>Define HTTP_QUERY_ALLOW                       for 7
36707>>>>>>>>>>>Define HTTP_QUERY_PUBLIC                      for 8
36707>>>>>>>>>>>Define HTTP_QUERY_DATE                        for 9
36707>>>>>>>>>>>Define HTTP_QUERY_EXPIRES                     for 10
36707>>>>>>>>>>>Define HTTP_QUERY_LAST_MODIFIED               for 11
36707>>>>>>>>>>>Define HTTP_QUERY_MESSAGE_ID                  for 12
36707>>>>>>>>>>>Define HTTP_QUERY_URI                         for 13
36707>>>>>>>>>>>Define HTTP_QUERY_DERIVED_FROM                for 14
36707>>>>>>>>>>>Define HTTP_QUERY_COST                        for 15
36707>>>>>>>>>>>Define HTTP_QUERY_LINK                        for 16
36707>>>>>>>>>>>Define HTTP_QUERY_PRAGMA                      for 17
36707>>>>>>>>>>>Define HTTP_QUERY_VERSION                     for 18  // special: part of status line
36707>>>>>>>>>>>Define HTTP_QUERY_STATUS_CODE                 for 19  // special: part of status line
36707>>>>>>>>>>>Define HTTP_QUERY_STATUS_TEXT                 for 20  // special: part of status line
36707>>>>>>>>>>>Define HTTP_QUERY_RAW_HEADERS                 for 21  // special: all headers as ASCIIZ
36707>>>>>>>>>>>Define HTTP_QUERY_RAW_HEADERS_CRLF            for 22  // special: all headers
36707>>>>>>>>>>>Define HTTP_QUERY_CONNECTION                  for 23
36707>>>>>>>>>>>Define HTTP_QUERY_ACCEPT                      for 24
36707>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_CHARSET              for 25
36707>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_ENCODING             for 26
36707>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_LANGUAGE             for 27
36707>>>>>>>>>>>Define HTTP_QUERY_AUTHORIZATION               for 28
36707>>>>>>>>>>>Define HTTP_QUERY_CONTENT_ENCODING            for 29
36707>>>>>>>>>>>Define HTTP_QUERY_FORWARDED                   for 30
36707>>>>>>>>>>>Define HTTP_QUERY_FROM                        for 31
36707>>>>>>>>>>>Define HTTP_QUERY_IF_MODIFIED_SINCE           for 32
36707>>>>>>>>>>>Define HTTP_QUERY_LOCATION                    for 33
36707>>>>>>>>>>>Define HTTP_QUERY_ORIG_URI                    for 34
36707>>>>>>>>>>>Define HTTP_QUERY_REFERER                     for 35
36707>>>>>>>>>>>Define HTTP_QUERY_RETRY_AFTER                 for 36
36707>>>>>>>>>>>Define HTTP_QUERY_SERVER                      for 37
36707>>>>>>>>>>>Define HTTP_QUERY_TITLE                       for 38
36707>>>>>>>>>>>Define HTTP_QUERY_USER_AGENT                  for 39
36707>>>>>>>>>>>Define HTTP_QUERY_WWW_AUTHENTICATE            for 40
36707>>>>>>>>>>>Define HTTP_QUERY_PROXY_AUTHENTICATE          for 41
36707>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_RANGES               for 42
36707>>>>>>>>>>>Define HTTP_QUERY_SET_COOKIE                  for 43
36707>>>>>>>>>>>Define HTTP_QUERY_COOKIE                      for 44
36707>>>>>>>>>>>Define HTTP_QUERY_REQUEST_METHOD              for 45  // special: GET/POST etc.
36707>>>>>>>>>>>Define HTTP_QUERY_REFRESH                     for 46
36707>>>>>>>>>>>Define HTTP_QUERY_CONTENT_DISPOSITION         for 47
36707>>>>>>>>>>>
36707>>>>>>>>>>>
36707>>>>>>>>>>>Class cHttpTransfer is a cBaseHttpTransfer
36708>>>>>>>>>>>    
36708>>>>>>>>>>>    Function HttpPostRequest String sFilePath String sData Integer bDataIsFile Returns Integer
36710>>>>>>>>>>>        Integer bStat
36710>>>>>>>>>>>        Get HttpPostAddrRequest sFilePath (AddressOf(sData)) (SizeOfString(sData)) bDataIsfile to bStat
36711>>>>>>>>>>>        Function_Return bStat
36712>>>>>>>>>>>    End_Function
36713>>>>>>>>>>>    
36713>>>>>>>>>>>    // This event is triggered from the runtime. It now uses UChar arrays as the data might 
36713>>>>>>>>>>>    // not be a valid string (it can be any binary data). It still calls the original event for 
36713>>>>>>>>>>>    // backwards compatibility.
36713>>>>>>>>>>>    Procedure OnDataReceivedUC String sContentType UChar[] ucData
36715>>>>>>>>>>>        Send OnDataReceived sContentType (UCharArrayToString(ucData))
36716>>>>>>>>>>>    End_Procedure
36717>>>>>>>>>>>    
36717>>>>>>>>>>>    // Only use this event if you know for sure the data is a string and make sure piBufferSize is
36717>>>>>>>>>>>    // smaller than the argument size.
36717>>>>>>>>>>>    Procedure OnDataReceived String sContentType String sData
36719>>>>>>>>>>>        
36719>>>>>>>>>>>    End_Procedure
36720>>>>>>>>>>>    
36720>>>>>>>>>>>    // Called just before the request is sent. Use this message to set options to the RequestHandle if nessecary.
36720>>>>>>>>>>>    Procedure OnPreSendRequest 
36722>>>>>>>>>>>        
36722>>>>>>>>>>>    End_Procedure
36723>>>>>>>>>>>    
36723>>>>>>>>>>>    Function HttpPutRequest String sFilePath String sData Integer bDataIsFile Returns Integer
36725>>>>>>>>>>>        Integer bStat
36725>>>>>>>>>>>        Get HttpPutAddrRequest sFilePath (AddressOf(sData)) (SizeOfString(sData)) bDataIsfile to bStat
36726>>>>>>>>>>>        Function_Return bStat
36727>>>>>>>>>>>    End_Function
36728>>>>>>>>>>>    
36728>>>>>>>>>>>    // Retrieve header information associated with the previous request.
36728>>>>>>>>>>>    Function QueryInfo DWord dwInfoLevel Returns String
36730>>>>>>>>>>>        Handle hRequestHandle
36730>>>>>>>>>>>        WString wResult
36730>>>>>>>>>>>        Integer iBufferSize iRes iVoid
36730>>>>>>>>>>>
36730>>>>>>>>>>>        Get RequestHandle to hRequestHandle
36731>>>>>>>>>>>        
36731>>>>>>>>>>>        If (hRequestHandle) Begin
36733>>>>>>>>>>>            Move 200 to iBufferSize
36734>>>>>>>>>>>            Move (Repeat(" ", iBufferSize)) to wResult
36735>>>>>>>>>>>            Move (WinAPI_HttpQueryInfo(hRequestHandle, dwInfoLevel, AddressOf(wResult), AddressOf(iBufferSize), 0)) to iRes
36736>>>>>>>>>>>            
36736>>>>>>>>>>>            If (not(iRes) and GetLastError() = 122) Begin //  Insufficient buffersize, retry with received iBufferSize value
36738>>>>>>>>>>>                Increment iBufferSize      
36739>>>>>>>>>>>                
36739>>>>>>>>>>>                Move (Repeat(" ", iBufferSize)) to wResult
36740>>>>>>>>>>>                Move (WinAPI_HttpQueryInfo(hRequestHandle, dwInfoLevel, AddressOf(wResult), AddressOf(iBufferSize), 0)) to iRes  
36741>>>>>>>>>>>            End
36741>>>>>>>>>>>>
36741>>>>>>>>>>>            
36741>>>>>>>>>>>            If (not(iRes)) Begin
36743>>>>>>>>>>>                Move (ShowLastError()) to iVoid
36744>>>>>>>>>>>            End
36744>>>>>>>>>>>>
36744>>>>>>>>>>>        End
36744>>>>>>>>>>>>
36744>>>>>>>>>>>        
36744>>>>>>>>>>>        Function_Return (CString(wResult))
36745>>>>>>>>>>>    End_Function
36746>>>>>>>>>>>    
36746>>>>>>>>>>>    // Returns the statustext returned by the previous request.
36746>>>>>>>>>>>    Function ResponseStatusText Returns String
36748>>>>>>>>>>>        String sStatus
36748>>>>>>>>>>>        
36748>>>>>>>>>>>        Get QueryInfo HTTP_QUERY_STATUS_TEXT to sStatus
36749>>>>>>>>>>>        
36749>>>>>>>>>>>        Function_Return sStatus
36750>>>>>>>>>>>    End_Function
36751>>>>>>>>>>>    
36751>>>>>>>>>>>End_Class
36752>>>>>>>>>Use cJsonObject.pkg
36752>>>>>>>>>Use GlobalFunctionsProcedures.pkg
36752>>>>>>>>>
36752>>>>>>>>>// these define the three characters that define BOM for utf8.
36752>>>>>>>>>// These serve no purpos and are rarely used. If used they must be removed
36752>>>>>>>>>Define C_BOM1 for |CI$EF
36752>>>>>>>>>Define C_BOM2 for |CI$BB
36752>>>>>>>>>Define C_BOM3 for |CI$BF
36752>>>>>>>>>
36752>>>>>>>>>
36752>>>>>>>>>
36752>>>>>>>>>// define JSON transfer status codes used by peJsonTransferStatus
36752>>>>>>>>>Enum_List
36752>>>>>>>>>    Define jtsOk                 // ok
36752>>>>>>>>>    Define jtsHttpRequestFailed  // the post/get http request returned an error
36752>>>>>>>>>    Define jtsInvalidContentType // response content type not JSON
36752>>>>>>>>>    Define jtsNotJson            // return value not JSON (could not load in object)
36752>>>>>>>>>    Define jtsError              // unspecified return error
36752>>>>>>>>>End_Enum_List
36752>>>>>>>>>
36752>>>>>>>>>
36752>>>>>>>>>Class cJsonHttpTransfer is a cHttpTransfer
36753>>>>>>>>>    
36753>>>>>>>>>    Procedure Construct_Object
36755>>>>>>>>>        Forward Send Construct_object
36757>>>>>>>>>        
36757>>>>>>>>>        Property String  psContentTypeSent "application/json; charset=utf-8"     // default content type for posted data
36758>>>>>>>>>        
36758>>>>>>>>>        Property Boolean pbClearHeaders      True         // should headers always be cleared after a post
36759>>>>>>>>>        
36759>>>>>>>>>        Property UChar[] pucDataReceived                 // maintained by object
36760>>>>>>>>>        
36760>>>>>>>>>        Property String  psContentTypeReceived ''         // content type received
36761>>>>>>>>>        
36761>>>>>>>>>        Property String  psJsonParseError ''              // Set if response JSON can't be parsed
36762>>>>>>>>>        
36762>>>>>>>>>        Property String  psContentTypeExpected 'application/json' // content type received - expected value should be contained in here.
36763>>>>>>>>>        
36763>>>>>>>>>        Property Integer peJsonTransferStatus jtsOk
36764>>>>>>>>>        
36764>>>>>>>>>        // if true, the http post does not happend and whatever was posted is just returned as a copy.
36764>>>>>>>>>        // Good for internal Testing
36764>>>>>>>>>        Property Boolean pbPostLoopTest False
36765>>>>>>>>>        
36765>>>>>>>>>        Set piBufferSize to -1  //  No chunking needed
36766>>>>>>>>>    End_Procedure
36767>>>>>>>>>    
36767>>>>>>>>>    // private helper function. Convert data passed by pointer to an JSON document.
36767>>>>>>>>>    // return 0, if error
36767>>>>>>>>>    //
36767>>>>>>>>>    Function UCharDatatoJson UChar[] ucJson Returns Handle
36769>>>>>>>>>        Integer iVoid bOk
36769>>>>>>>>>        Handle hoJson
36769>>>>>>>>>        String sError
36769>>>>>>>>>        Get Create of Desktop (RefClass(cJsonObject)) to hoJson
36770>>>>>>>>>        Get ParseUTF8 of hoJson ucJson to bOk
36771>>>>>>>>>        If not bOk Begin
36773>>>>>>>>>            // store the JSON parse error info
36773>>>>>>>>>            Get psParseError of hoJson to sError
36774>>>>>>>>>            Set psJsonParseError to sError
36775>>>>>>>>>            Send Destroy of hoJson
36776>>>>>>>>>            Move 0 to hoJson
36777>>>>>>>>>        End
36777>>>>>>>>>>
36777>>>>>>>>>        Function_Return hoJson
36778>>>>>>>>>    End_Function
36779>>>>>>>>>    
36779>>>>>>>>>    // Clear pucDataReceived
36779>>>>>>>>>    Procedure ClearDataReceived
36781>>>>>>>>>        UChar[] ucEmpty
36782>>>>>>>>>        
36782>>>>>>>>>        Set pucDataReceived to ucEmpty
36783>>>>>>>>>        Set psJsonParseError to ''
36784>>>>>>>>>    End_Procedure
36785>>>>>>>>>    
36785>>>>>>>>>    // augment to release any memor
36785>>>>>>>>>    Procedure Destroy_Object
36787>>>>>>>>>        Send ClearDataReceived
36788>>>>>>>>>        Forward Send Destroy_object
36790>>>>>>>>>    End_Procedure
36791>>>>>>>>>    
36791>>>>>>>>>    // called during http transfer. Take passed data and append to pucDataReceived.
36791>>>>>>>>>    // If new transfer save contenttype.
36791>>>>>>>>>    Procedure OnDataReceivedUC String sContentType UChar[] ucData
36793>>>>>>>>>        UChar[] ucBuffer
36794>>>>>>>>>        Integer iDataLen
36794>>>>>>>>>        
36794>>>>>>>>>        Move (SizeOfArray(ucData)) to iDataLen
36795>>>>>>>>>        
36795>>>>>>>>>        If (iDataLen > 0) Begin
36797>>>>>>>>>            Get pucDataReceived to ucBuffer
36798>>>>>>>>>            If (SizeOfArray(ucBuffer) > 0) Begin
36800>>>>>>>>>                Set pucDataReceived to (AppendArray(ucBuffer, ucData))
36801>>>>>>>>>            End
36801>>>>>>>>>>
36801>>>>>>>>>            Else Begin
36802>>>>>>>>>                Set psContentTypeReceived to sContentType
36803>>>>>>>>>                
36803>>>>>>>>>                If (iDataLen > 3 and ucData[0]=C_BOM1 and ucData[1]=C_BOM2 and ucData[2]=C_BOM3) Begin
36805>>>>>>>>>                    Set pucDataReceived to (CopyArray(ucData, 3, iDataLen - 1))
36806>>>>>>>>>                End
36806>>>>>>>>>>
36806>>>>>>>>>                Else Begin
36807>>>>>>>>>                    Set pucDataReceived to ucData
36808>>>>>>>>>                End
36808>>>>>>>>>>
36808>>>>>>>>>            End
36808>>>>>>>>>>
36808>>>>>>>>>        End
36808>>>>>>>>>>
36808>>>>>>>>>    End_Procedure
36809>>>>>>>>>    
36809>>>>>>>>>    Function LoopDataBack UChar[] ucData Returns Boolean
36811>>>>>>>>>        Pointer pInData
36811>>>>>>>>>        Boolean bOk
36811>>>>>>>>>        
36811>>>>>>>>>        Set pucDataReceived to ucData
36812>>>>>>>>>        Set psContentTypeReceived to (psContentTypeExpected(Self))
36813>>>>>>>>>        
36813>>>>>>>>>        Function_Return True
36814>>>>>>>>>    End_Function
36815>>>>>>>>>    
36815>>>>>>>>>    
36815>>>>>>>>>    Function HttpVerbJsonAddrExec String sHost String sFilePath Pointer pJson Integer iLen String sVerb  Returns Boolean
36817>>>>>>>>>        Boolean bOk
36817>>>>>>>>>        Integer iError
36817>>>>>>>>>        String sContentType
36817>>>>>>>>>        
36817>>>>>>>>>        Send ClearDataReceived  // this should be zero, just in case it is not
36818>>>>>>>>>        Set psRemoteHost to sHost
36819>>>>>>>>>        
36819>>>>>>>>>        Get psContentTypeSent to sContentType
36820>>>>>>>>>        If (iLen > 0 and sContentType <> "") Begin
36822>>>>>>>>>            Get AddHeader "Content-Type" sContentType to bok
36823>>>>>>>>>        End
36823>>>>>>>>>>
36823>>>>>>>>>        Get HttpVerbAddrRequest sFilePath pJson iLen False sVerb to bOK
36824>>>>>>>>>        
36824>>>>>>>>>        // You need to clear headers between posts. If you need to set custom headers you should
36824>>>>>>>>>        // set pbClearHeaders to false and then manually send ClearHeaders and AddHeaders in your code
36824>>>>>>>>>        If (pbClearHeaders(Self)) ;            Send ClearHeaders
36827>>>>>>>>>        
36827>>>>>>>>>        
36827>>>>>>>>>        Function_Return bOk
36828>>>>>>>>>    End_Function
36829>>>>>>>>>    
36829>>>>>>>>>    // We assume but do not verify that the data in ucJson is actually UTF8 JSON
36829>>>>>>>>>    Function HttpVerbJsonUChar String sHost String sFilePath UChar[] ucJson String sVerb Returns UChar[]
36831>>>>>>>>>        Integer iLen
36831>>>>>>>>>        Boolean bOk
36831>>>>>>>>>        UChar[] ucJsonReceived
36832>>>>>>>>>        String sContentTypeReceived sContentTypeExpected
36832>>>>>>>>>        
36832>>>>>>>>>        Move (SizeOfArray(ucJson)) to iLen
36833>>>>>>>>>        
36833>>>>>>>>>        If (pbPostLoopTest(Self)) Begin
36835>>>>>>>>>            Get LoopDataBack ucJson to bOk
36836>>>>>>>>>        End
36836>>>>>>>>>>
36836>>>>>>>>>        Else Begin
36837>>>>>>>>>            Get HttpVerbJsonAddrExec sHost sFilePath (AddressOf(ucJson)) iLen sVerb to bOk
36838>>>>>>>>>        End
36838>>>>>>>>>>
36838>>>>>>>>>                
36838>>>>>>>>>        If bOk Begin
36840>>>>>>>>>            Set peJsonTransferStatus to jtsOk
36841>>>>>>>>>            Get pucDataReceived to ucJsonReceived
36842>>>>>>>>>            
36842>>>>>>>>>            If (SizeOfArray(ucJsonReceived) > 0) Begin
36844>>>>>>>>>                // we have data, check that the content type is ok. This is as far
36844>>>>>>>>>                // as we can go here.
36844>>>>>>>>>                Get psContentTypeReceived to sContentTypeReceived
36845>>>>>>>>>                Get psContentTypeExpected to sContentTypeExpected
36846>>>>>>>>>                // If contentType expected is empty, we allow anything
36846>>>>>>>>>                If (sContentTypeExpected<>"" and pos(lowercase(sContentTypeExpected),lowercase(sContentTypeReceived))=0) Begin
36848>>>>>>>>>                    Set peJsonTransferStatus to jtsInvalidContentType
36849>>>>>>>>>                End
36849>>>>>>>>>>
36849>>>>>>>>>            End
36849>>>>>>>>>>
36849>>>>>>>>>        End
36849>>>>>>>>>>
36849>>>>>>>>>        Else Begin
36850>>>>>>>>>            Set peJsonTransferStatus to jtsHttpRequestFailed
36851>>>>>>>>>        End
36851>>>>>>>>>>
36851>>>>>>>>>                
36851>>>>>>>>>        Function_Return ucJsonReceived
36852>>>>>>>>>    End_Function
36853>>>>>>>>>    
36853>>>>>>>>>    // Generic HTTP Request - it is passed the Verb. Used by all other http requests
36853>>>>>>>>>    Function HttpVerbJson  String sHost String sFilePath Handle  hoJsonRequest String sVerb Boolean ByRef bOk Returns Handle
36855>>>>>>>>>        UChar[] ucJsonRequest ucJsonResponse
36857>>>>>>>>>        Handle hoJsonResponse
36857>>>>>>>>>        Integer eStat
36857>>>>>>>>>        
36857>>>>>>>>>        If (hoJsonRequest<>0) Begin
36859>>>>>>>>>            Get StringifyUTF8 of hoJsonRequest to ucJsonRequest
36860>>>>>>>>>        End
36860>>>>>>>>>>
36860>>>>>>>>>        
36860>>>>>>>>>        Get HttpVerbJsonUChar sHost sFilePath ucJsonRequest sVerb to ucJsonResponse
36861>>>>>>>>>        
36861>>>>>>>>>        If (SizeOfArray(ucJsonResponse)) Begin
36863>>>>>>>>>            Get UCharDatatoJson ucJsonResponse to hoJsonResponse
36864>>>>>>>>>            If (hoJsonResponse=0) Begin
36866>>>>>>>>>                // this indicates that data was returned but it could not be loaded as Json
36866>>>>>>>>>                Set peJsonTransferStatus to jtsNotJson
36867>>>>>>>>>                // note bad data is still is ppDataReceived (might be useful for debugging)
36867>>>>>>>>>            End
36867>>>>>>>>>>
36867>>>>>>>>>        End
36867>>>>>>>>>>
36867>>>>>>>>>        
36867>>>>>>>>>        // return Ok status by reference
36867>>>>>>>>>        Get peJsonTransferStatus to eStat
36868>>>>>>>>>        Move (eStat=jtsOk) to bOk
36869>>>>>>>>>        
36869>>>>>>>>>        Function_Return hoJsonResponse
36870>>>>>>>>>    End_Function
36871>>>>>>>>>    
36871>>>>>>>>>    Function HttpPostJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
36873>>>>>>>>>        Handle hoJson
36873>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "POST" (&bOk) to hoJson
36874>>>>>>>>>        Function_Return hoJson
36875>>>>>>>>>    End_Function
36876>>>>>>>>>    
36876>>>>>>>>>    Function HttpGetJson String sHost String sFilePath Boolean ByRef bOk Returns Handle
36878>>>>>>>>>        Pointer pJson
36878>>>>>>>>>        Integer iVoid iLen
36878>>>>>>>>>        Handle hoJson
36878>>>>>>>>>        Get HttpVerbJson sHost sFilePath 0 "GET" (&bOk) to hoJson
36879>>>>>>>>>        Function_Return hoJson
36880>>>>>>>>>    End_Function
36881>>>>>>>>>    
36881>>>>>>>>>    Function HttpPutJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
36883>>>>>>>>>        Handle hoJson
36883>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "PUT" (&bOk) to hoJson
36884>>>>>>>>>        Function_Return hoJson
36885>>>>>>>>>    End_Function
36886>>>>>>>>>    
36886>>>>>>>>>    Function HttpDeleteJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
36888>>>>>>>>>        Handle hoJson
36888>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "DELETE" (&bOk) to hoJson
36889>>>>>>>>>        Function_Return hoJson
36890>>>>>>>>>    End_Function
36891>>>>>>>>>    
36891>>>>>>>>>    Function HttpPatchJson  String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
36893>>>>>>>>>        Handle hoJson
36893>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "PATCH" (&bOk) to hoJson
36894>>>>>>>>>        Function_Return hoJson
36895>>>>>>>>>    End_Function
36896>>>>>>>>>    
36896>>>>>>>>>    // After an Json xfer request this message can be sent to display an error message if one occurred.
36896>>>>>>>>>    // Normally you would first check peJsonTransferStatus to see if it is not jtsOk. If not, send
36896>>>>>>>>>    // LastError to see the error
36896>>>>>>>>>    
36896>>>>>>>>>    // return last JSON transfer error text
36896>>>>>>>>>    Function TransferErrorDescription Returns String
36898>>>>>>>>>        String  sError sJsonError
36898>>>>>>>>>        Integer eJsonTransferStatus
36898>>>>>>>>>        Get peJsonTransferStatus to eJsonTransferStatus
36899>>>>>>>>>        Get psJsonParseError to sJsonError
36900>>>>>>>>>        Case Begin
36900>>>>>>>>>            Case (eJsonTransferStatus=jtsOk) ;                Move '' to sError
36903>>>>>>>>>            Case (eJsonTransferStatus=jtsHttpRequestFailed) ;                Move C_$HttpRequestFailed to sError
36907>>>>>>>>>            Case (eJsonTransferStatus=jtsInvalidContentType) ;                Move (SFormat(C_$InvalidContentTypeReceived,psContentTypeReceived(Self))) to sError
36911>>>>>>>>>            Case (eJsonTransferStatus=jtsNotJson) ;                Move (C_$ReceivedDataNotInJsonFormat * sJsonError) to sError
36915>>>>>>>>>            Case Else ;                Move C_$ReceivedDataIsBad to sError
36917>>>>>>>>>        Case End
36917>>>>>>>>>        Function_Return sError
36918>>>>>>>>>    End_Function
36919>>>>>>>>>    
36919>>>>>>>>>    // can be send to raise an error.
36919>>>>>>>>>    Procedure LastError
36921>>>>>>>>>        Integer eJsonTransferStatus
36921>>>>>>>>>        String sError
36921>>>>>>>>>        
36921>>>>>>>>>        Get peJsonTransferStatus to eJsonTransferStatus
36922>>>>>>>>>        If (eJsonTransferStatus<>jtsOk) Begin
36924>>>>>>>>>            Get TransferErrorDescription to sError
36925>>>>>>>>>            Error DFERR_JSON_HTTP sError
36926>>>>>>>>>>
36926>>>>>>>>>        End
36926>>>>>>>>>>
36926>>>>>>>>>    End_Procedure
36927>>>>>>>>>    
36927>>>>>>>>>    
36927>>>>>>>>>End_Class
36928>>>>>>>
36928>>>>>>>Define cValidos for "ABCDEFGHIJKLMNÑOPQRSTUVWXYZ0123456789._-"
36928>>>>>>>
36928>>>>>>>
36928>>>>>>>Function ValidarEmail String sEmail Returns Boolean
36931>>>>>>>    Boolean bRet
36931>>>>>>>    Move (Uppercase(sEmail)) to sEmail
36932>>>>>>>    Move (Trim(sEmail)) to sEmail
36933>>>>>>>//-----------------------------------------------------------------------------------------------    
36933>>>>>>>    
36933>>>>>>>//-------------------------------------detecta cadena vacia    
36933>>>>>>>    If (sEmail="")Begin
36935>>>>>>>        Send Info_Box "Escribe algo miarma" "ERROR"
36936>>>>>>>        Function_Return False
36937>>>>>>>    End
36937>>>>>>>>
36937>>>>>>>    //--------------
36937>>>>>>>    
36937>>>>>>>    
36937>>>>>>>//-------------------------------------valiada total de caracteres < 256
36937>>>>>>>    If (Length(sEmail)>=256)Begin
36939>>>>>>>        Send Info_Box "La extensión total no debe superar los 256 caracteres" "ERROR"
36940>>>>>>>        Function_Return False
36941>>>>>>>    End
36941>>>>>>>>
36941>>>>>>>    //-------------
36941>>>>>>>
36941>>>>>>>
36941>>>>>>>//------------------------------------NO comienza ni termina con punto
36941>>>>>>>    If (Left(sEmail,1)="." or Right(sEmail,1)=".")Begin
36943>>>>>>>        Send Info_Box "Un Email no puede empezar ni terminar en punto '.'" "Error"
36944>>>>>>>        Function_Return False
36945>>>>>>>    End
36945>>>>>>>>
36945>>>>>>>    //------------
36945>>>>>>>    
36945>>>>>>>//------------------------------------Verificar puntos CONSECUTIVOS
36945>>>>>>>    If (Pos("..", sEmail) > 0) Begin
36947>>>>>>>        Send Info_Box "No puede haber nunca dos o más puntos '.' seguidos" "ERROR"
36948>>>>>>>        Function_Return False
36949>>>>>>>    End
36949>>>>>>>>
36949>>>>>>>    //---------
36949>>>>>>>
36949>>>>>>>//------------------------------------Verificar si el email contiene "@" correctamente
36949>>>>>>>    Get ValidarArroba sEmail to bRet
36950>>>>>>>    
36950>>>>>>>    If (not(bRet)) Begin
36952>>>>>>>        Send Info_Box "El email debe contener uno y solo un @" "ERROR"
36953>>>>>>>        Function_Return False
36954>>>>>>>    End
36954>>>>>>>>
36954>>>>>>>    //----------
36954>>>>>>>    
36954>>>>>>>//-------------------------------------Verificar si la parte LOCAL tiene entre 1 y 64 caracteres    
36954>>>>>>>    Get LongitudParteLocal sEmail to bRet
36955>>>>>>>    
36955>>>>>>>    If (not(bRet)) Begin
36957>>>>>>>        Send Info_Box "La longitud antes del @ no es válida\nTiene que tener entre 1 y 64 caracteres" "ERROR"
36958>>>>>>>        Function_Return False
36959>>>>>>>    End
36959>>>>>>>>
36959>>>>>>>    //---------
36959>>>>>>>    
36959>>>>>>>//-------------------------------------Verificar si la parte DOMINIO tiene entre 4 y 255 caracteres
36959>>>>>>>    Get LongitudParteDominio sEmail to bRet
36960>>>>>>>    
36960>>>>>>>    If (not(bRet)) Begin
36962>>>>>>>        Send Info_Box "La longitud DESPUES del @ no es válida\ntiene que tener entre 4 y 255 caracteres\nAcabado en punto y la extensión" "ERROR"
36963>>>>>>>        Function_Return False
36964>>>>>>>    End
36964>>>>>>>>
36964>>>>>>>    //---------
36964>>>>>>>    
36964>>>>>>>//-------------------------------------Verificar primer digito de cada parte Alfanumerico
36964>>>>>>>    Get PrimerAlfanumerico sEmail to bRet
36965>>>>>>>    
36965>>>>>>>    If (not(bRet)) Begin
36967>>>>>>>        Send Info_Box "El PRIMER CARACTER de la parte LOCAL y de la parte despues del @\ntiene que ser LETRA o NÚMERO" "ERROR"
36968>>>>>>>        Function_Return False
36969>>>>>>>    End
36969>>>>>>>>
36969>>>>>>>
36969>>>>>>>//------------------------------------verificar que todos los digitos sean válidos
36969>>>>>>>    Get DigitosValidos sEmail to bRet
36970>>>>>>>    
36970>>>>>>>    If (not(bRet))Begin
36972>>>>>>>        Send Info_Box "Los unicos simbolos válidos son: .   _  - " "ERROR"
36973>>>>>>>        Function_Return False
36974>>>>>>>    End
36974>>>>>>>>
36974>>>>>>>    //----------
36974>>>>>>>    
36974>>>>>>>//----------------------------------verificar la longitud de la extensión
36974>>>>>>>    Get Extension sEmail to bRet
36975>>>>>>>    
36975>>>>>>>    If (not(bRet)) Begin
36977>>>>>>>        Send Info_Box "la extension debe estar entre 2 y 4 caracteres" "ERROR"
36978>>>>>>>        Function_Return False
36979>>>>>>>    End
36979>>>>>>>>
36979>>>>>>>    //---------
36979>>>>>>>    
36979>>>>>>>    
36979>>>>>>>//---------------------------------verificar el Email desde la API (NEUTRINO)
36979>>>>>>>    Get ValidacionAPI sEmail to bRet
36980>>>>>>>
36980>>>>>>>    Function_Return bRet
36981>>>>>>>
36981>>>>>>>//---------------------------------------------------------------------------------------------------
36981>>>>>>>    Function_Return True
36982>>>>>>>End_Function
36983>>>>>>>
36983>>>>>>>//----------------------------------Función para verificar si el email contiene al menos y solo un "@".
36983>>>>>>>Function ValidarArroba String sEmail Returns Boolean
36986>>>>>>>    Integer iCount iArrobaCount
36986>>>>>>>    Boolean bRet
36986>>>>>>>    
36986>>>>>>>    // Inicializar el contador de "@" a cero
36986>>>>>>>    Move 0 to iArrobaCount
36987>>>>>>>    
36987>>>>>>>    // Contar el número de "@" en el email
36987>>>>>>>    For iCount from 1 to (Length(sEmail))
36993>>>>>>>>
36993>>>>>>>        If (Mid(sEmail, 1, iCount) = "@") Begin
36995>>>>>>>            // Incrementar el contador de "@" si se encuentra uno
36995>>>>>>>            Increment iArrobaCount
36996>>>>>>>        End
36996>>>>>>>>
36996>>>>>>>    Loop
36997>>>>>>>>
36997>>>>>>>    
36997>>>>>>>    // Verificar si hay exactamente un "@" en el email
36997>>>>>>>    If (iArrobaCount = 1) Begin
36999>>>>>>>        // Si hay exactamente un "@" devuelve verdadero
36999>>>>>>>        Move True to bRet
37000>>>>>>>    End
37000>>>>>>>>
37000>>>>>>>    Else Begin
37001>>>>>>>        // Si hay mas de un "@" devolver falso
37001>>>>>>>        Move False to bRet
37002>>>>>>>    End
37002>>>>>>>>
37002>>>>>>>    
37002>>>>>>>    // Retornar el resultado de la validación, si solo hay un @ devuelve verdadero.
37002>>>>>>>    Function_Return bRet
37003>>>>>>>End_Function
37004>>>>>>>
37004>>>>>>>//----------------------------------Función para verificar la longitud de la parte local del email.
37004>>>>>>>Function LongitudParteLocal String sEmail Returns Boolean
37007>>>>>>>    Integer iPos
37007>>>>>>>    String sParteLocal
37007>>>>>>>    Boolean bRet
37007>>>>>>>
37007>>>>>>>    // Encontrar la posición del "@" en el correo electrónico
37007>>>>>>>    Move (Pos("@", sEmail)) to iPos
37008>>>>>>>    
37008>>>>>>>    // Extraer la parte local del correo electrónico
37008>>>>>>>    Move (Left(sEmail, iPos - 1)) to sParteLocal
37009>>>>>>>    
37009>>>>>>>    // Verificar si la longitud de la parte local es válida
37009>>>>>>>    If (Length(sParteLocal) >= 1 and Length(sParteLocal) <= 64) Begin
37011>>>>>>>        // Si la longitud es correcta, devolver verdadero
37011>>>>>>>        Move True to bRet
37012>>>>>>>    End
37012>>>>>>>>
37012>>>>>>>    Else Begin
37013>>>>>>>        // Si la longitud no es válida, devolver falso
37013>>>>>>>        Move False to bRet
37014>>>>>>>    End
37014>>>>>>>>
37014>>>>>>>    
37014>>>>>>>    Function_Return bRet
37015>>>>>>>End_Function
37016>>>>>>>
37016>>>>>>>//----------------------------------Función para verificar la longitud de la parte de DOMINIO del email.
37016>>>>>>>Function LongitudParteDominio String sEmail Returns Boolean
37019>>>>>>>    Integer iPos iPunto
37019>>>>>>>    String sParteDominio
37019>>>>>>>    Boolean bRet
37019>>>>>>>
37019>>>>>>>    // Encontrar la posición del "@" en el correo electrónico
37019>>>>>>>    Move (Pos("@", sEmail)) to iPos
37020>>>>>>>    
37020>>>>>>>    // Extraer la parte de dominio del correo electrónico
37020>>>>>>>    Move (Mid(sEmail, 255, iPos + 1)) to sParteDominio
37021>>>>>>>    Move (RightPos(".", sParteDominio)) to iPunto
37022>>>>>>>    
37022>>>>>>>    // verificar si antes del el ultimo punto hay mas de 4 caracteres
37022>>>>>>>    If (iPunto < 5) Begin
37024>>>>>>>        Move False to bRet
37025>>>>>>>        Function_Return bRet
37026>>>>>>>    End
37026>>>>>>>>
37026>>>>>>>    
37026>>>>>>>    // Verificar si la longitud de la parte de dominio es válida
37026>>>>>>>    If (Length(sParteDominio) >= 4 and Length(sParteDominio) <= 255) Begin
37028>>>>>>>        // Si la longitud es válida, devolver verdadero
37028>>>>>>>        Move True to bRet
37029>>>>>>>    End
37029>>>>>>>>
37029>>>>>>>    Else Begin
37030>>>>>>>        // Si la longitud no es válida, devolver falso
37030>>>>>>>        Move False to bRet
37031>>>>>>>    End
37031>>>>>>>>
37031>>>>>>>    
37031>>>>>>>    // Retornar el resultado de la validación
37031>>>>>>>    Function_Return bRet
37032>>>>>>>End_Function
37033>>>>>>>
37033>>>>>>>
37033>>>>>>>//------------------------------------------------verificar la extension del dominio
37033>>>>>>>Function Extension String sEmail Returns Boolean
37036>>>>>>>    Boolean bRet
37036>>>>>>>    String sParteDominio sExten
37036>>>>>>>    Integer iPos iPunto iLongExten
37036>>>>>>>    
37036>>>>>>>    // Encontrar la posición del "@" en el correo electrónico
37036>>>>>>>    Move (Pos("@", sEmail)) to iPos
37037>>>>>>>    // Extraer la parte de dominio del correo electrónico
37037>>>>>>>    Move (Mid(sEmail, 255, iPos + 1)) to sParteDominio
37038>>>>>>>    //---------esta sentencia me dice cual el es ultimo punto de la cadena
37038>>>>>>>    Move (RightPos(".", sParteDominio)) to iPunto
37039>>>>>>>    
37039>>>>>>>    // Extraer la parte de la extensión del correo electrónico
37039>>>>>>>    Move (Mid(sParteDominio, 5, iPunto+1)) to sExten
37040>>>>>>>    
37040>>>>>>>    // Calcular la longitud total de la extensión
37040>>>>>>>    Move (Length(sExten)) to iLongExten
37041>>>>>>>    
37041>>>>>>>    // Verificar si la longitud de la parte del dominio del correo electrónico es superior a 2
37041>>>>>>>    Move True to bRet
37042>>>>>>>    If (iLongExten < 2 or iLongExten > 4) Begin
37044>>>>>>>        Move False to bRet
37045>>>>>>>        Function_Return bRet
37046>>>>>>>    End
37046>>>>>>>>
37046>>>>>>>    
37046>>>>>>>    Function_Return bRet    
37047>>>>>>>End_Function
37048>>>>>>>
37048>>>>>>>//----------------------------------Función para verificar que la parte local y la parte de dominio comiencen por letra o dígito
37048>>>>>>>Function PrimerAlfanumerico String sEmail Returns Boolean
37051>>>>>>>    Boolean bRet
37051>>>>>>>    Integer iCount iCount2 iPos
37051>>>>>>>    String sPrimerDL sPrimerDD sChar sChar2
37051>>>>>>>
37051>>>>>>>    //iniciamos el boleano como falso
37051>>>>>>>    Move False to bRet
37052>>>>>>>        
37052>>>>>>>    //declaramos el primer digito de cada parte
37052>>>>>>>    Move (Left(sEmail,1)) to sPrimerDL
37053>>>>>>>    
37053>>>>>>>    Move (Pos("@", sEmail)) to iPos
37054>>>>>>>    Move (Mid(sEmail, 1, iPos + 1)) to sPrimerDD
37055>>>>>>>    
37055>>>>>>>    //buscamos que el primer digito de la parte LOCAL coincida con la constante quitando los simbolos 
37055>>>>>>>    For iCount from 1 to (Length(cValidos)-3)
37061>>>>>>>>
37061>>>>>>>        Move (Mid(cValidos, 1, iCount)) to sChar
37062>>>>>>>            If (sChar = sPrimerDL)Begin
37064>>>>>>>                Move True to bRet  
37065>>>>>>>            End
37065>>>>>>>>
37065>>>>>>>            If (bRet) Begin
37067>>>>>>>               
37067>>>>>>>    //buscamos que el primer digito de la parte DOMINIO coincida con la constante quitando los simbolos
37067>>>>>>>            Move False to bRet
37068>>>>>>>        For iCount2 from 1 to (Length(cValidos)-3)
37074>>>>>>>>
37074>>>>>>>            Move (Mid(cValidos, 1, iCount2)) to sChar2
37075>>>>>>>                If (sChar2 = sPrimerDD)Begin
37077>>>>>>>                    Move True to bRet
37078>>>>>>>                    Function_Return bRet
37079>>>>>>>                 End
37079>>>>>>>>
37079>>>>>>>         Loop    
37080>>>>>>>>
37080>>>>>>>                
37080>>>>>>>            End      
37080>>>>>>>>
37080>>>>>>>    Loop
37081>>>>>>>>
37081>>>>>>>        Function_Return bRet
37082>>>>>>>End_Function
37083>>>>>>>
37083>>>>>>>
37083>>>>>>>//------------------------------------------Función para verificar que el resto de digitos sean válidos
37083>>>>>>>Function DigitosValidos String sEmail Returns Boolean
37086>>>>>>>    Boolean bRet
37086>>>>>>>    Integer iPos iPunto iCount iCount2 iCount3 iCount4
37086>>>>>>>    String sParteLocal sParteDominio sLocalChar sLocalChar2 sDominChar sDominChar2
37086>>>>>>>    
37086>>>>>>>    //----------------encontrar el arroba y dividir en partes
37086>>>>>>>    Move (Pos("@", sEmail)) to iPos
37087>>>>>>>    
37087>>>>>>>    //----------extraemos la parte local
37087>>>>>>>    Move (Left(sEmail, iPos - 1)) to sParteLocal
37088>>>>>>>    
37088>>>>>>>    //---------extraemos la parte dominio
37088>>>>>>>    Move (Mid(sEmail, 255, iPos + 1)) to sParteDominio
37089>>>>>>>
37089>>>>>>>
37089>>>>>>>    //---------------------------------verificar la parte LOCAL
37089>>>>>>>    For iCount from 1 to (Length(sParteLocal))
37095>>>>>>>>
37095>>>>>>>        Move (Mid(sParteLocal, 1, iCount)) to sLocalChar
37096>>>>>>>        Move False to bRet
37097>>>>>>>        For iCount2 from 1 to (Length(cValidos))
37103>>>>>>>>
37103>>>>>>>            Move (Mid(cValidos, 1, iCount2)) to sLocalChar2
37104>>>>>>>            If (sLocalChar = sLocalChar2) Begin
37106>>>>>>>                Move True to bRet
37107>>>>>>>            End
37107>>>>>>>>
37107>>>>>>>        Loop
37108>>>>>>>>
37108>>>>>>>        If (not (bRet)) Begin
37110>>>>>>>            Function_Return bRet
37111>>>>>>>        End
37111>>>>>>>>
37111>>>>>>>    Loop
37112>>>>>>>>
37112>>>>>>>
37112>>>>>>>
37112>>>>>>>    //------------------------------verificar la parte DOMINIO
37112>>>>>>>    For iCount3 from 1 to (Length(sParteDominio))
37118>>>>>>>>
37118>>>>>>>        Move (Mid(sParteDominio, 1, iCount3)) to sDominChar
37119>>>>>>>        Move False to bRet
37120>>>>>>>        For iCount4 from 1 to (Length(cValidos))
37126>>>>>>>>
37126>>>>>>>            Move (Mid(cValidos, 1, iCount4)) to sDominChar2
37127>>>>>>>            If (sDominChar = sDominChar2) Begin
37129>>>>>>>                Move True to bRet
37130>>>>>>>            End
37130>>>>>>>>
37130>>>>>>>        Loop
37131>>>>>>>>
37131>>>>>>>        If (not (bRet)) Begin
37133>>>>>>>            Function_Return bRet
37134>>>>>>>        End
37134>>>>>>>>
37134>>>>>>>    Loop
37135>>>>>>>>
37135>>>>>>>
37135>>>>>>>    Function_Return bRet
37136>>>>>>>End_Function
37137>>>>>>>
37137>>>>>>>//----------------------------------------------Función para validar el email desde una api (Neutrino)
37137>>>>>>>Function ValidacionAPI String sEmail Returns Boolean
37140>>>>>>>    Handle hoHttp hoJsonRequest hoResponse
37140>>>>>>>    Boolean bRet bIsnull
37140>>>>>>>    String sResponse sResponse2
37140>>>>>>>    
37140>>>>>>>    //Documentación de referencia: https://www.neutrinoapi.com/api/email-validate/
37140>>>>>>>    
37140>>>>>>>    Get Create (RefClass(cJsonHttpTransfer)) to hoHttp
37141>>>>>>>    Get Create (RefClass(cJsonObject))       to hoJsonRequest
37142>>>>>>>    
37142>>>>>>>    Send InitializeJsonType of hoJsonRequest jsonTypeObject
37143>>>>>>>    
37143>>>>>>>    Send SetMemberValue of hoJsonRequest "email"        jsonTypeString  sEmail
37144>>>>>>>    Send SetMemberValue of hoJsonRequest "fix-typos"    jsonTypeBoolean False
37145>>>>>>>    
37145>>>>>>>    Get AddHeader of hoHttp "User-ID" "Henryrl83_" to bRet
37146>>>>>>>    Get AddHeader of hoHttp "API-Key" "bULS6bwuyVRWWKPZjkKPiU5ohIXaU7IQdAZVpr3rReyaotcF" to bRet
37147>>>>>>>    
37147>>>>>>>    Get HttpPostJson of hoHttp "neutrinoapi.net" "/email-validate" hoJsonRequest (&bRet) to hoResponse
37148>>>>>>>    
37148>>>>>>>    
37148>>>>>>>    If (bRet and (ResponseStatusCode(hoHttp) = 200)) Begin
37150>>>>>>>        Send Info_Box (Stringify(hoResponse)) "La respuesta de NEUTRINO"
37151>>>>>>>        If (HasMember(hoResponse,"valid") and HasMember(hoResponse, "is-disposable")) Begin
37153>>>>>>>            Get IsMemberOfJsonType of hoResponse "valid" jsonTypeNull to bIsnull
37154>>>>>>>            Get IsMemberOfJsonType of hoResponse "is-disposable" jsonTypeNull to bIsnull
37155>>>>>>>            If (bIsnull) Begin
37157>>>>>>>                Function_Return False
37158>>>>>>>            End
37158>>>>>>>>
37158>>>>>>>            Else Begin
37159>>>>>>>                Get MemberValue of hoResponse "valid" to sResponse
37160>>>>>>>                Get MemberValue of hoResponse "is-disposable" to sResponse2
37161>>>>>>>                If ((sResponse = "1") and (sResponse2 = "0")) Begin
37163>>>>>>>                    Function_Return True
37164>>>>>>>                End
37164>>>>>>>>
37164>>>>>>>                Else Begin
37165>>>>>>>                    Send Info_Box "La sintaxis es correcta\nEstá bien escrito\nPero el email no está verificado por NEUTRINO"
37166>>>>>>>                    Function_Return False
37167>>>>>>>                End
37167>>>>>>>>
37167>>>>>>>            End
37167>>>>>>>>
37167>>>>>>>        End
37167>>>>>>>>
37167>>>>>>>        Move True to bRet
37168>>>>>>>    End
37168>>>>>>>>
37168>>>>>>>    
37168>>>>>>>    Function_Return bRet
37169>>>>>>>End_Function
37170>>>>>
37170>>>>>Open schoolhouse
Including file: schoolhouse.fd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\schoolhouse.fd)
37172>>>>>Open student
Including file: student.fd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\student.fd)
37174>>>>>
37174>>>>>Object oValidationCounty is a DescriptionValidationTable
37176>>>>>    Procedure Fill_List
37179>>>>>        Forward Send Fill_List
37181>>>>>        Send Add_Table_Value "Huelva" "HUELVA"
37182>>>>>        Send Add_Table_Value "Sevilla" "SEVILLA"
37183>>>>>        Send Add_Table_Value "Cádiz" "CÁDIZ"
37184>>>>>        Send Add_Table_Value "Málaga" "MÁLAGA"
37185>>>>>        Send Add_Table_Value "Granada" "GRANADA"
37186>>>>>        Send Add_Table_Value "Córdoba" "CÓRDOBA"
37187>>>>>        Send Add_Table_Value "Almería" "ALMERÍA"
37188>>>>>        Send Add_Table_Value "Jaén" "JAÉN"
37189>>>>>    End_Procedure
37190>>>>>End_Object
37191>>>>>
37191>>>>>//registrar la funciones que luego usaremos para validar email
37191>>>>>Register_Function zValidar_Email Integer iField Returns Boolean
37191>>>>>
37191>>>>>Class cschoolhouseDataDictionary is a DataDictionary
37192>>>>>    
37192>>>>>    Procedure Construct_Object
37194>>>>>        Forward Send Construct_Object
37196>>>>>        Set Main_File to schoolhouse.File_Number
37197>>>>>
37197>>>>>        Set Add_Client_File to student.File_Number
37198>>>>>
37198>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
37199>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
37200>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
37201>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
37202>>>>>
37202>>>>>        Set Field_Option Field schoolhouse.ID DD_DISPLAYONLY to True
37203>>>>>        Set Key_Field_State Field schoolhouse.ID to True
37204>>>>>
37204>>>>>        Set Field_Value_Table Field schoolhouse.County to oValidationCounty
37205>>>>>        Set Field_Class_Name Field schoolhouse.County to "Combo"
37206>>>>>
37206>>>>>        Set Field_Option Field schoolhouse.ModifiedTime DD_DISPLAYONLY to True
37207>>>>>
37207>>>>>        Set Field_Option Field schoolhouse.CreatedTime DD_DISPLAYONLY to True
37208>>>>>
37208>>>>>//una vez verificado que el email es correcto se almacena en el campo correspondiente de la bbdd                
37208>>>>>        Set Field_Validate_msg Field schoolhouse.Email to get_zValidar_Email
37209>>>>>
37209>>>>>    End_Procedure
37210>>>>>
37210>>>>>//llamamos a las funciones definidas en los archivos para validar los email
37210>>>>>
37210>>>>>    //llamar a la funcion para validar el email    
37210>>>>>    Function zValidar_Email Integer iField Returns Boolean
37212>>>>>        Boolean bRet
37212>>>>>        String sEmail
37212>>>>>        
37212>>>>>        Get Field_Current_Value Field schoolhouse.Email to sEmail
37213>>>>>        
37213>>>>>        Get ValidarEmail sEmail to bRet
37214>>>>>        
37214>>>>>        Function_Return (not(bRet))
37215>>>>>    End_Function
37216>>>>>
37216>>>>>End_Class
37217>>>
37217>>>Object oSchoolHouse is a cWebView
37219>>>    Set piColumnCount to 12
37220>>>    Set psCaption to "Colegio"
37221>>>    Set peWebViewStyle to wvsDrilldown
37222>>>    Set peViewType to vtZoom
37223>>>    Set pbShowCaption to False
37224>>>    Set Verify_Save_Msg to 0
37225>>>    Set piMaxWidth to 1024
37226>>>
37226>>>    Object oschoolhouse_DD is a cschoolhouseDataDictionary
37228>>>    End_Object 
37229>>>
37229>>>    Set Main_DD To oschoolhouse_DD
37230>>>    Set Server  To oschoolhouse_DD
37231>>>
37231>>>
37231>>>    Object oWebMainPanel is a cWebPanel
37233>>>        Set piColumnCount to 12
37234>>>        WebSetResponsive piColumnCount rmMobile to 4
37235>>>
37235>>>        /*Object oschoolhouseID is a cWebForm            Entry_Item schoolhouse.ID            Set piColumnSpan to 2            Set piColumnIndex to 0            Set peLabelPosition to lpTop            Set psLabel to "ID"        End_Object*/ 
37235>>>
37235>>>        Object oschoolhouseName is a cWebForm
37237>>>            Entry_Item schoolhouse.Name
37238>>>            Set piColumnSpan to 8
37239>>>            Set piColumnIndex to 0
37240>>>            Set peLabelPosition to lpTop
37241>>>            Set psLabel to "Nombre"
37242>>>        End_Object 
37243>>>
37243>>>        Object oWebTabContainer is a cWebTabContainer
37245>>>            Set pbFillHeight to True
37246>>>            Set piColumnSpan to 12
37247>>>            Set pbShowLabel to False
37248>>>
37248>>>            Object oPage1 is a cWebTabPage
37250>>>                Set piColumnCount to 12
37251>>>                Set psCaption to "Datos de Contacto"
37252>>>
37252>>>                Object oschoolhouseAddress is a cWebForm
37254>>>                    Entry_Item schoolhouse.Address
37255>>>                    Set piColumnSpan to 6
37256>>>                    Set piColumnIndex to 0
37257>>>                    Set peLabelPosition to lpTop
37258>>>                    Set psLabel to "Dirección"
37259>>>                End_Object 
37260>>>                WebSetResponsive piColumnCount rmMobile to 4
37261>>>
37261>>>                Object oschoolhouseCity is a cWebForm
37263>>>                    Entry_Item schoolhouse.City
37264>>>                    Set piColumnSpan to 5
37265>>>                    Set piColumnIndex to 0
37266>>>                    Set peLabelPosition to lpTop
37267>>>                    Set psLabel to "Ciudad"
37268>>>                End_Object 
37269>>>
37269>>>                Object oschoolhouseZipCode is a cWebForm
37271>>>                    Entry_Item schoolhouse.ZipCode
37272>>>                    Set piColumnSpan to 2
37273>>>                    Set piColumnIndex to 5
37274>>>                    Set peLabelPosition to lpTop
37275>>>                    Set psLabel to "C.P"
37276>>>                End_Object 
37277>>>
37277>>>                Object oschoolhouseCounty is a cWebCombo
37279>>>                    Entry_Item schoolhouse.County
37280>>>                    Set piColumnSpan to 2
37281>>>                    Set piColumnIndex to 7
37282>>>                    Set peLabelPosition to lpTop
37283>>>                    Set psLabel to "Provincia"
37284>>>                End_Object 
37285>>>
37285>>>                Object oschoolhouseEmail is a cWebEdit
37287>>>                    Entry_Item schoolhouse.Email
37288>>>                    Set piColumnSpan to 12
37289>>>                    Set piColumnIndex to 0
37290>>>                    Set peLabelPosition to lpTop
37291>>>                    Set psLabel to "Email"
37292>>>                    Set piMinHeight to 150
37293>>>                End_Object 
37294>>>
37294>>>                Object oschoolhouseNotes is a cWebForm
37296>>>                    Entry_Item schoolhouse.Notes
37297>>>                    Set piColumnSpan to 12
37298>>>                    Set piColumnIndex to 0
37299>>>                    Set peLabelPosition to lpTop
37300>>>                    Set psLabel to "Comentarios Añadidos"
37301>>>                End_Object 
37302>>>            End_Object 
37303>>>
37303>>>            Object oPage2 is a cWebTabPage
37305>>>                Set piColumnCount to 12
37306>>>                Set psCaption to "Fecha y Hora Creación/Modificación"
37307>>>                WebSetResponsive piColumnCount rmMobile to 4
37308>>>
37308>>>                Object oschoolhouseModifiedTime is a cWebForm
37310>>>                    Entry_Item schoolhouse.ModifiedTime
37311>>>                    Set piColumnSpan to 6
37312>>>                    Set piColumnIndex to 0
37313>>>                    Set peLabelPosition to lpTop
37314>>>                    Set psLabel to "Fecha y Hora de Modificación"
37315>>>                End_Object 
37316>>>
37316>>>                Object oschoolhouseCreatedTime is a cWebForm
37318>>>                    Entry_Item schoolhouse.CreatedTime
37319>>>                    Set piColumnSpan to 6
37320>>>                    Set piColumnIndex to 0
37321>>>                    Set peLabelPosition to lpTop
37322>>>                    Set psLabel to "Fecha y Hora de Creación"
37323>>>                End_Object 
37324>>>            End_Object 
37325>>>        End_Object 
37326>>>    End_Object 
37327>>>
37327>>>    Object oActionGroup is a cWebMenuGroup
37329>>>
37329>>>        Object oSaveBtn is a cWebMenuItem
37331>>>            Set psCSSClass to "WebSaveMenuItem"
37332>>>            Set psCaption to "Guardar"
37333>>>
37333>>>            Procedure OnClick
37336>>>                Send Request_Save
37337>>>            End_Procedure
37338>>>
37338>>>        End_Object 
37339>>>
37339>>>        Object oEditBtn is a cWebMenuItem
37341>>>            Set psCSSClass to "WebEditMenuItem"
37342>>>            Set psCaption to "Editar"
37343>>>            Procedure OnClick
37346>>>                Send ChangeEditMode True
37347>>>                Send SetActionButtons
37348>>>            End_Procedure
37349>>>
37349>>>        End_Object 
37350>>>
37350>>>        Object oDeleteBtn is a cWebMenuItem
37352>>>            Set psCSSClass to "WebDeleteMenuItem"
37353>>>            Set psCaption to "Borrar"
37354>>>            Set peActionDisplay to adMenu
37355>>>
37355>>>            Procedure OnClick
37358>>>                Send Request_Delete
37359>>>            End_Procedure
37360>>>
37360>>>        End_Object 
37361>>>
37361>>>        Object oCancelChangesBtn is a cWebMenuItem
37363>>>            Set psCSSClass to "WebIcon_Refresh"
37364>>>            Set psCaption to "Limpiar Cambios"
37365>>>            Set peActionDisplay to adMenu
37366>>>            Procedure OnClick
37369>>>                Send RefreshRecord
37370>>>            End_Procedure
37371>>>
37371>>>        End_Object 
37372>>>    End_Object 
37373>>>
37373>>>    Procedure SetActionButtons
37376>>>        tWebNavigateData NavigateData
37376>>>        tWebNavigateData NavigateData
37376>>>        Boolean bHasRecord
37376>>>        Handle hoDD
37376>>>
37376>>>        Get Server to hoDD
37377>>>        Get GetNavigateData to NavigateData
37378>>>        Get HasRecord of hoDD to bHasRecord
37379>>>
37379>>>        // let's hide all buttons and then Show the ones we want
37379>>>        WebSet pbRender of oEditBtn to False
37380>>>        WebSet pbRender of oSaveBtn to False
37381>>>        WebSet pbRender of oCancelChangesBtn to False
37382>>>        WebSet pbRender of oDeleteBtn to False
37383>>>
37383>>>        If (NavigateData.bReadOnly) Begin
37385>>>            WebSet pbRender of oEditBtn to True
37386>>>        End
37386>>>>
37386>>>        Else Begin
37387>>>            WebSet pbRender of oSaveBtn to True
37388>>>            WebSet pbRender of oCancelChangesBtn to True
37389>>>            WebSet pbRender of oDeleteBtn to bHasRecord
37390>>>        End
37390>>>>
37390>>>    End_Procedure
37391>>>
37391>>>    Procedure OnViewSaved Handle hoServer Boolean bChanged
37394>>>        // Close after save
37394>>>        Send NavigateClose Self
37395>>>    End_Procedure
37396>>>
37396>>>    // this will close the view after a delete
37396>>>    Procedure OnViewDeleted Handle hoDDO
37399>>>        Send NavigateClose Self
37400>>>    End_Procedure
37401>>>
37401>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
37404>>>        Case Begin
37404>>>            Case (NavigateData.eNavigateType = nfFromMain)
37406>>>                // If from main, this is a propbably a main file Select to Zoom.
37406>>>                Case Break
37407>>>
37407>>>            Case (NavigateData.eNavigateType = nfFromParent)
37410>>>                // If from parent, this is a constrained drill down.
37410>>>                Case Break
37411>>>
37411>>>            Case (NavigateData.eNavigateType = nfFromChild)
37414>>>                // If from child, this is a probably a parent Zoom from a Zoom.
37414>>>                Case Break
37415>>>
37415>>>            Case Else // must be nfUndefined
37415>>>
37415>>>        Case End
37415>>>
37415>>>        Send SetActionButtons
37416>>>
37416>>>    End_Procedure
37417>>>
37417>>>End_Object 
37418>    Use SelectSchoolHouse.wo
Including file: SelectSchoolHouse.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\SelectSchoolHouse.wo)
37418>>>// C:\DataFlex Projects\ColegioAppWeb\AppSrc\SelectSchoolHouse.wo
37418>>>// SchoolHouse
37418>>>//
37418>>>
37418>>>Use cWebView.pkg
37418>>>Use cWebList.pkg
37418>>>Use cWebMenuGroup.pkg
37418>>>Use cWebMenuItem.pkg
37418>>>Use cWebColumnButton.pkg
37418>>>Use cWebColumn.pkg
37418>>>Use SchoolHouse.wo
37418>>>
37418>>>Use cschoolhouseDataDictionary.dd
37418>>>
37418>>>Object oSelectSchoolHouse is a cWebView
37420>>>    Set psCaption to "COLEGIOS"
37421>>>    Set peWebViewStyle to wvsDrilldown
37422>>>    Set peViewType to vtSelect
37423>>>    Set piColumnCount to 12
37424>>>    Set pbShowCaption to True
37425>>>    Set piMaxWidth to 1024
37426>>>
37426>>>    Object oschoolhouse_DD is a cschoolhouseDataDictionary
37428>>>    End_Object 
37429>>>
37429>>>    Set Main_DD To oschoolhouse_DD
37430>>>    Set Server  To oschoolhouse_DD
37431>>>
37431>>>
37431>>>    Object oList is a cWebList
37433>>>        Set piColumnSpan to 12
37434>>>        Set psCSSClass to "MobileList"
37435>>>        Set pbServerOnRowClick to True
37436>>>        Set pbFillHeight to True
37437>>>        Set pbShowHeader to False
37438>>>        Set piSortColumn to 0
37439>>>
37439>>>        /*Object oschoolhouseID is a cWebColumn            Entry_Item schoolhouse.ID            Set psCaption to "schoolhouse.ID"            Set piWidth to 124            Set piListColSpan to 2        End_Object*/
37439>>>
37439>>>        Object oDetailButton is a cWebColumnButton
37441>>>            Set psCaption to "btn"
37442>>>            Set piWidth to 45
37443>>>            Set pbFixedWidth to True
37444>>>            Set pbResizable to False
37445>>>            Set piListRowSpan to 8
37446>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
37447>>>            Set peAlign to alignRight
37448>>>            Set pbShowCaption to False
37449>>>
37449>>>            WebRegisterPath ntNavigateForward oSchoolHouse
37455>>>
37455>>>            Procedure OnClick
37458>>>                Send NavigatePath
37459>>>            End_Procedure
37460>>>
37460>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37463>>>                Move True to NavigateData.bReadOnly
37464>>>            End_Procedure
37465>>>
37465>>>        End_Object 
37466>>>
37466>>>        Object oschoolhouseName is a cWebColumn
37468>>>            Entry_Item schoolhouse.Name
37469>>>            Set psCaption to "schoolhouse.Name"
37470>>>            Set piWidth to 494
37471>>>            Set psCSSClass to "RowCaption"
37472>>>        End_Object 
37473>>>
37473>>>        Object oschoolhouseCity is a cWebColumn
37475>>>            Entry_Item schoolhouse.City
37476>>>            Set psCaption to "schoolhouse.City"
37477>>>            Set piWidth to 505
37478>>>            Set psCSSClass to "RowCaption"
37479>>>        End_Object 
37480>>>
37480>>>        Object oschoolhouseCounty is a cWebColumn
37482>>>            Entry_Item schoolhouse.County
37483>>>            Set psCaption to "schoolhouse.County"
37484>>>            Set piWidth to 281
37485>>>            Set psCSSClass to "RowCaption"
37486>>>            Set pbNewLine to True
37487>>>        End_Object 
37488>>>
37488>>>        Object oschoolhouseEmail is a cWebColumn
37490>>>            Entry_Item schoolhouse.Email
37491>>>            Set psCaption to "schoolhouse.Email"
37492>>>            Set piWidth to 345
37493>>>            Set psCSSClass to "RowCaption"
37494>>>        End_Object 
37495>>>
37495>>>        WebRegisterPath ntNavigateForward oSchoolHouse
37501>>>
37501>>>        Procedure OnRowClick String sRowId
37504>>>            tWebNavigateData NavigateData
37504>>>            tWebNavigateData NavigateData
37504>>>            Get GetNavigateData to NavigateData
37505>>>
37505>>>            Case Begin
37505>>>                Case (NavigateData.eNavigateType = nfFromParent)
37507>>>                    Send NavigateForward of oSchoolHouse Self
37508>>>                    Case Break
37509>>>
37509>>>                Case (NavigateData.eNavigateType = nfFromChild)
37512>>>                    Send NavigateClose Self
37513>>>                    Case Break
37514>>>
37514>>>                Case (NavigateData.eNavigateType = nfFromMain)
37517>>>                    Send NavigateClose Self
37518>>>                    Case Break
37519>>>                    
37519>>>                Case Else // must be nfUndefined
37519>>>                    Send NavigateForward of oSchoolHouse Self
37520>>>            Case End
37520>>>        End_Procedure
37521>>>
37521>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37524>>>            Move True to NavigateData.bReadOnly
37525>>>        End_Procedure
37526>>>
37526>>>    End_Object 
37527>>>
37527>>>    Object oActionGroup is a cWebMenuGroup
37529>>>
37529>>>        Object oSearch is a cWebMenuItem
37531>>>            Set psCSSClass to "WebPromptMenuItem"
37532>>>            Set psCaption to "Buscar"
37533>>>
37533>>>            Procedure OnClick
37536>>>                Send Search of oList
37537>>>            End_Procedure
37538>>>
37538>>>        End_Object 
37539>>>
37539>>>        Object oNewButton is a cWebMenuItem
37541>>>            Set psCSSClass to "WebClearMenuItem"
37542>>>            Set psCaption to "Nuevo"
37543>>>
37543>>>            WebRegisterPath ntNavigateForward oSchoolHouse
37549>>>
37549>>>            Procedure OnClick
37552>>>                Send NavigatePath
37553>>>            End_Procedure
37554>>>
37554>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37557>>>                Move True to NavigateData.bNewRecord
37558>>>            End_Procedure
37559>>>
37559>>>        End_Object 
37560>>>    End_Object 
37561>>>
37561>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
37564>>>        WebSet pbRender of oNewButton to True
37565>>>        WebSet pbRender of oDetailButton to True
37566>>>
37566>>>        Case Begin
37566>>>            Case (NavigateData.eNavigateType = nfFromParent)
37568>>>                // If from parent, this is a constrained drill down
37568>>>                Case Break
37569>>>
37569>>>            Case (NavigateData.eNavigateType = nfFromChild)
37572>>>                // If from child, this is a probably a parent lookup from a Zoom
37572>>>                Case Break
37573>>>
37573>>>            Case (NavigateData.eNavigateType = nfFromMain)
37576>>>                // If from main, this is a probably a main-file lookup from a Zoom
37576>>>                WebSet pbRender of oDetailButton to False
37577>>>                Case Break
37578>>>
37578>>>            Case Else // must be nfUndefined
37578>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
37578>>>
37578>>>        Case End
37578>>>
37578>>>    End_Procedure
37579>>>
37579>>>
37579>>>End_Object 
37580>    Use Student.wo
Including file: Student.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\Student.wo)
37580>>>// C:\DataFlex Projects\ColegioAppWeb\AppSrc\Student.wo
37580>>>// Alumno
37580>>>//
37580>>>
37580>>>Use cWebView.pkg
37580>>>Use cWebPanel.pkg
37580>>>Use cWebMenuGroup.pkg
37580>>>Use cWebMenuItem.pkg
37580>>>Use cWebForm.pkg
37580>>>Use cWebTabContainer.pkg
37580>>>Use cWebTabPage.pkg
37580>>>Use cWebEdit.pkg
37580>>>
37580>>>Use cschoolhouseDataDictionary.dd
37580>>>Use cstudentDataDictionary.dd
Including file: cstudentDataDictionary.dd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\cstudentDataDictionary.dd)
37580>>>>>Use DataDict.pkg
37580>>>>>
37580>>>>>//importar los archivos donde tenemos las funciones principales de validacion
37580>>>>>Use ValidarDNI.pkg
Including file: ValidarDNI.pkg    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\ValidarDNI.pkg)
37580>>>>>>>Define cLetter for "TRWAGMYFPDXBNJZSQVHLCKE"
37580>>>>>>>Define cNumber for "0123456789"
37580>>>>>>>
37580>>>>>>>//-------------------------------------------
37580>>>>>>>Function ValidacionDNI String sDNI Returns Boolean
37583>>>>>>>    //Convertir en mayúsculas todo lo contenido en la cadena sDNI
37583>>>>>>>    Move (Uppercase(sDNI)) to sDNI
37584>>>>>>>    
37584>>>>>>>    //crea la variable boleana para usarla en la funciones internas de esta función principal
37584>>>>>>>    Boolean bRet
37584>>>>>>>   
37584>>>>>>>    //------------ comprobación de entrada VACÍA
37584>>>>>>>    If (sDNI="") Begin
37586>>>>>>>        Send Info_Box "Tienes que introducir algo" "ERROR"
37587>>>>>>>        Function_Return False
37588>>>>>>>    End
37588>>>>>>>>
37588>>>>>>>
37588>>>>>>>    //-----------------comprobación de LONGITUD de la cadena
37588>>>>>>>    Get DNILen sDNI to bRet
37589>>>>>>>    
37589>>>>>>>    If (not(bRet)) Begin
37591>>>>>>>        Send Info_Box "La longitud no es correcta, TIENE QUE TENER 9 DIGITOS" "ERROR"
37592>>>>>>>        Function_Return False
37593>>>>>>>    End
37593>>>>>>>>
37593>>>>>>>   
37593>>>>>>>    //-----------------comprobacion de que el último digito es una letra
37593>>>>>>>    Get DNILastChar sDNI to bRet
37594>>>>>>>    
37594>>>>>>>    If (not(bRet)) Begin
37596>>>>>>>        Send Info_Box "El último digito tiene que ser una LETRA válida" "ERROR"
37597>>>>>>>        Function_Return False
37598>>>>>>>    End
37598>>>>>>>>
37598>>>>>>>    
37598>>>>>>>    //------------------comprobación 8 primeros sean digitos
37598>>>>>>>    Get SinCaracteres sDNI to bRet
37599>>>>>>>    
37599>>>>>>>    If (not(bRet)) Begin
37601>>>>>>>        Send Info_Box "Si es un DNI los 8 primeros dígitos tienen que ser números\nSi es un NIE la primera letra debe ser X, Y,o Z" "ERROR"
37602>>>>>>>        Function_Return False
37603>>>>>>>    End
37603>>>>>>>>
37603>>>>>>>    
37603>>>>>>>    //------------------ comprobación de letra correspondiente
37603>>>>>>>    Get CalcularLetraDNI sDNI to bRet
37604>>>>>>>    
37604>>>>>>>        If (not(bRet)) Begin
37606>>>>>>>        Send Info_Box "El NIF/NIE no es válido" "ERROR"
37607>>>>>>>        Function_Return False
37608>>>>>>>        End
37608>>>>>>>>
37608>>>>>>>        
37608>>>>>>>    //--------------------
37608>>>>>>>     
37608>>>>>>>    Function_Return True
37609>>>>>>>End_Function
37610>>>>>>>
37610>>>>>>>//-----------------------------------------------longitud del dni introducido
37610>>>>>>>Function DNILen String sDNI Returns Boolean
37613>>>>>>>    Integer iLen
37613>>>>>>>    //-------------
37613>>>>>>>    Move (Length(sDNI)) to iLen
37614>>>>>>>    
37614>>>>>>>    If (iLen <> 9) Begin
37616>>>>>>>        Function_Return False
37617>>>>>>>    End
37617>>>>>>>>
37617>>>>>>>    //--------------
37617>>>>>>>    Function_Return True    
37618>>>>>>>End_Function
37619>>>>>>>
37619>>>>>>>
37619>>>>>>>//---------------------------------------------------última digito letra valida
37619>>>>>>>Function DNILastChar String sDNI Returns Boolean
37622>>>>>>>    Integer iCount
37622>>>>>>>    String sChar sCharCadena
37622>>>>>>>    
37622>>>>>>>    Move (Right(sDNI,1)) to sChar
37623>>>>>>>    For iCount from 1 to (Length(cLetter))
37629>>>>>>>>
37629>>>>>>>        Move (Mid(cLetter,1,iCount)) to sCharCadena
37630>>>>>>>        If (sChar=sCharCadena) Begin
37632>>>>>>>            Function_Return True            
37633>>>>>>>        End
37633>>>>>>>>
37633>>>>>>>    Loop
37634>>>>>>>>
37634>>>>>>>    Function_Return False    
37635>>>>>>>End_Function
37636>>>>>>>
37636>>>>>>>
37636>>>>>>>//-------------------------------------------------------comprueba si hay letras entre los 8 primeros dígitos
37636>>>>>>>Function SinCaracteres String sDNI Returns Boolean
37639>>>>>>>    Integer iCount iCount2
37639>>>>>>>    String sValue sDig sComprobado
37639>>>>>>>    Boolean bRet
37639>>>>>>>
37639>>>>>>>    Move (Left(sDNI,8)) to sValue    
37640>>>>>>>    // Convertir X, Y, Z a 0, 1, 2
37640>>>>>>>        
37640>>>>>>>    If (Left(sValue, 1) = "X") Begin
37642>>>>>>>        Move (Replace("X",sValue, "0")) to sValue
37643>>>>>>>    End
37643>>>>>>>>
37643>>>>>>>    If (Left(sValue, 1) = "Y") Begin
37645>>>>>>>        Move (Replace("Y", sValue, "1")) to sValue
37646>>>>>>>    End
37646>>>>>>>>
37646>>>>>>>    If (Left(sValue, 1) = "Z") Begin
37648>>>>>>>        Move (Replace("Z", sValue, "2")) to sValue
37649>>>>>>>    End
37649>>>>>>>>
37649>>>>>>>    //------------------contador para ver si hay caracteres en la cadena numerica
37649>>>>>>>    For iCount from 1 to (Length(sValue))
37655>>>>>>>>
37655>>>>>>>        Move False to bRet
37656>>>>>>>        Move (Mid(sValue, 1, iCount)) to sDig
37657>>>>>>>        For iCount2 from 1 to (Length(cNumber))
37663>>>>>>>>
37663>>>>>>>            Move (Mid(cNumber, 1, iCount2)) to sComprobado
37664>>>>>>>            If (sDig=sComprobado) Begin
37666>>>>>>>                Move True to bRet
37667>>>>>>>            End
37667>>>>>>>>
37667>>>>>>>        Loop
37668>>>>>>>>
37668>>>>>>>        If (not(bRet)) Begin
37670>>>>>>>            Function_Return False        
37671>>>>>>>        End
37671>>>>>>>>
37671>>>>>>>    Loop
37672>>>>>>>>
37672>>>>>>>    
37672>>>>>>>    Function_Return True    
37673>>>>>>>End_Function
37674>>>>>>>
37674>>>>>>>
37674>>>>>>>//-------------------------------------------------------calcula letra DNI
37674>>>>>>>Function CalcularLetraDNI String sDNI Returns Boolean
37677>>>>>>>    Integer iDNI iResto
37677>>>>>>>    String sLetter sChar
37677>>>>>>>    
37677>>>>>>>    // Convertir X, Y, Z a 0, 1, 2        
37677>>>>>>>    If (Left(sDNI, 1) = "X") Begin
37679>>>>>>>        Move (Replace("X",sDNI, "0")) to sDNI
37680>>>>>>>    End
37680>>>>>>>>
37680>>>>>>>    If (Left(sDNI, 1) = "Y") Begin
37682>>>>>>>        Move (Replace("Y", sDNI, "1")) to sDNI
37683>>>>>>>    End
37683>>>>>>>>
37683>>>>>>>    If (Left(sDNI, 1) = "Z") Begin
37685>>>>>>>        Move (Replace("Z", sDNI, "2")) to sDNI
37686>>>>>>>    End
37686>>>>>>>>
37686>>>>>>>
37686>>>>>>>    //-----------------------------------------asignar la letra al resto de la división
37686>>>>>>>    Move (Right(sDNI, 1)) to sChar 
37687>>>>>>>    Move (Left(sDNI,8)) to iDNI
37688>>>>>>>    Move (Mod(iDNI, 23)) to iResto
37689>>>>>>>    Move (Mid(cLetter, 1, (iResto + 1))) to sLetter
37690>>>>>>>    
37690>>>>>>>    // Asignar la letra correspondiente
37690>>>>>>>     If (sChar = sLetter) Begin
37692>>>>>>>        Function_Return True
37693>>>>>>>    End
37693>>>>>>>>
37693>>>>>>>  
37693>>>>>>>    Function_Return False
37694>>>>>>>End_Function
37695>>>>>Use ValidarEmail.pkg
37695>>>>>
37695>>>>>Open student
37697>>>>>Open schoolhouse
37699>>>>>
37699>>>>>Object oValidationCounty is a DescriptionValidationTable
37701>>>>>    Procedure Fill_List
37704>>>>>        Forward Send Fill_List
37706>>>>>        Send Add_Table_Value "Huelva" "HUELVA"
37707>>>>>        Send Add_Table_Value "Sevilla" "SEVILLA"
37708>>>>>        Send Add_Table_Value "Málaga" "MÁLAGA"
37709>>>>>        Send Add_Table_Value "Cadiz" "CÁDIZ"
37710>>>>>        Send Add_Table_Value "Córdoba" "CÓRDOBA"
37711>>>>>        Send Add_Table_Value "Jaén" "JAÉN"
37712>>>>>        Send Add_Table_Value "Almería" "ALMERÍA"
37713>>>>>        Send Add_Table_Value "Granada" "GRANADA"
37714>>>>>    End_Procedure
37715>>>>>End_Object
37716>>>>>
37716>>>>>//registrar las funciones que luego usaremos para validar email y dni
37716>>>>>Register_Function zValidar_Email Integer iField Returns Boolean
37716>>>>>Register_Function zValidar_Dni Integer iField   Returns Boolean
37716>>>>>
37716>>>>>Class cstudentDataDictionary is a DataDictionary
37717>>>>>    
37717>>>>>    Procedure Construct_Object
37719>>>>>        Forward Send Construct_Object
37721>>>>>        Set Main_File to student.File_Number
37722>>>>>
37722>>>>>        Set Add_Server_File to schoolhouse.File_Number
37723>>>>>
37723>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
37724>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
37725>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
37726>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
37727>>>>>
37727>>>>>        Set Key_Field_State Field student.ID to True
37728>>>>>        Set Field_Option Field student.ID DD_DISPLAYONLY to True
37729>>>>>
37729>>>>>        Set Field_Option Field student.ModifiedTime DD_DISPLAYONLY to True
37730>>>>>
37730>>>>>        Set Field_Option Field student.CreatedTime DD_DISPLAYONLY to True
37731>>>>>
37731>>>>>//una vez verificado que el email y el dni son correctos se almacena en el campo correspondiente de la bbdd        
37731>>>>>        Set Field_Validate_msg Field student.Email to get_zValidar_Email
37732>>>>>
37732>>>>>        Set Field_Mask_Type Field student.County to Mask_DateTime_Window
37733>>>>>        Set Field_Value_Table Field student.County to oValidationCounty
37734>>>>>        Set Field_Validate_msg Field student.DNI to   get_zValidar_Dni
37735>>>>>
37735>>>>>    End_Procedure
37736>>>>>
37736>>>>>//llamamos a las funciones definidas en los archivos para validar los email y dni
37736>>>>>
37736>>>>>    //llamar a la funcion para validar el email
37736>>>>>    Function zValidar_Email Integer iField Returns Boolean
37738>>>>>        Boolean bRet
37738>>>>>        String sEmail
37738>>>>>        
37738>>>>>        Get Field_Current_Value Field student.Email to sEmail
37739>>>>>        Get ValidarEmail sEmail to bRet
37740>>>>>        
37740>>>>>        Function_Return (not(bRet))
37741>>>>>        End_Function
37742>>>>>
37742>>>>>    //llamar a la funcion para validar el dni    
37742>>>>>    Function zValidar_Dni Integer iField Returns Boolean
37744>>>>>        Boolean bRet
37744>>>>>        String sDni
37744>>>>>        
37744>>>>>        Get Field_Current_Value Field student.DNI to sDni
37745>>>>>        Get ValidacionDNI sDni to bRet
37746>>>>>        
37746>>>>>        Function_Return (not(bRet))
37747>>>>>    End_Function
37748>>>>>
37748>>>>>End_Class
37749>>>
37749>>>Object oStudent is a cWebView
37751>>>    Set piColumnCount to 12
37752>>>    Set psCaption to "Alumno"
37753>>>    Set peWebViewStyle to wvsDrilldown
37754>>>    Set peViewType to vtZoom
37755>>>    Set pbShowCaption to False
37756>>>    Set Verify_Save_Msg to 0
37757>>>    Set piMaxWidth to 1024
37758>>>
37758>>>    Object oschoolhouse_DD is a cschoolhouseDataDictionary
37760>>>    End_Object 
37761>>>
37761>>>    Object ostudent_DD is a cstudentDataDictionary
37763>>>        Set DDO_Server To oschoolhouse_DD
37764>>>    End_Object 
37765>>>
37765>>>    Set Main_DD To ostudent_DD
37766>>>    Set Server  To ostudent_DD
37767>>>
37767>>>
37767>>>    Object oWebMainPanel is a cWebPanel
37769>>>        Set piColumnCount to 12
37770>>>        WebSetResponsive piColumnCount rmMobile to 4
37771>>>
37771>>>        /*Object ostudentID is a cWebForm            Entry_Item student.ID            Set piColumnSpan to 2            Set piColumnIndex to 0            Set peLabelPosition to lpTop            Set psLabel to "ID"        End_Object*/
37771>>>
37771>>>        Object ostudentName is a cWebForm
37773>>>            Entry_Item student.Name
37774>>>            Set piColumnSpan to 4
37775>>>            Set piColumnIndex to 0
37776>>>            Set peLabelPosition to lpTop
37777>>>            Set psLabel to "Nombre"
37778>>>        End_Object 
37779>>>
37779>>>        Object ostudentLastName is a cWebForm
37781>>>            Entry_Item student.LastName
37782>>>            Set piColumnSpan to 6
37783>>>            Set piColumnIndex to 4
37784>>>            Set peLabelPosition to lpTop
37785>>>            Set psLabel to "Apellidos"
37786>>>        End_Object 
37787>>>
37787>>>        Object ostudentBirthday is a cWebDateForm
37789>>>            Entry_Item student.Birthday
37790>>>            Set piColumnSpan to 2
37791>>>            Set piColumnIndex to 0
37792>>>            Set peLabelPosition to lpTop
37793>>>            Set psLabel to "Fecha de Nacimiento"
37794>>>        End_Object 
37795>>>
37795>>>        Object oWebTabContainer is a cWebTabContainer
37797>>>            Set pbFillHeight to True
37798>>>            Set piColumnSpan to 12
37799>>>            Set pbShowLabel to False
37800>>>
37800>>>            Object oPage1 is a cWebTabPage
37802>>>                Set piColumnCount to 12
37803>>>                Set psCaption to "Datos de Contacto"
37804>>>                WebSetResponsive piColumnCount rmMobile to 4
37805>>>
37805>>>                Object ostudentDNI is a cWebForm
37807>>>                    Entry_Item student.DNI
37808>>>                    Set piColumnSpan to 2
37809>>>                    Set piColumnIndex to 0
37810>>>                    Set peLabelPosition to lpTop
37811>>>                    Set psLabel to "DNI"
37812>>>                End_Object 
37813>>>
37813>>>                Object ostudentEmail is a cWebEdit
37815>>>                    Entry_Item student.Email
37816>>>                    Set piColumnSpan to 0
37817>>>                    Set piColumnIndex to 0
37818>>>                    Set peLabelPosition to lpTop
37819>>>                    Set psLabel to "Email"
37820>>>                    Set piMinHeight to 150
37821>>>                End_Object 
37822>>>
37822>>>                Object ostudentCounty is a cWebCombo
37824>>>                    Entry_Item student.County
37825>>>                    Set piColumnSpan to 4
37826>>>                    Set piColumnIndex to 0
37827>>>                    Set peLabelPosition to lpTop
37828>>>                    Set psLabel to "Provincia"
37829>>>                End_Object 
37830>>>
37830>>>                Object ostudentCity is a cWebForm
37832>>>                    Entry_Item student.City
37833>>>                    Set piColumnSpan to 7
37834>>>                    Set piColumnIndex to 4
37835>>>                    Set peLabelPosition to lpTop
37836>>>                    Set psLabel to "Ciudad"
37837>>>                End_Object 
37838>>>
37838>>>                Object ostudentAddress is a cWebForm
37840>>>                    Entry_Item student.Address
37841>>>                    Set piColumnSpan to 10
37842>>>                    Set piColumnIndex to 0
37843>>>                    Set peLabelPosition to lpTop
37844>>>                    Set psLabel to "Dirección"
37845>>>                End_Object 
37846>>>
37846>>>                /*Object oschoolhouseID is a cWebForm                    Entry_Item schoolhouse.ID                    Set piColumnSpan to 3                    Set piColumnIndex to 0                    Set peLabelPosition to lpTop                    Set psLabel to "SchoolHouseID"                    Set pbPromptButton to True                    WebRegisterPath ntNavigateForward oSchoolHouse                    Procedure OnPrompt                        Send NavigatePath                    End_Procedure                End_Object*/ 
37846>>>            End_Object 
37847>>>
37847>>>            Object oPage3 is a cWebTabPage
37849>>>                Set piColumnCount to 12
37850>>>                Set psCaption to "Colegio"
37851>>>                WebSetResponsive piColumnCount rmMobile to 4
37852>>>
37852>>>                /*Object oschoolhouseID is a cWebForm                    Entry_Item schoolhouse.ID                    Set piColumnSpan to 3                    Set piColumnIndex to 0                    Set peLabelPosition to lpTop                    Set psLabel to "ID"                    Set pbPromptButton to False                    WebRegisterPath ntNavigateForward oSelectSchoolHouse                    Procedure OnPrompt                        Send NavigatePath                    End_Procedure                End_Object*/ 
37852>>>
37852>>>                Object oschoolhouseName is a cWebForm
37854>>>                    Entry_Item schoolhouse.Name
37855>>>                    Set piColumnSpan to 6
37856>>>                    Set piColumnIndex to 0
37857>>>                    Set peLabelPosition to lpTop
37858>>>                    Set psLabel to "Nombre"
37859>>>                    Set pbPromptButton to True
37860>>>
37860>>>                    WebRegisterPath ntNavigateForward oSelectSchoolHouse
37866>>>
37866>>>                    Procedure OnPrompt
37869>>>                        Send NavigatePath
37870>>>                    End_Procedure
37871>>>                End_Object 
37872>>>
37872>>>                Object oschoolhouseEmail is a cWebEdit
37874>>>                    Entry_Item schoolhouse.Email
37875>>>                    Set piColumnSpan to 0
37876>>>                    Set piColumnIndex to 0
37877>>>                    Set peLabelPosition to lpTop
37878>>>                    Set psLabel to "Email"
37879>>>                    Set piMinHeight to 150
37880>>>                End_Object 
37881>>>            End_Object 
37882>>>
37882>>>            Object oPage2 is a cWebTabPage
37884>>>                Set piColumnCount to 12
37885>>>                Set psCaption to "Otros"
37886>>>                WebSetResponsive piColumnCount rmMobile to 4
37887>>>
37887>>>                Object ostudentNotes is a cWebForm
37889>>>                    Entry_Item student.Notes
37890>>>                    Set piColumnSpan to 12
37891>>>                    Set piColumnIndex to 0
37892>>>                    Set peLabelPosition to lpTop
37893>>>                    Set psLabel to "Comentarios añadidos"
37894>>>                End_Object 
37895>>>
37895>>>                /*Object ostudentModifiedTime is a cWebForm                    Entry_Item student.ModifiedTime                    Set piColumnSpan to 6                    Set piColumnIndex to 0                    Set peLabelPosition to lpTop                    Set psLabel to "Fecha y hora de modificación"                End_Object                 Object ostudentCreatedTime is a cWebForm                    Entry_Item student.CreatedTime                    Set piColumnSpan to 6                    Set piColumnIndex to 0                    Set peLabelPosition to lpTop                    Set psLabel to "Fecha y hora de Creación"                End_Object*/ 
37895>>>            End_Object 
37896>>>        End_Object 
37897>>>    End_Object 
37898>>>
37898>>>    Object oActionGroup is a cWebMenuGroup
37900>>>
37900>>>        Object oSaveBtn is a cWebMenuItem
37902>>>            Set psCSSClass to "WebSaveMenuItem"
37903>>>            Set psCaption to "Guardar"
37904>>>
37904>>>            Procedure OnClick
37907>>>                Send Request_Save
37908>>>            End_Procedure
37909>>>
37909>>>        End_Object 
37910>>>
37910>>>        Object oEditBtn is a cWebMenuItem
37912>>>            Set psCSSClass to "WebEditMenuItem"
37913>>>            Set psCaption to "Editar"
37914>>>            Procedure OnClick
37917>>>                Send ChangeEditMode True
37918>>>                Send SetActionButtons
37919>>>            End_Procedure
37920>>>
37920>>>        End_Object 
37921>>>
37921>>>        Object oDeleteBtn is a cWebMenuItem
37923>>>            Set psCSSClass to "WebDeleteMenuItem"
37924>>>            Set psCaption to "Borrar"
37925>>>            Set peActionDisplay to adMenu
37926>>>
37926>>>            Procedure OnClick
37929>>>                Send Request_Delete
37930>>>            End_Procedure
37931>>>
37931>>>        End_Object 
37932>>>
37932>>>        Object oCancelChangesBtn is a cWebMenuItem
37934>>>            Set psCSSClass to "WebIcon_Refresh"
37935>>>            Set psCaption to "Limpiar Cambios"
37936>>>            Set peActionDisplay to adMenu
37937>>>            Procedure OnClick
37940>>>                Send RefreshRecord
37941>>>            End_Procedure
37942>>>
37942>>>        End_Object 
37943>>>    End_Object 
37944>>>
37944>>>    Procedure SetActionButtons
37947>>>        tWebNavigateData NavigateData
37947>>>        tWebNavigateData NavigateData
37947>>>        Boolean bHasRecord
37947>>>        Handle hoDD
37947>>>
37947>>>        Get Server to hoDD
37948>>>        Get GetNavigateData to NavigateData
37949>>>        Get HasRecord of hoDD to bHasRecord
37950>>>
37950>>>        // let's hide all buttons and then Show the ones we want
37950>>>        WebSet pbRender of oEditBtn to False
37951>>>        WebSet pbRender of oSaveBtn to False
37952>>>        WebSet pbRender of oCancelChangesBtn to False
37953>>>        WebSet pbRender of oDeleteBtn to False
37954>>>
37954>>>        If (NavigateData.bReadOnly) Begin
37956>>>            WebSet pbRender of oEditBtn to True
37957>>>        End
37957>>>>
37957>>>        Else Begin
37958>>>            WebSet pbRender of oSaveBtn to True
37959>>>            WebSet pbRender of oCancelChangesBtn to True
37960>>>            WebSet pbRender of oDeleteBtn to bHasRecord
37961>>>        End
37961>>>>
37961>>>    End_Procedure
37962>>>
37962>>>    Procedure OnViewSaved Handle hoServer Boolean bChanged
37965>>>        // Close after save
37965>>>        Send NavigateClose Self
37966>>>    End_Procedure
37967>>>
37967>>>    // this will close the view after a delete
37967>>>    Procedure OnViewDeleted Handle hoDDO
37970>>>        Send NavigateClose Self
37971>>>    End_Procedure
37972>>>
37972>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
37975>>>        Case Begin
37975>>>            Case (NavigateData.eNavigateType = nfFromMain)
37977>>>                // If from main, this is a propbably a main file Select to Zoom.
37977>>>                Case Break
37978>>>
37978>>>            Case (NavigateData.eNavigateType = nfFromParent)
37981>>>                // If from parent, this is a constrained drill down.
37981>>>                Case Break
37982>>>
37982>>>            Case (NavigateData.eNavigateType = nfFromChild)
37985>>>                // If from child, this is a probably a parent Zoom from a Zoom.
37985>>>                Case Break
37986>>>
37986>>>            Case Else // must be nfUndefined
37986>>>
37986>>>        Case End
37986>>>
37986>>>        Send SetActionButtons
37987>>>
37987>>>    End_Procedure
37988>>>
37988>>>End_Object 
37989>    Use SelectStudent.wo
Including file: SelectStudent.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\SelectStudent.wo)
37989>>>// C:\DataFlex Projects\ColegioAppWeb\AppSrc\SelectStudent.wo
37989>>>// SelectStudent
37989>>>//
37989>>>
37989>>>Use cWebView.pkg
37989>>>Use cWebList.pkg
37989>>>Use cWebMenuGroup.pkg
37989>>>Use cWebMenuItem.pkg
37989>>>Use cWebColumnButton.pkg
37989>>>Use cWebColumn.pkg
37989>>>Use Student.wo
37989>>>
37989>>>Use cschoolhouseDataDictionary.dd
37989>>>Use cstudentDataDictionary.dd
37989>>>
37989>>>Object oSelectStudent is a cWebView
37991>>>    Set psCaption to "ALUMNOS"
37992>>>    Set peWebViewStyle to wvsDrilldown
37993>>>    Set peViewType to vtSelect
37994>>>    Set piColumnCount to 12
37995>>>    Set pbShowCaption to True
37996>>>    Set piMaxWidth to 1024
37997>>>
37997>>>    Object oschoolhouse_DD is a cschoolhouseDataDictionary
37999>>>    End_Object 
38000>>>
38000>>>    Object ostudent_DD is a cstudentDataDictionary
38002>>>        Set DDO_Server To oschoolhouse_DD
38003>>>    End_Object 
38004>>>
38004>>>    Set Main_DD To ostudent_DD
38005>>>    Set Server  To ostudent_DD
38006>>>
38006>>>
38006>>>    Object oList is a cWebList
38008>>>        Set piColumnSpan to 12
38009>>>        Set psCSSClass to "MobileList"
38010>>>        Set pbServerOnRowClick to True
38011>>>        Set pbFillHeight to True
38012>>>        Set pbShowHeader to False
38013>>>        Set piSortColumn to 0
38014>>>
38014>>>        /*Object ostudentID is a cWebColumn            Entry_Item student.ID            Set psCaption to "student.ID"            Set piWidth to 124        End_Object*/
38014>>>
38014>>>        Object oDetailButton is a cWebColumnButton
38016>>>            Set psCaption to "btn"
38017>>>            Set piWidth to 45
38018>>>            Set pbFixedWidth to True
38019>>>            Set pbResizable to False
38020>>>            Set piListRowSpan to 8
38021>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
38022>>>            Set peAlign to alignRight
38023>>>            Set pbShowCaption to False
38024>>>
38024>>>            WebRegisterPath ntNavigateForward oStudent
38030>>>
38030>>>            Procedure OnClick
38033>>>                Send NavigatePath
38034>>>            End_Procedure
38035>>>
38035>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38038>>>                Move True to NavigateData.bReadOnly
38039>>>            End_Procedure
38040>>>
38040>>>        End_Object 
38041>>>
38041>>>        Object ostudentName is a cWebColumn
38043>>>            Entry_Item student.Name
38044>>>            Set psCaption to "student.Name"
38045>>>            Set piWidth to 192
38046>>>        End_Object 
38047>>>
38047>>>        Object ostudentLastName is a cWebColumn
38049>>>            Entry_Item student.LastName
38050>>>            Set psCaption to "student.LastName"
38051>>>            Set piWidth to 282
38052>>>        End_Object 
38053>>>
38053>>>        Object ostudentDNI is a cWebColumn
38055>>>            Entry_Item student.DNI
38056>>>            Set psCaption to "student.DNI"
38057>>>            Set piWidth to 205
38058>>>        End_Object 
38059>>>
38059>>>        Object ostudentEmail is a cWebColumn
38061>>>            Entry_Item student.Email
38062>>>            Set psCaption to "student.Email"
38063>>>            Set piWidth to 319
38064>>>        End_Object 
38065>>>
38065>>>        /*Object oschoolhouseID is a cWebColumn            Entry_Item schoolhouse.ID            Set psCaption to "schoolhouse.ID"            Set piWidth to 124            Set pbNewLine to True        End_Object*/ 
38065>>>
38065>>>        Object oschoolhouseName is a cWebColumn
38067>>>            Entry_Item schoolhouse.Name
38068>>>            Set psCaption to "schoolhouse.Name"
38069>>>            Set piWidth to 2243
38070>>>            Set pbNewLine to True
38071>>>        End_Object 
38072>>>
38072>>>        Object oschoolhouseEmail is a cWebColumn
38074>>>            Entry_Item schoolhouse.Email
38075>>>            Set psCaption to "schoolhouse.Email"
38076>>>            Set piWidth to 2182
38077>>>        End_Object 
38078>>>
38078>>>        WebRegisterPath ntNavigateForward oStudent
38084>>>
38084>>>        Procedure OnRowClick String sRowId
38087>>>            tWebNavigateData NavigateData
38087>>>            tWebNavigateData NavigateData
38087>>>            Get GetNavigateData to NavigateData
38088>>>
38088>>>            Case Begin
38088>>>                Case (NavigateData.eNavigateType = nfFromParent)
38090>>>                    Send NavigateForward of oStudent Self
38091>>>                    Case Break
38092>>>
38092>>>                Case (NavigateData.eNavigateType = nfFromChild)
38095>>>                    Send NavigateClose Self
38096>>>                    Case Break
38097>>>
38097>>>                Case (NavigateData.eNavigateType = nfFromMain)
38100>>>                    Send NavigateClose Self
38101>>>                    Case Break
38102>>>
38102>>>                Case Else // must be nfUndefined
38102>>>                    Send NavigateForward of oStudent Self
38103>>>
38103>>>            Case End
38103>>>        End_Procedure
38104>>>
38104>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38107>>>            Move True to NavigateData.bReadOnly
38108>>>        End_Procedure
38109>>>
38109>>>    End_Object 
38110>>>
38110>>>    Object oActionGroup is a cWebMenuGroup
38112>>>
38112>>>        Object oSearch is a cWebMenuItem
38114>>>            Set psCSSClass to "WebPromptMenuItem"
38115>>>            Set psCaption to "Buscar"
38116>>>
38116>>>            Procedure OnClick
38119>>>                Send Search of oList
38120>>>            End_Procedure
38121>>>
38121>>>        End_Object 
38122>>>
38122>>>        Object oNewButton is a cWebMenuItem
38124>>>            Set psCSSClass to "WebClearMenuItem"
38125>>>            Set psCaption to "Nuevo"
38126>>>
38126>>>            WebRegisterPath ntNavigateForward oStudent
38132>>>
38132>>>            Procedure OnClick
38135>>>                Send NavigatePath
38136>>>            End_Procedure
38137>>>
38137>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38140>>>                Move True to NavigateData.bNewRecord
38141>>>            End_Procedure
38142>>>
38142>>>        End_Object 
38143>>>    End_Object 
38144>>>
38144>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
38147>>>        WebSet pbRender of oNewButton to True
38148>>>        WebSet pbRender of oDetailButton to True
38149>>>
38149>>>        Case Begin
38149>>>            Case (NavigateData.eNavigateType = nfFromParent)
38151>>>                // If from parent, this is a constrained drill down
38151>>>                // If Row select does main-zoom we don't need this
38151>>>                WebSet pbRender of oDetailButton to False
38152>>>                Case Break
38153>>>
38153>>>            Case (NavigateData.eNavigateType = nfFromChild)
38156>>>                // If from child, this is a probably a parent lookup from a Zoom
38156>>>                Case Break
38157>>>
38157>>>            Case (NavigateData.eNavigateType = nfFromMain)
38160>>>                // If from main, this is a probably a main-file lookup from a Zoom
38160>>>                WebSet pbRender of oDetailButton to False
38161>>>                Case Break
38162>>>
38162>>>            Case Else // must be nfUndefined
38162>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
38162>>>                // If Row select does main-zoom we don't need this
38162>>>                WebSet pbRender of oDetailButton to False
38163>>>
38163>>>        Case End
38163>>>
38163>>>    End_Procedure
38164>>>
38164>>>
38164>>>End_Object 
38165>    Set phoDefaultView to oDashboard
38166>
38166>End_Object
38167>
38167>Send StartWebApp of oWebApp
38168>
Summary
Memory Available: 17765310464
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 25380
Total Resources: 0
Total Commands : 38167
Total Windows  : 0
Total Pages    : 0
Static Data    : 470151
Message area   : 255078
Total Blocks   : 16978
