Compiling Program: C:\DataFlex Projects\ColegioAppWeb\AppSrc\WebApp.src
Memory Available: 16919543808
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.x64.pkd    (C:\Program Files\DataFlex 24.0\Pkg\AllWebAppClasses.x64.pkd)
36015>Use cConnection.pkg
36015>Use cWebMenuItem.pkg
36015>
36015>Object oApplication is a cApplication
36017>    Object oConnection is a cConnection
36019>        Use LoginEncryption.pkg
Including file: LoginEncryption.pkg    (C:\Program Files\DataFlex 24.0\Pkg\LoginEncryption.pkg)
36019>>>Use cLoginEncryption.pkg
Including file: cLoginEncryption.pkg    (C:\Program Files\DataFlex 24.0\Pkg\cLoginEncryption.pkg)
36019>>>>>Use cCryptographerEx.pkg
36019>>>>>
36019>>>>>Class cLoginEncryption is a cObject
36020>>>>>    
36020>>>>>    Procedure Construct_Object
36022>>>>>        Forward Send Construct_Object
36024>>>>>        // this must be set to a multi (40ish) character random key
36024>>>>>        Property String psEncryptPassword ""
36025>>>>>        
36025>>>>>        Object oDataCrypter is a cCryptographerEx
36027>>>>>            Set piHash to CALG_SHA_256
36028>>>>>            Set piCipher to CALG_AES_256
36029>>>>>            Set psProvider to "" //  Not providing a specific provider gives the default provider for the provider type
36030>>>>>            Set piProvider to PROV_RSA_AES
36031>>>>>        End_Object
36032>>>>>    End_Procedure
36033>>>>>    
36033>>>>>    // This can be augmented to return a password encryption key using any
36033>>>>>    // hidden mechanism desired.
36033>>>>>    Function GetEncryptionPassword Returns String
36035>>>>>        String sPassword
36035>>>>>        Get psEncryptPassword to sPassword
36036>>>>>        Function_Return sPassword
36037>>>>>    End_Function
36038>>>>>    
36038>>>>>    // Encrypts a string into an unreadable hash that can later be decrypted using DecryptKey.
36038>>>>>    //
36038>>>>>    // Params:
36038>>>>>    //   sPlainText     String to encrypt.
36038>>>>>    // Returns:
36038>>>>>    //   Base64 encoded hash.
36038>>>>>    Function EncryptPassword String sPlainText Returns String
36040>>>>>        String sEncryptPassword sBase64
36040>>>>>        UChar[] ucBinary
36041>>>>>        Pointer pBase64
36041>>>>>        Integer iVoid
36041>>>>>        
36041>>>>>        //  Encrypt Key
36041>>>>>        Get GetEncryptionPassword to sEncryptPassword
36042>>>>>        If (sEncryptPassword = "") Begin
36044>>>>>            Error DFERR_PROGRAM "No encryption password set"
36045>>>>>>
36045>>>>>        End
36045>>>>>>
36045>>>>>        
36045>>>>>        Get Encrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) (StringToUCharArray(sPlainText)) to ucBinary
36046>>>>>        
36046>>>>>        If (SizeOfArray(ucBinary) = 0) Begin
36048>>>>>            Error DFERR_PROGRAM "Unable to encrypt database login password"
36049>>>>>>
36049>>>>>            Function_Return ""
36050>>>>>        End
36050>>>>>>
36050>>>>>        
36050>>>>>        //  Encode binary hash to Base64
36050>>>>>        Move (Base64Encode(AddressOf(ucBinary), SizeOfArray(ucBinary))) to pBase64
36051>>>>>        Move (PointerToString(pBase64)) to sBase64
36052>>>>>        Move (Free(pBase64)) to iVoid
36053>>>>>        
36053>>>>>        Function_Return sBase64
36054>>>>>    End_Function
36055>>>>>    
36055>>>>>    
36055>>>>>    // Decrypts the unreadable hash generated by EncryptKey into a readable string.
36055>>>>>    //
36055>>>>>    // Params:
36055>>>>>    //   sBase64EncryptedPassword       Base64 Encrypted password
36055>>>>>    // Returns:
36055>>>>>    //   Readable plain text password
36055>>>>>    Function DecryptPassword String sBase64EncryptedPassword Returns String
36057>>>>>        String sEncryptPassword
36057>>>>>        UChar[] ucBinary ucPlain
36059>>>>>        Boolean bIsHex
36059>>>>>        Integer iLen iVoid
36059>>>>>        Pointer pBinary
36059>>>>>        
36059>>>>>        If (sBase64EncryptedPassword <> "") Begin
36061>>>>>            //  Decode from Base64
36061>>>>>            Move (Base64Decode(AddressOf(sBase64EncryptedPassword), &iLen)) to pBinary
36062>>>>>            
36062>>>>>            Move (ResizeArray(ucBinary, iLen, 0)) to ucBinary
36063>>>>>            Move (MemCopy(AddressOf(ucBinary), pBinary, iLen)) to iVoid
36064>>>>>                        
36064>>>>>            Move (Free(pBinary)) to iVoid
36065>>>>>            
36065>>>>>            //  Encrypted binary hash to string
36065>>>>>            Get GetEncryptionPassword to sEncryptPassword
36066>>>>>            Get Decrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) ucBinary to ucPlain
36067>>>>>        End
36067>>>>>>
36067>>>>>        
36067>>>>>        Function_Return (UCharArrayToString(ucPlain))
36068>>>>>    End_Function
36069>>>>>End_Class
36070>>>
36070>>>Object oLoginEncryption is a cLoginEncryption
36072>>>
36072>>>    // this must be created in your appsrc directory and must contain an encryption
36072>>>    // key that is set to psEncryptPassword. It will look something like this
36072>>>    //
36072>>>    // Set psEncryptPassword to "JchUAo7W@r.b{<Yk~OONi0nq=sMi[*Rn[A-`Vo)q"
36072>>>    //  
Including file: LoginEncryptionKey.inc    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\LoginEncryptionKey.inc)
36072>>>>// Studio generated login encryption key
36072>>>>Set psEncryptPassword to "l0#+3%h0Gfb*z}g.2beO1A.4X~j(p@AB%<{=Rgi3"
36073>>>>
36073>>>    
36073>>>    // use this to register this object to your cConnection Object. This object
36073>>>    // must be created after the cConnection object
36073>>>    Move Self to ghoLoginEncryption
36074>>>End_Object
36075>    End_Object
36076>End_Object
36077>
36077>Object oWebApp is a cWebApp
36079>    Set psTheme to "Df_Material"
36080>    Set peAlignView to alignCenter
36081>    
36081>    // It is important to set this so that all views will default
36081>    // to drill down style views.
36081>    Set peApplicationStyle to wvsDrillDown   
36082>    Set peApplicationStateMode to asmHistoryAndUrls 
36083>    Set psEncryptPassword to "tm<W]8a2xu$eEiKo6To#(dY~P0&#as*~_%sXO,xT"
36084>    Set peLoginMode to lmLoginNone
36085>
36085>    Object oViewStack is a cWebViewStack
36087>    End_Object
36088>    
36088>    Procedure HideHeader
36091>        WebSet pbRender of oHeaderPanel to False
36092>    End_Procedure
36093>
36093>    Procedure ShowHeader
36096>        WebSet pbRender of oHeaderPanel to True 
36097>    End_Procedure
36098>
36098>    Object oHeaderPanel is a cWebPanel
36100>        Set peRegion to prTop
36101>        Set psCSSClass to "HeaderPanel"
36102>        
36102>        Object oMenuPanel is a cWebPanel
36104>            Set peRegion to prLeft
36105>            Set piWidth to 50
36106>            
36106>            Object oMenuButton is a cWebMenuButton
36108>                Set piMenuHeight to 500
36109>
36109>                Object oDashboard_itm is a cWebMenuItem
36111>                    Set psCaption to "Seleccione"
36112>                    
36112>                    WebRegisterPath ntNavigateBegin oDashboard
36118>
36118>                    Procedure OnClick
36121>                        Send NavigatePath
36122>                    End_Procedure
36123>                End_Object
36124>
36124>                Object oViewMenu is a cWebMenuItem
36126>                    Set psCaption to "Listados"
36127>
36127>                    Object oSchoolHouseItem1 is a cWebMenuItem
36129>                        Set psCaption to "Listado de COLEGIOS"
36130>
36130>                        WebRegisterPath ntNavigateBegin oSelectSchoolHouse
36136>
36136>                        Procedure OnClick
36139>                            Forward Send OnClick
36141>                                Send NavigatePath
36142>                        End_Procedure
36143>                    End_Object
36144>
36144>                    Object oSelectStudentItem1 is a cWebMenuItem
36146>                        Set psCaption to "Listado de ESTUDIANTES"
36147>
36147>                        WebRegisterPath ntNavigateBegin oSelectStudent
36153>
36153>                        Procedure OnClick
36156>                            Forward Send OnClick
36158>                                Send NavigatePath
36159>                        End_Procedure
36160>                    End_Object
36161>                End_Object
36162>
36162>                Object oSignOut_itm is a cWebMenuItem
36164>                    Set psCaption to "Salir"
36165>
36165>                    Procedure OnClick
36168>                        Send RequestLogOut of ghoWebSessionManager
36169>                    End_Procedure
36170>                End_Object
36171>            End_Object  
36172>
36172>            Object oBackButton is a cWebButton
36174>                Set psCSSClass to "WebBack_Icon"
36175>                Set pbRender to False
36176>                Set psCaption to "Atras"
36177>                
36177>                Procedure OnClick
36180>                    Handle hoTop
36180>                    
36180>                    Get TopViewHandle of oViewStack to hoTop
36181>                    If (hoTop > 0) Begin
36183>                        Send NavigateCancel of hoTop 
36184>                    End
36184>                End_Procedure
36185>            End_Object
36186>            
36186>            Send AddClient of oViewStack Self
36187>                
36187>            Procedure OnUpdateViewStack
36190>                Handle hoTop hoDflt
36190>                Integer eMode
36190>                Boolean bTop
36190>                
36190>                WebGet peMode of (Owner(Self)) to eMode
36191>                
36191>                Get TopViewHandle of oViewStack to hoTop
36192>                Get GetDefaultView to hoDflt
36193>                Move (hoTop=0 or hoTop=hoDflt) to bTop
36194>                
36194>                WebSet pbRender of oBackButton to (not(bTop) and eMode >= rmMobile)
36195>                WebSet pbRender of oMenuButton to (bTop or eMode < rmMobile)
36196>            End_Procedure
36197>
36197>        End_Object
36198>
36198>        Object oCaptionPanel is a cWebPanel
36200>            Set piColumnCount to 12
36201>
36201>            Object oCaptionBreadcrumb is a cWebBreadcrumb
36203>                Set peBreadcrumbStyle to crumbCaption
36204>                WebSetResponsive peBreadcrumbStyle rmMobile to crumbDropDown
36205>            End_Object         
36206>        End_Object
36207>        
36207>        Object oActionPanel is a cWebPanel
36209>            Set peRegion to prRight
36210>            Set piColumnCount to 1
36211>            Set piWidth to 120
36212>
36212>            Object oMainActions is a cWebActionBar
36214>                Set psGroupName to "MainActions"
36215>
36215>                Set piColumnSpan to 0
36216>                Set peAlign to alignRight
36217>            End_Object
36218>        End_Object
36219>
36219>        Object oBreadcrumbPanel is a cWebPanel
36221>            Set peRegion to prBottom
36222>            
36222>            Object oHorizontalBreadcrumb is a cWebBreadcrumb
36224>                WebSetResponsive pbRender rmMobile to False
36225>            End_Object         
36226>        End_Object
36227>
36227>    End_Object    
36228>
36228>    Use SessionManager.wo
Including file: SessionManager.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\SessionManager.wo)
36228>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (C:\Program Files\DataFlex 24.0\Pkg\cWebSessionManagerStandard.pkg)
36228>>>>>Use cWebSessionManager.pkg
36228>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (C:\Program Files\DataFlex 24.0\Pkg\cWebAppSessionDataDictionary.dd)
36228>>>>>>>Use DataDict.pkg
36228>>>>>>>
36228>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\WebAppSession.fd)
36230>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\WebAppUser.fd)
36232>>>>>>>
36232>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
36233>>>>>>>    Procedure Construct_Object
36235>>>>>>>        Forward Send Construct_Object
36237>>>>>>>
36237>>>>>>>        Set Main_File to WebAppSession.File_Number
36238>>>>>>>
36238>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
36239>>>>>>>
36239>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
36240>>>>>>>
36240>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36241>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36242>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36243>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36244>>>>>>>
36244>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
36245>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
36246>>>>>>>    End_Procedure
36247>>>>>>>
36247>>>>>>>    Procedure Creating
36249>>>>>>>        DateTime dtCurrentDateTime
36249>>>>>>>        
36249>>>>>>>        Forward Send Creating
36251>>>>>>>        
36251>>>>>>>        //  Init usecounter
36251>>>>>>>        Move 0 to WebAppSession.UseCount
36252>>>>>>>        
36252>>>>>>>        //  Set the creation and access time to the current time
36252>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
36253>>>>>>>    
36253>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
36254>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
36255>>>>>>>        
36255>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
36256>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
36257>>>>>>>    End_Procedure
36258>>>>>>>    
36258>>>>>>>    //
36258>>>>>>>    //  Converts the given time to an string that can be saved in the database.
36258>>>>>>>    //
36258>>>>>>>    //  Params:
36258>>>>>>>    //      dtTime  Time to convert
36258>>>>>>>    //  Returns:
36258>>>>>>>    //      String with "HH:MM:SS" format
36258>>>>>>>    //
36258>>>>>>>    Function TimeToString DateTime dtTime Returns String
36260>>>>>>>        String sHours sMinutes sSeconds
36260>>>>>>>        
36260>>>>>>>        //  Extract parts
36260>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
36261>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
36262>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
36263>>>>>>>        
36263>>>>>>>        //  Fill out with 0
36263>>>>>>>        If (Length(sHours) = 1) ;            Move ("0" + sHours) to sHours
36266>>>>>>>        If (Length(sMinutes) = 1) ;            Move ("0" + sMinutes) to sMinutes
36269>>>>>>>        If (Length(sSeconds) = 1) ;            Move ("0" + sSeconds) to sSeconds
36272>>>>>>>        
36272>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
36273>>>>>>>    End_Function
36274>>>>>>>    
36274>>>>>>>    //
36274>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
36274>>>>>>>    //
36274>>>>>>>    //  Params:
36274>>>>>>>    //      dtTime  Datetime variable to add time to
36274>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
36274>>>>>>>    //  Returns:
36274>>>>>>>    //      dtDateTime with the loaded time
36274>>>>>>>    //
36274>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
36276>>>>>>>        String sHours sMinutes sSeconds
36276>>>>>>>        
36276>>>>>>>        //  Extract parts
36276>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
36277>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
36278>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
36279>>>>>>>        
36279>>>>>>>        //  Set to DateTime
36279>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
36280>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
36281>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
36282>>>>>>>        
36282>>>>>>>        Function_Return dtTime
36283>>>>>>>    End_Function
36284>>>>>>>End_Class
36285>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (C:\Program Files\DataFlex 24.0\Pkg\cWebAppUserDataDictionary.dd)
36285>>>>>>>Use DataDict.pkg
36285>>>>>>>Open WebAppUser
36287>>>>>>>Open WebAppSession
36289>>>>>>>
36289>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
36290>>>>>>>    
36290>>>>>>>    Procedure Construct_Object
36292>>>>>>>        Forward Send Construct_Object
36294>>>>>>>        Set Main_File to WebAppUser.File_Number
36295>>>>>>>
36295>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
36296>>>>>>>
36296>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36297>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36298>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36299>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36300>>>>>>>    End_Procedure
36301>>>>>>>
36301>>>>>>>End_Class
36302>>>>>
36302>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
36303>>>>>    
36303>>>>>    Procedure Construct_Object
36305>>>>>        Handle hoUserDD hoSessionDD
36305>>>>>        
36305>>>>>        Forward Send Construct_Object
36307>>>>>        
36307>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
36308>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
36309>>>>>        
36309>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
36310>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
36311>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
36312>>>>>
36312>>>>>        Set phoUserDD to hoUserDD
36313>>>>>        Set phoSessionDD to hoSessionDD
36314>>>>>        Property Boolean pbCreatingNewSession False
36315>>>>>        Property String psLoginName
36316>>>>>        Property String psUserName ""
36317>>>>>        Property Integer piUserRights 0
36318>>>>>    End_Procedure
36319>>>>>    
36319>>>>>    Function CreateSession String sRemoteAddress Returns String
36321>>>>>        String sSessionKey
36321>>>>>        Integer iErr
36321>>>>>        Boolean bLogWebSession
36321>>>>>        Handle hoSessionDD       
36321>>>>>        Get phoSessionDD to hoSessionDD
36322>>>>>        
36322>>>>>        //  Get session key
36322>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
36324>>>>>        
36324>>>>>        Get pbLogWebSession to bLogWebSession
36325>>>>>        If not bLogWebSession Begin
36327>>>>>            Function_Return sSessionKey        
36328>>>>>        End
36328>>>>>>
36328>>>>>
36328>>>>>        //  Store session
36328>>>>>        Send Clear of hoSessionDD
36329>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
36330>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
36331>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
36332>>>>>        Get Request_Validate of hoSessionDD to iErr
36333>>>>>        If (iErr) Begin
36335>>>>>            // this should not happen. If it does its a programming error
36335>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36336>>>>>>
36336>>>>>            Function_Return ""
36337>>>>>        End
36337>>>>>>
36337>>>>>        Send Request_Save of hoSessionDD
36338>>>>>        If (Err) Begin
36340>>>>>            // this shouldn't happen, if it does likely a duplicate session key issue, even through request_save already gave an error we give another one to make tracking down easier
36340>>>>>            Error DFERR_PROGRAM C_$WebAppSesionSaveFailed
36341>>>>>>
36341>>>>>            Function_Return ""
36342>>>>>        End
36342>>>>>>
36342>>>>>       
36342>>>>>        Function_Return sSessionKey        
36343>>>>>    End_Function
36344>>>>>    
36344>>>>>    
36344>>>>>    Function ValidateSession String sSessionKey Boolean bOptLoadWebApp Returns Boolean
36346>>>>>        DateTime dtLastAccess dtCurrent
36346>>>>>        TimeSpan tsDiff
36346>>>>>        Integer iErr iSessionTimeout iSpanMinutes
36346>>>>>        Boolean bResult bCreatingNewSession
36346>>>>>        Boolean bLogWebSession bLoadWebApp
36346>>>>>        Integer eLoginMode
36346>>>>>        String sTime
36346>>>>>        Handle hoSessionDD hoUserDD       
36346>>>>>        
36346>>>>>        Move False to bLoadWebApp
36347>>>>>        If (num_arguments >= 2) Begin
36349>>>>>            Move bOptLoadWebApp to bLoadWebApp
36350>>>>>        End
36350>>>>>>
36350>>>>>        
36350>>>>>        Get phoSessionDD to hoSessionDD
36351>>>>>        Get phoUserDD to hoUserDD
36352>>>>>        
36352>>>>>        Get pbLogWebSession to bLogWebSession
36353>>>>>        Get peLoginMode to eLoginMode
36354>>>>>        
36354>>>>>        // for this object, you can only disable logging if login completely is disabled
36354>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
36356>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
36357>>>>>>
36357>>>>>            Function_Return False
36358>>>>>        End
36358>>>>>>
36358>>>>>
36358>>>>>        //  Clear session properties
36358>>>>>        Set psSessionKey to ""
36359>>>>>        Send UpdateSessionProperties True
36360>>>>>        
36360>>>>>        If not bLogWebSession Begin
36362>>>>>            Forward Get ValidateSession sSessionKey to bResult
36364>>>>>            Function_Return bResult
36365>>>>>        End        
36365>>>>>>
36365>>>>>        
36365>>>>>        Move False to bResult
36366>>>>>        Get piSessionTimeout to iSessionTimeout 
36367>>>>>        
36367>>>>>        //  Check if session exists
36367>>>>>        Send Clear of hoSessionDD
36368>>>>>        Move sSessionKey to WebAppSession.SessionKey
36369>>>>>        Send Find of hoSessionDD EQ Index.1
36370>>>>>            
36370>>>>>        If (Found) Begin
36372>>>>>            //  Calculate timespan between now and last access time
36372>>>>>            Move (CurrentDateTime()) to dtCurrent
36373>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
36374>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
36375>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
36376>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
36377>>>>>            
36377>>>>>            //  Check if session didn't time out
36377>>>>>            If (IsDateValid(dtLastAccess) and (iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
36379>>>>>                Forward Get ValidateSession sSessionKey to bResult
36381>>>>>                   
36381>>>>>                If (bResult) Begin
36383>>>>>                    //  Update session record
36383>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
36384>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
36385>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
36386>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
36387>>>>>                    Get Request_Validate of hoSessionDD to iErr
36388>>>>>                    If (iErr) Begin
36390>>>>>                        // this should not happen. If it does its a programming error
36390>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36391>>>>>>
36391>>>>>                        Function_Return False
36392>>>>>                    End
36392>>>>>>
36392>>>>>                    Send Request_Save of hoSessionDD
36393>>>>>                    
36393>>>>>                    //  Update user properties
36393>>>>>                    Send UpdateSessionProperties False
36394>>>>>                End
36394>>>>>>
36394>>>>>            End
36394>>>>>>
36394>>>>>            Else Begin
36395>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
36395>>>>>                Get pbCreatingNewSession to bCreatingNewSession
36396>>>>>                
36396>>>>>                If (not(bCreatingNewSession)) Begin
36398>>>>>                    If (not(bLoadWebApp)) Begin
36400>>>>>                        Move False to bResult   //  We can only continue immediately if we were loading the webapp, other operations are not allowed!
36401>>>>>                        Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
36402>>>>>>
36402>>>>>                        Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
36403>>>>>                    End
36403>>>>>>
36403>>>>>                    Else Begin
36404>>>>>                        Set pbCreatingNewSession to True                    
36405>>>>>                        Get RecreateSession of ghoWebApp to bResult 
36406>>>>>                        Set pbCreatingNewSession to False                        
36407>>>>>                    End
36407>>>>>>
36407>>>>>                End
36407>>>>>>
36407>>>>>            End
36407>>>>>>
36407>>>>>        End
36407>>>>>>
36407>>>>>        Else Begin
36408>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
36409>>>>>>
36409>>>>>        End
36409>>>>>>
36409>>>>>        
36409>>>>>        Function_Return bResult
36410>>>>>    End_Function
36411>>>>>    
36411>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
36413>>>>>        String sSessionKey sUserPassword
36413>>>>>        Handle hoSessionDD hoUserDD
36413>>>>>        Boolean bMatch  
36413>>>>>        
36413>>>>>        Get phoSessionDD to hoSessionDD
36414>>>>>        Get phoUserDD to hoUserDD
36415>>>>>        Integer iErr eLoginMode
36415>>>>>        
36415>>>>>        // Refind session record
36415>>>>>        Get psSessionKey to sSessionKey
36416>>>>>        Send Clear of hoSessionDD
36417>>>>>        Move sSessionKey to WebAppSession.SessionKey
36418>>>>>        Send Find of hoSessionDD EQ Index.1
36419>>>>>        
36419>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
36421>>>>>            Get peLoginMode to eLoginMode
36422>>>>>            
36422>>>>>            //  Find the user
36422>>>>>            Move sLoginName to WebAppUser.LoginName
36423>>>>>            Send Find of hoUserDD EQ Index.1
36424>>>>>            
36424>>>>>            // Check username and password
36424>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
36426>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
36427>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
36428>>>>>                
36428>>>>>                If (bMatch) Begin
36430>>>>>                    // Store the login
36430>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
36431>>>>>                    Get Request_Validate of hoSessionDD to iErr
36432>>>>>                    If (iErr) Begin
36434>>>>>                        // this should not happen. If it does its a programming error
36434>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36435>>>>>>
36435>>>>>                        Function_Return False
36436>>>>>                    End
36436>>>>>>
36436>>>>>                    
36436>>>>>                    Send Request_Save of hoSessionDD
36437>>>>>                    
36437>>>>>                    // Update session properties
36437>>>>>                    Send UpdateSessionProperties False
36438>>>>>                    Send NotifyChangeRights
36439>>>>>                    Function_Return True
36440>>>>>                End
36440>>>>>>
36440>>>>>                Else Begin
36441>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
36441>>>>>                    Send Clear of hoUserDD
36442>>>>>                End
36442>>>>>>
36442>>>>>            End
36442>>>>>>
36442>>>>>        End
36442>>>>>>
36442>>>>>          
36442>>>>>        Function_Return False
36443>>>>>    End_Function
36444>>>>>    
36444>>>>>    Function IsLoggedIn Returns Boolean
36446>>>>>        String sLoginName
36446>>>>>        Boolean bLogWebSession bLoggedIn
36446>>>>>        
36446>>>>>        Get pbLogWebSession to bLogWebSession
36447>>>>>        If not bLogWebSession Begin
36449>>>>>            Forward Get IsLoggedIn to bLoggedIn
36451>>>>>            Function_Return bLoggedIn
36452>>>>>        End
36452>>>>>>
36452>>>>>        
36452>>>>>        Get psLoginName to sLoginName
36453>>>>>        
36453>>>>>        Function_Return (sLoginName <> "")
36454>>>>>    End_Function
36455>>>>>    
36455>>>>>    
36455>>>>>    //
36455>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
36455>>>>>    // update properties based on the session and user data. Augment this function to update 
36455>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
36455>>>>>    // the right records when this procedure is called.
36455>>>>>    //
36455>>>>>    // Params:
36455>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
36455>>>>>    //
36455>>>>>    Procedure UpdateSessionProperties Boolean bClear
36457>>>>>        Handle hoUserDD
36457>>>>>        
36457>>>>>        Get phoUserDD to hoUserDD
36458>>>>>        
36458>>>>>        //  Update user properties
36458>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
36460>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
36461>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
36462>>>>>            Set piUserRights to WebAppUser.Rights
36463>>>>>            
36463>>>>>            Send OnSessionPropertiesSet 
36464>>>>>        End
36464>>>>>>
36464>>>>>        Else Begin
36465>>>>>            Set psUsername to ""
36466>>>>>            Set psLoginName to ""
36467>>>>>            Set piUserRights to 0
36468>>>>>            
36468>>>>>            Send OnSessionPropertiesClear
36469>>>>>        End
36469>>>>>>
36469>>>>>    End_Procedure
36470>>>>>    
36470>>>>>    //
36470>>>>>    // This function is called to perform the password comparison. It gets the entered password and
36470>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
36470>>>>>    // right record. This function can be augmented to implement security features like storing the
36470>>>>>    // password as a hashed value.
36470>>>>>    //
36470>>>>>    // Params:
36470>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
36470>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
36470>>>>>    //
36470>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
36472>>>>>        Function_Return (sUserPassword = sEnteredPassword)
36473>>>>>    End_Function
36474>>>>>    
36474>>>>>    Procedure OnSessionPropertiesSet
36476>>>>>        //  Empty event stub
36476>>>>>    End_Procedure
36477>>>>>    
36477>>>>>    Procedure OnSessionPropertiesClear
36479>>>>>        //  Empty event stub
36479>>>>>    End_Procedure
36480>>>>>    
36480>>>>>    Procedure EndSession
36482>>>>>        Integer iErr
36482>>>>>        Boolean bLogWebSession
36482>>>>>        Handle hoSessionDD       
36482>>>>>        
36482>>>>>        Get phoSessionDD to hoSessionDD
36483>>>>>        Get pbLogWebSession to bLogWebSession
36484>>>>>        If not bLogWebSession Begin
36486>>>>>            Forward Send EndSession
36488>>>>>            Procedure_Return
36489>>>>>        End
36489>>>>>>
36489>>>>>            
36489>>>>>        //  Check if session exists
36489>>>>>        Send Clear of hoSessionDD
36490>>>>>        Get psSessionKey to WebAppSession.SessionKey
36491>>>>>        
36491>>>>>        Send Find of hoSessionDD EQ Index.1
36492>>>>>        If (Found) Begin
36494>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
36495>>>>>            Get Request_Validate of hoSessionDD to iErr
36496>>>>>            If (iErr) Begin
36498>>>>>                // this should not happen. If it does its a programming error
36498>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36499>>>>>>
36499>>>>>                Procedure_Return
36500>>>>>            End
36500>>>>>>
36500>>>>>            Send Request_Save of hoSessionDD
36501>>>>>        End
36501>>>>>>
36501>>>>>    End_Procedure
36502>>>>>
36502>>>>>End_Class
36503>>>>>
36503>>>
36503>>>Object oSessionManager is a cWebSessionManagerStandard
36505>>>End_Object
36506>>>
36506>>>
36506>    Use Login.wo
Including file: Login.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\Login.wo)
36506>>>Use cWebView.pkg
36506>>>Use cWebForm.pkg
36506>>>Use cWebButton.pkg
36506>>>Use cWebPanel.pkg
36506>>>Use cWebLabel.pkg
36506>>>Use cWebSpacer.pkg
36506>>>Use cWebImage.pkg
36506>>>
36506>>>Object oLogin is a cWebView
36508>>>    Set piMinWidth to 250
36509>>>    Set piMaxWidth to 420
36510>>>    Set pbLoginModeEnforced to False
36511>>>    Set piColumnCount to 12
36512>>>    Set psCSSClass to "LoginView"
36513>>>    Set pbServerOnSubmit to True
36514>>>    
36514>>>    Set psStateViewName to "Login"
36515>>>    Set pbStateReplace to True  // Always replace the state so the login never becomes its own history item
36516>>>    
36516>>>    Property String psPrevStateHash ""  // Remember the state hash that the user navigated too so we can redirect after login
36519>>>    
36519>>>    Delegate Set phoLoginView to Self
36521>>>    
36521>>>    Object oTopSpacer is a cWebSpacer
36523>>>        Set pbFillHeight to True
36524>>>        Set piColumnSpan to 12
36525>>>    End_Object
36526>>>    
36526>>>    Object oWarning is a cWebLabel
36528>>>        Set pbVisible to False
36529>>>        Set psCaption to "Invalid User ID or password. \n\rHint: 'Guest' & 'guest'."
36530>>>        Set peAlign to alignCenter
36531>>>        Set piColumnSpan to 12
36532>>>        Set psCSSClass to "LoginWarning"
36533>>>    End_Object
36534>>>    
36534>>>    Object oLogo is a cWebImage
36536>>>        Set piColumnSpan to 10
36537>>>        Set psUrl to "images/DF_Logo_Retina.png"
36538>>>        Set pePosition to wiFit
36539>>>        Set piColumnIndex to 1
36540>>>        Set piHeight to 160
36541>>>        
36541>>>        WebSetResponsive piHeight rmMobile to 100  // Best for small smart phones
36542>>>    End_Object
36543>>>    
36543>>>    Object oLoginName is a cWebForm
36545>>>        Set psLabel to "User ID:"
36546>>>        Set peLabelPosition to lpTop
36547>>>        Set piMaxLength to 20
36548>>>        Set piColumnIndex to 1
36549>>>        Set pbShowLabel to False
36550>>>        Set psPlaceHolder to "loginname"
36551>>>        Set piColumnSpan to 10
36552>>>        Set psAutoComplete to "username"
36553>>>    End_Object
36554>>>    
36554>>>    Object oPassword is a cWebForm
36556>>>        Set psLabel to "Password:"
36557>>>        Set pbPassword to True
36558>>>        Set peLabelAlign to alignLeft
36559>>>        Set piMaxLength to 20
36560>>>        Set peLabelPosition to lpTop
36561>>>        Set pbShowLabel to False
36562>>>        Set psPlaceHolder to "password"
36563>>>        Set piColumnSpan to 10
36564>>>        Set piColumnIndex to 1
36565>>>        Set psAutoComplete to "current-password"
36566>>>    End_Object
36567>>>    
36567>>>    Object oWebSpacer1 is a cWebSpacer
36569>>>        Set piColumnSpan to 12
36570>>>        Set piHeight to 10
36571>>>    End_Object
36572>>>    
36572>>>    Object oLoginButton is a cWebButton
36574>>>        Set pbShowLabel to False
36575>>>        Set psCaption to "sign in"
36576>>>        Set pbServerOnClick to True
36577>>>        Set piColumnSpan to 10
36578>>>        Set piColumnIndex to 1
36579>>>        
36579>>>        Procedure OnClick
36582>>>            Send DoLogin
36583>>>        End_Procedure
36584>>>    End_Object
36585>>>    
36585>>>    Object oBottomSpacer is a cWebSpacer
36587>>>        Set pbFillHeight to True
36588>>>        Set piColumnSpan to 12
36589>>>    End_Object
36590>>>    
36590>>>    Procedure DoLogin
36593>>>        String sLoginName sPassword sPrevStateHash
36593>>>        Boolean bResult
36593>>>        
36593>>>        WebGet psValue of oLoginName to sLoginName
36594>>>        WebGet psValue of oPassword to sPassword
36595>>>        
36595>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
36596>>>        
36596>>>        If (bResult) Begin
36598>>>            Send Hide of oLogin
36599>>>            Send ShowHeader of ghoWebApp
36600>>>            WebSet psCSSClass of ghoWebApp to ""
36601>>>            
36601>>>            WebGet psPrevStateHash to sPrevStateHash
36602>>>            Send NavigateToStateHash of ghoWebApp sPrevStateHash True
36603>>>            
36603>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
36603>>>            WebSet psValue of oLoginName to ""
36604>>>            WebSet psValue of oPassword  to ""
36605>>>            WebSet pbVisible of oWarning to False
36606>>>        End
36606>>>>
36606>>>        Else Begin
36607>>>            WebSet pbVisible of oWarning to True
36608>>>        End
36608>>>>
36608>>>    End_Procedure
36609>>>    
36609>>>    Procedure OnSubmit
36612>>>        Send DoLogin
36613>>>    End_Procedure
36614>>>    
36614>>>    Procedure OnLoad
36617>>>        String sPrevStateHash sView
36617>>>        
36617>>>        Forward Send OnLoad
36619>>>        
36619>>>        //  Store the current state so we can go back to that later (only if it points to a different view)
36619>>>        Get StateHash of ghoWebApp to sPrevStateHash
36620>>>        Send ParseViewStateHash sPrevStateHash (&sView)
36621>>>        If (Lowercase(sView) <> Lowercase(psStateViewName(Self))) Begin
36623>>>            WebSet psPrevStateHash to sPrevStateHash
36624>>>        End
36624>>>>
36624>>>        
36624>>>    End_Procedure
36625>>>    
36625>>>    Procedure OnBeforeShow
36628>>>        //  Hide header & apply nice background style
36628>>>        Send HideHeader to ghoWebApp
36629>>>        WebSet psCSSClass of ghoWebApp to "LoginBackground"
36630>>>    End_Procedure
36631>>>    
36631>>>End_Object
36632>>>
36632>>>
36632>>>
36632>>>
36632>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\WebResourceManager.wo)
36632>>>Use cWebResourceManager.pkg
36632>>>
36632>>>Object oWebResourceManager is a cWebResourceManager
36634>>>End_Object
36635>    
36635>    Use Dashboard.wo
Including file: Dashboard.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\Dashboard.wo)
36635>>>Use cWebView.pkg
36635>>>Use cWebPanel.pkg
36635>>>Use cWebForm.pkg
36635>>>Use cWebButton.pkg
36635>>>Use cWebGroup.pkg
36635>>>Use cWebSpacer.pkg
36635>>>Use cWebHtmlBox.pkg
36635>>>Use cWebMenuGroup.pkg
36635>>>Use cWebMenuItem.pkg
36635>>>Use cWebLabel.pkg
36635>>>Use cWebList.pkg
36635>>>Use cWebColumn.pkg
36635>>>
36635>>>Object oDashboard is a cWebView
36637>>>
36637>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
36637>>>    // Add a DDO Structure 
36637>>>    //
36637>>>    // There is no need to synchronize a DD structure on the client so we do
36637>>>    // not set the Server property or send ADDOStructure. We will simply use
36637>>>    // DDO's to mine data and generate HTML for our cWebHTMLBox objects.
36637>>>    // It is the HTML in these objects that is sent to the client each time 
36637>>>    // this page is shown.
36637>>>    //
36637>>>    // Also, it is important for the drill-down Navigation interface that we
36637>>>    // do not set the Server property to some DDO because this will affect 
36637>>>    // constraints in the next view that we navigate to.
36637>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
36637>>>
36637>>>    Set piMaxWidth to 1024
36638>>>    
36638>>>    Set psCaption to "Menú Inicio"
36639>>>    Set peViewType to vtUndefined
36640>>>    Set pbShowCaption to False
36641>>>    Set psCSSClass to "Dashboard"
36642>>>    
36642>>>    Object oWebMainPanel is a cWebPanel
36644>>>        Set piColumnCount to alignCenter
36645>>>        Set psBackgroundColor to "lightblue"
36646>>>        //Set psHtml to '<div><img src="C:\DataFlex Projects\ColegioAppWeb\Bitmaps\colegio.bmp"></div>'
36646>>>        
36646>>>        // - - - - - - - - - - - - - - -
36646>>>        // Main Panel's Responsive Rules
36646>>>        // - - - - - - - - - - - - - - -
36646>>>        WebSetResponsive piColumnCount rmMobile to 1
36647>>>        WebSetResponsive piColumnCount rmTabletPortrait to 16
36648>>>    
36648>>>        Object oTiles_grp is a cWebGroup
36650>>>            Set piColumnSpan to 1
36651>>>            Set pbShowBorder to False
36652>>>            Set pbShowCaption to False
36653>>>            Set piColumnCount to 12
36654>>>            
36654>>>            Set psCSSClass to "TilesGroup"
36655>>>            Set psBackgroundColor to "lightblue"
36656>>>    
36656>>>            /*Object oWelcomeTile is a cWebHtmlBox                Set piColumnSpan to 6                Set psCSSClass to "Tile Light"                Set psHtml to '<div Class="WebCon_Sizer"><div class="Tile_Title">Inicio</div><div Class="Tile_Subtitle">Pantalla Principal</div></div>'                Set psBackgroundColor to "Green"                Set psToolTip to "Pantalla de inicio"                    Procedure OnLoad                    Send UpdateHTML ('<div class="WebCon_Sizer">' + ;                                     '<div class="Tile_Title">Inicio</div>' +;                                     '<div class="Tile_Subtitle">' - htmlEncode(psUserName(ghoWebSessionManager)) - '</div>' +;                                     '</div>')                End_Procedure                            End_Object*/
36656>>>    
36656>>>            Object oTile2 is a cWebHtmlBox
36658>>>                Set pbServerOnClick to True
36659>>>                Set piColumnSpan to 6
36660>>>                Set psCSSClass to "Tile LightAlternate"
36661>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Listado de Colegios</div><div class="Tile_Subtitle"></div></div>'
36662>>>                Set psBackgroundColor to "Green"
36663>>>                Set psToolTip to "Colegios"
36664>>>                Set piColumnIndex to 3
36665>>>                                
36665>>>                WebRegisterPath ntNavigateForwardCustom oSelectSchoolHouse
36671>>>                
36671>>>                Procedure OnClick String sId String sParam
36674>>>                    Send NavigatePath
36675>>>                End_Procedure
36676>>>                
36676>>>            End_Object
36677>>>    
36677>>>            Object oTile3 is a cWebHtmlBox
36679>>>                Set pbServerOnClick to True
36680>>>                Set piColumnSpan to 6
36681>>>                Set psCSSClass to "Tile Dark"
36682>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Listado de Alumnos</div><div class="Tile_Subtitle"></div></div>'
36683>>>                Set psBackgroundColor to "Green"
36684>>>                Set psToolTip to "Alumnos"
36685>>>                Set piColumnIndex to 3
36686>>>    
36686>>>                WebRegisterPath ntNavigateForwardCustom oSelectStudent
36692>>>                
36692>>>                Procedure OnClick String sId String sParam
36695>>>                    Send NavigatePath
36696>>>                End_Procedure
36697>>>                
36697>>>            End_Object
36698>>>    
36698>>>/*            Object oTile4 is a cWebHtmlBox                Set pbServerOnClick to True                Set piColumnSpan to 6                Set piColumnIndex to 6                Set psCSSClass to "Tile DarkAlternate"                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 4</div><div class="Tile_Subtitle"></div></div>'                            // WebRegisterPath ntNavigateForwardCustom oYourViewName                                Procedure OnClick String sId String sParam                    Send NavigatePath                End_Procedure                            End_Object*/
36698>>>        End_Object
36699>>>    
36699>>>    End_Object
36700>>>    
36700>>>    Procedure OnBeforeShow
36703>>>        // Each time this view is shown we will update the appropriate information.
36703>>>    End_Procedure
36704>>>
36704>>>End_Object
36705>    Use SchoolHouse.wo
Including file: SchoolHouse.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\SchoolHouse.wo)
36705>>>// C:\DataFlex Projects\ColegioAppWeb\AppSrc\SchoolHouse.wo
36705>>>// Colegio
36705>>>//
36705>>>
36705>>>Use cWebView.pkg
36705>>>Use cWebPanel.pkg
36705>>>Use cWebMenuGroup.pkg
36705>>>Use cWebMenuItem.pkg
36705>>>Use cWebForm.pkg
36705>>>Use cWebTabContainer.pkg
36705>>>Use cWebTabPage.pkg
36705>>>Use cWebEdit.pkg
36705>>>
36705>>>Use cschoolhouseDataDictionary.dd
Including file: cschoolhouseDataDictionary.dd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\cschoolhouseDataDictionary.dd)
36705>>>>>Use DataDict.pkg
36705>>>>>
36705>>>>>//importar el archivo donde tenemos la funcion principal de validacion
36705>>>>>Use ValidarEmail.pkg
Including file: ValidarEmail.pkg    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\ValidarEmail.pkg)
36705>>>>>>>Use cJsonHttpTransfer.pkg
Including file: cJsonHttpTransfer.pkg    (C:\Program Files\DataFlex 24.0\Pkg\cJsonHttpTransfer.pkg)
36705>>>>>>>>>// DF JSON internet transfer class definitions.
36705>>>>>>>>>Use cHttpTransfer.pkg
Including file: cHttpTransfer.pkg    (C:\Program Files\DataFlex 24.0\Pkg\cHttpTransfer.pkg)
36705>>>>>>>>>>>Use VDFBase.pkg
36705>>>>>>>>>>>Use GlobalFunctionsProcedures.pkg
36705>>>>>>>>>>>
36705>>>>>>>>>>>External_Function WinAPI_HttpQueryInfo "HttpQueryInfoW" WinInet.dll ;    Handle hRequest ;    DWord dwInfoLevel ;    Pointer lpBuffer ;    Pointer lpdwBufferLength ;    Pointer lpdwIndex ;    Returns Integer
36706>>>>>>>>>>>
36706>>>>>>>>>>>/*BOOL InternetSetOptionW(  [in] HINTERNET hInternet,  [in] DWORD     dwOption,  [in] LPVOID    lpBuffer,  [in] DWORD     dwBufferLength);*/
36706>>>>>>>>>>>External_Function WinAPI_InternetSetOption "InternetSetOptionW" WinInet.dll ;    Handle hInternet ;    DWord dwOption ;    Pointer lpBuffer ;    DWord dwBufferLength ;    Returns Integer
36707>>>>>>>>>>>
36707>>>>>>>>>>>/*BOOL InternetQueryOptionW(  [in]      HINTERNET hInternet,  [in]      DWORD     dwOption,  [out]     LPVOID    lpBuffer,  [in, out] LPDWORD   lpdwBufferLength);*/
36707>>>>>>>>>>>External_Function WinAPI_InternetQueryOption "InternetQueryOptionW" WinInet.dll ;    Handle hInternet ;    DWord dwOption ;    Pointer lpBuffer ;    Pointer lpdwBufferLength ;    Returns Integer
36708>>>>>>>>>>>
36708>>>>>>>>>>>
36708>>>>>>>>>>>//  Available options for dwInfoLevel of WinAPI_HttpQueryInfo
36708>>>>>>>>>>>Define HTTP_QUERY_MIME_VERSION                for 0
36708>>>>>>>>>>>Define HTTP_QUERY_CONTENT_TYPE                for 1
36708>>>>>>>>>>>Define HTTP_QUERY_CONTENT_TRANSFER_ENCODING   for 2
36708>>>>>>>>>>>Define HTTP_QUERY_CONTENT_ID                  for 3
36708>>>>>>>>>>>Define HTTP_QUERY_CONTENT_DESCRIPTION         for 4
36708>>>>>>>>>>>Define HTTP_QUERY_CONTENT_LENGTH              for 5
36708>>>>>>>>>>>Define HTTP_QUERY_CONTENT_LANGUAGE            for 6
36708>>>>>>>>>>>Define HTTP_QUERY_ALLOW                       for 7
36708>>>>>>>>>>>Define HTTP_QUERY_PUBLIC                      for 8
36708>>>>>>>>>>>Define HTTP_QUERY_DATE                        for 9
36708>>>>>>>>>>>Define HTTP_QUERY_EXPIRES                     for 10
36708>>>>>>>>>>>Define HTTP_QUERY_LAST_MODIFIED               for 11
36708>>>>>>>>>>>Define HTTP_QUERY_MESSAGE_ID                  for 12
36708>>>>>>>>>>>Define HTTP_QUERY_URI                         for 13
36708>>>>>>>>>>>Define HTTP_QUERY_DERIVED_FROM                for 14
36708>>>>>>>>>>>Define HTTP_QUERY_COST                        for 15
36708>>>>>>>>>>>Define HTTP_QUERY_LINK                        for 16
36708>>>>>>>>>>>Define HTTP_QUERY_PRAGMA                      for 17
36708>>>>>>>>>>>Define HTTP_QUERY_VERSION                     for 18  // special: part of status line
36708>>>>>>>>>>>Define HTTP_QUERY_STATUS_CODE                 for 19  // special: part of status line
36708>>>>>>>>>>>Define HTTP_QUERY_STATUS_TEXT                 for 20  // special: part of status line
36708>>>>>>>>>>>Define HTTP_QUERY_RAW_HEADERS                 for 21  // special: all headers as ASCIIZ
36708>>>>>>>>>>>Define HTTP_QUERY_RAW_HEADERS_CRLF            for 22  // special: all headers
36708>>>>>>>>>>>Define HTTP_QUERY_CONNECTION                  for 23
36708>>>>>>>>>>>Define HTTP_QUERY_ACCEPT                      for 24
36708>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_CHARSET              for 25
36708>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_ENCODING             for 26
36708>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_LANGUAGE             for 27
36708>>>>>>>>>>>Define HTTP_QUERY_AUTHORIZATION               for 28
36708>>>>>>>>>>>Define HTTP_QUERY_CONTENT_ENCODING            for 29
36708>>>>>>>>>>>Define HTTP_QUERY_FORWARDED                   for 30
36708>>>>>>>>>>>Define HTTP_QUERY_FROM                        for 31
36708>>>>>>>>>>>Define HTTP_QUERY_IF_MODIFIED_SINCE           for 32
36708>>>>>>>>>>>Define HTTP_QUERY_LOCATION                    for 33
36708>>>>>>>>>>>Define HTTP_QUERY_ORIG_URI                    for 34
36708>>>>>>>>>>>Define HTTP_QUERY_REFERER                     for 35
36708>>>>>>>>>>>Define HTTP_QUERY_RETRY_AFTER                 for 36
36708>>>>>>>>>>>Define HTTP_QUERY_SERVER                      for 37
36708>>>>>>>>>>>Define HTTP_QUERY_TITLE                       for 38
36708>>>>>>>>>>>Define HTTP_QUERY_USER_AGENT                  for 39
36708>>>>>>>>>>>Define HTTP_QUERY_WWW_AUTHENTICATE            for 40
36708>>>>>>>>>>>Define HTTP_QUERY_PROXY_AUTHENTICATE          for 41
36708>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_RANGES               for 42
36708>>>>>>>>>>>Define HTTP_QUERY_SET_COOKIE                  for 43
36708>>>>>>>>>>>Define HTTP_QUERY_COOKIE                      for 44
36708>>>>>>>>>>>Define HTTP_QUERY_REQUEST_METHOD              for 45  // special: GET/POST etc.
36708>>>>>>>>>>>Define HTTP_QUERY_REFRESH                     for 46
36708>>>>>>>>>>>Define HTTP_QUERY_CONTENT_DISPOSITION         for 47
36708>>>>>>>>>>>
36708>>>>>>>>>>>
36708>>>>>>>>>>>Class cHttpTransfer is a cBaseHttpTransfer
36709>>>>>>>>>>>    
36709>>>>>>>>>>>    Function HttpPostRequest String sFilePath String sData Integer bDataIsFile Returns Integer
36711>>>>>>>>>>>        Integer bStat
36711>>>>>>>>>>>        Get HttpPostAddrRequest sFilePath (AddressOf(sData)) (SizeOfString(sData)) bDataIsfile to bStat
36712>>>>>>>>>>>        Function_Return bStat
36713>>>>>>>>>>>    End_Function
36714>>>>>>>>>>>    
36714>>>>>>>>>>>    // This event is triggered from the runtime. It now uses UChar arrays as the data might 
36714>>>>>>>>>>>    // not be a valid string (it can be any binary data). It still calls the original event for 
36714>>>>>>>>>>>    // backwards compatibility.
36714>>>>>>>>>>>    Procedure OnDataReceivedUC String sContentType UChar[] ucData
36716>>>>>>>>>>>        Send OnDataReceived sContentType (UCharArrayToString(ucData))
36717>>>>>>>>>>>    End_Procedure
36718>>>>>>>>>>>    
36718>>>>>>>>>>>    // Only use this event if you know for sure the data is a string and make sure piBufferSize is
36718>>>>>>>>>>>    // smaller than the argument size.
36718>>>>>>>>>>>    Procedure OnDataReceived String sContentType String sData
36720>>>>>>>>>>>        
36720>>>>>>>>>>>    End_Procedure
36721>>>>>>>>>>>    
36721>>>>>>>>>>>    // Called just before the request is sent. Use this message to set options to the RequestHandle if nessecary.
36721>>>>>>>>>>>    Procedure OnPreSendRequest 
36723>>>>>>>>>>>        
36723>>>>>>>>>>>    End_Procedure
36724>>>>>>>>>>>    
36724>>>>>>>>>>>    Function HttpPutRequest String sFilePath String sData Integer bDataIsFile Returns Integer
36726>>>>>>>>>>>        Integer bStat
36726>>>>>>>>>>>        Get HttpPutAddrRequest sFilePath (AddressOf(sData)) (SizeOfString(sData)) bDataIsfile to bStat
36727>>>>>>>>>>>        Function_Return bStat
36728>>>>>>>>>>>    End_Function
36729>>>>>>>>>>>    
36729>>>>>>>>>>>    // Retrieve header information associated with the previous request.
36729>>>>>>>>>>>    Function QueryInfo DWord dwInfoLevel Returns String
36731>>>>>>>>>>>        Handle hRequestHandle
36731>>>>>>>>>>>        WString wResult
36731>>>>>>>>>>>        Integer iBufferSize iRes iVoid
36731>>>>>>>>>>>
36731>>>>>>>>>>>        Get RequestHandle to hRequestHandle
36732>>>>>>>>>>>        
36732>>>>>>>>>>>        If (hRequestHandle) Begin
36734>>>>>>>>>>>            Move 200 to iBufferSize
36735>>>>>>>>>>>            Move (Repeat(" ", iBufferSize)) to wResult
36736>>>>>>>>>>>            Move (WinAPI_HttpQueryInfo(hRequestHandle, dwInfoLevel, AddressOf(wResult), AddressOf(iBufferSize), 0)) to iRes
36737>>>>>>>>>>>            
36737>>>>>>>>>>>            If (not(iRes) and GetLastError() = 122) Begin //  Insufficient buffersize, retry with received iBufferSize value
36739>>>>>>>>>>>                Increment iBufferSize      
36740>>>>>>>>>>>                
36740>>>>>>>>>>>                Move (Repeat(" ", iBufferSize)) to wResult
36741>>>>>>>>>>>                Move (WinAPI_HttpQueryInfo(hRequestHandle, dwInfoLevel, AddressOf(wResult), AddressOf(iBufferSize), 0)) to iRes  
36742>>>>>>>>>>>            End
36742>>>>>>>>>>>>
36742>>>>>>>>>>>            
36742>>>>>>>>>>>            If (not(iRes)) Begin
36744>>>>>>>>>>>                Move (ShowLastError()) to iVoid
36745>>>>>>>>>>>            End
36745>>>>>>>>>>>>
36745>>>>>>>>>>>        End
36745>>>>>>>>>>>>
36745>>>>>>>>>>>        
36745>>>>>>>>>>>        Function_Return (CString(wResult))
36746>>>>>>>>>>>    End_Function
36747>>>>>>>>>>>    
36747>>>>>>>>>>>    // Returns the statustext returned by the previous request.
36747>>>>>>>>>>>    Function ResponseStatusText Returns String
36749>>>>>>>>>>>        String sStatus
36749>>>>>>>>>>>        
36749>>>>>>>>>>>        Get QueryInfo HTTP_QUERY_STATUS_TEXT to sStatus
36750>>>>>>>>>>>        
36750>>>>>>>>>>>        Function_Return sStatus
36751>>>>>>>>>>>    End_Function
36752>>>>>>>>>>>    
36752>>>>>>>>>>>End_Class
36753>>>>>>>>>Use cJsonObject.pkg
36753>>>>>>>>>Use GlobalFunctionsProcedures.pkg
36753>>>>>>>>>
36753>>>>>>>>>// these define the three characters that define BOM for utf8.
36753>>>>>>>>>// These serve no purpos and are rarely used. If used they must be removed
36753>>>>>>>>>Define C_BOM1 for |CI$EF
36753>>>>>>>>>Define C_BOM2 for |CI$BB
36753>>>>>>>>>Define C_BOM3 for |CI$BF
36753>>>>>>>>>
36753>>>>>>>>>
36753>>>>>>>>>
36753>>>>>>>>>// define JSON transfer status codes used by peJsonTransferStatus
36753>>>>>>>>>Enum_List
36753>>>>>>>>>    Define jtsOk                 // ok
36753>>>>>>>>>    Define jtsHttpRequestFailed  // the post/get http request returned an error
36753>>>>>>>>>    Define jtsInvalidContentType // response content type not JSON
36753>>>>>>>>>    Define jtsNotJson            // return value not JSON (could not load in object)
36753>>>>>>>>>    Define jtsError              // unspecified return error
36753>>>>>>>>>End_Enum_List
36753>>>>>>>>>
36753>>>>>>>>>
36753>>>>>>>>>Class cJsonHttpTransfer is a cHttpTransfer
36754>>>>>>>>>    
36754>>>>>>>>>    Procedure Construct_Object
36756>>>>>>>>>        Forward Send Construct_object
36758>>>>>>>>>        
36758>>>>>>>>>        Property String  psContentTypeSent "application/json; charset=utf-8"     // default content type for posted data
36759>>>>>>>>>        
36759>>>>>>>>>        Property Boolean pbClearHeaders      True         // should headers always be cleared after a post
36760>>>>>>>>>        
36760>>>>>>>>>        Property UChar[] pucDataReceived                 // maintained by object
36761>>>>>>>>>        
36761>>>>>>>>>        Property String  psContentTypeReceived ''         // content type received
36762>>>>>>>>>        
36762>>>>>>>>>        Property String  psJsonParseError ''              // Set if response JSON can't be parsed
36763>>>>>>>>>        
36763>>>>>>>>>        Property String  psContentTypeExpected 'application/json' // content type received - expected value should be contained in here.
36764>>>>>>>>>        
36764>>>>>>>>>        Property Integer peJsonTransferStatus jtsOk
36765>>>>>>>>>        
36765>>>>>>>>>        // if true, the http post does not happend and whatever was posted is just returned as a copy.
36765>>>>>>>>>        // Good for internal Testing
36765>>>>>>>>>        Property Boolean pbPostLoopTest False
36766>>>>>>>>>        
36766>>>>>>>>>        Set piBufferSize to -1  //  No chunking needed
36767>>>>>>>>>    End_Procedure
36768>>>>>>>>>    
36768>>>>>>>>>    // private helper function. Convert data passed by pointer to an JSON document.
36768>>>>>>>>>    // return 0, if error
36768>>>>>>>>>    //
36768>>>>>>>>>    Function UCharDatatoJson UChar[] ucJson Returns Handle
36770>>>>>>>>>        Integer iVoid bOk
36770>>>>>>>>>        Handle hoJson
36770>>>>>>>>>        String sError
36770>>>>>>>>>        Get Create of Desktop (RefClass(cJsonObject)) to hoJson
36771>>>>>>>>>        Get ParseUTF8 of hoJson ucJson to bOk
36772>>>>>>>>>        If not bOk Begin
36774>>>>>>>>>            // store the JSON parse error info
36774>>>>>>>>>            Get psParseError of hoJson to sError
36775>>>>>>>>>            Set psJsonParseError to sError
36776>>>>>>>>>            Send Destroy of hoJson
36777>>>>>>>>>            Move 0 to hoJson
36778>>>>>>>>>        End
36778>>>>>>>>>>
36778>>>>>>>>>        Function_Return hoJson
36779>>>>>>>>>    End_Function
36780>>>>>>>>>    
36780>>>>>>>>>    // Clear pucDataReceived
36780>>>>>>>>>    Procedure ClearDataReceived
36782>>>>>>>>>        UChar[] ucEmpty
36783>>>>>>>>>        
36783>>>>>>>>>        Set pucDataReceived to ucEmpty
36784>>>>>>>>>        Set psJsonParseError to ''
36785>>>>>>>>>    End_Procedure
36786>>>>>>>>>    
36786>>>>>>>>>    // augment to release any memor
36786>>>>>>>>>    Procedure Destroy_Object
36788>>>>>>>>>        Send ClearDataReceived
36789>>>>>>>>>        Forward Send Destroy_object
36791>>>>>>>>>    End_Procedure
36792>>>>>>>>>    
36792>>>>>>>>>    // called during http transfer. Take passed data and append to pucDataReceived.
36792>>>>>>>>>    // If new transfer save contenttype.
36792>>>>>>>>>    Procedure OnDataReceivedUC String sContentType UChar[] ucData
36794>>>>>>>>>        UChar[] ucBuffer
36795>>>>>>>>>        Integer iDataLen
36795>>>>>>>>>        
36795>>>>>>>>>        Move (SizeOfArray(ucData)) to iDataLen
36796>>>>>>>>>        
36796>>>>>>>>>        If (iDataLen > 0) Begin
36798>>>>>>>>>            Get pucDataReceived to ucBuffer
36799>>>>>>>>>            If (SizeOfArray(ucBuffer) > 0) Begin
36801>>>>>>>>>                Set pucDataReceived to (AppendArray(ucBuffer, ucData))
36802>>>>>>>>>            End
36802>>>>>>>>>>
36802>>>>>>>>>            Else Begin
36803>>>>>>>>>                Set psContentTypeReceived to sContentType
36804>>>>>>>>>                
36804>>>>>>>>>                If (iDataLen > 3 and ucData[0]=C_BOM1 and ucData[1]=C_BOM2 and ucData[2]=C_BOM3) Begin
36806>>>>>>>>>                    Set pucDataReceived to (CopyArray(ucData, 3, iDataLen - 1))
36807>>>>>>>>>                End
36807>>>>>>>>>>
36807>>>>>>>>>                Else Begin
36808>>>>>>>>>                    Set pucDataReceived to ucData
36809>>>>>>>>>                End
36809>>>>>>>>>>
36809>>>>>>>>>            End
36809>>>>>>>>>>
36809>>>>>>>>>        End
36809>>>>>>>>>>
36809>>>>>>>>>    End_Procedure
36810>>>>>>>>>    
36810>>>>>>>>>    Function LoopDataBack UChar[] ucData Returns Boolean
36812>>>>>>>>>        Pointer pInData
36812>>>>>>>>>        Boolean bOk
36812>>>>>>>>>        
36812>>>>>>>>>        Set pucDataReceived to ucData
36813>>>>>>>>>        Set psContentTypeReceived to (psContentTypeExpected(Self))
36814>>>>>>>>>        
36814>>>>>>>>>        Function_Return True
36815>>>>>>>>>    End_Function
36816>>>>>>>>>    
36816>>>>>>>>>    
36816>>>>>>>>>    Function HttpVerbJsonAddrExec String sHost String sFilePath Pointer pJson Integer iLen String sVerb  Returns Boolean
36818>>>>>>>>>        Boolean bOk
36818>>>>>>>>>        Integer iError
36818>>>>>>>>>        String sContentType
36818>>>>>>>>>        
36818>>>>>>>>>        Send ClearDataReceived  // this should be zero, just in case it is not
36819>>>>>>>>>        Set psRemoteHost to sHost
36820>>>>>>>>>        
36820>>>>>>>>>        Get psContentTypeSent to sContentType
36821>>>>>>>>>        If (iLen > 0 and sContentType <> "") Begin
36823>>>>>>>>>            Get AddHeader "Content-Type" sContentType to bok
36824>>>>>>>>>        End
36824>>>>>>>>>>
36824>>>>>>>>>        Get HttpVerbAddrRequest sFilePath pJson iLen False sVerb to bOK
36825>>>>>>>>>        
36825>>>>>>>>>        // You need to clear headers between posts. If you need to set custom headers you should
36825>>>>>>>>>        // set pbClearHeaders to false and then manually send ClearHeaders and AddHeaders in your code
36825>>>>>>>>>        If (pbClearHeaders(Self)) ;            Send ClearHeaders
36828>>>>>>>>>        
36828>>>>>>>>>        
36828>>>>>>>>>        Function_Return bOk
36829>>>>>>>>>    End_Function
36830>>>>>>>>>    
36830>>>>>>>>>    // We assume but do not verify that the data in ucJson is actually UTF8 JSON
36830>>>>>>>>>    Function HttpVerbJsonUChar String sHost String sFilePath UChar[] ucJson String sVerb Returns UChar[]
36832>>>>>>>>>        Integer iLen
36832>>>>>>>>>        Boolean bOk
36832>>>>>>>>>        UChar[] ucJsonReceived
36833>>>>>>>>>        String sContentTypeReceived sContentTypeExpected
36833>>>>>>>>>        
36833>>>>>>>>>        Move (SizeOfArray(ucJson)) to iLen
36834>>>>>>>>>        
36834>>>>>>>>>        If (pbPostLoopTest(Self)) Begin
36836>>>>>>>>>            Get LoopDataBack ucJson to bOk
36837>>>>>>>>>        End
36837>>>>>>>>>>
36837>>>>>>>>>        Else Begin
36838>>>>>>>>>            Get HttpVerbJsonAddrExec sHost sFilePath (AddressOf(ucJson)) iLen sVerb to bOk
36839>>>>>>>>>        End
36839>>>>>>>>>>
36839>>>>>>>>>                
36839>>>>>>>>>        If bOk Begin
36841>>>>>>>>>            Set peJsonTransferStatus to jtsOk
36842>>>>>>>>>            Get pucDataReceived to ucJsonReceived
36843>>>>>>>>>            
36843>>>>>>>>>            If (SizeOfArray(ucJsonReceived) > 0) Begin
36845>>>>>>>>>                // we have data, check that the content type is ok. This is as far
36845>>>>>>>>>                // as we can go here.
36845>>>>>>>>>                Get psContentTypeReceived to sContentTypeReceived
36846>>>>>>>>>                Get psContentTypeExpected to sContentTypeExpected
36847>>>>>>>>>                // If contentType expected is empty, we allow anything
36847>>>>>>>>>                If (sContentTypeExpected<>"" and pos(lowercase(sContentTypeExpected),lowercase(sContentTypeReceived))=0) Begin
36849>>>>>>>>>                    Set peJsonTransferStatus to jtsInvalidContentType
36850>>>>>>>>>                End
36850>>>>>>>>>>
36850>>>>>>>>>            End
36850>>>>>>>>>>
36850>>>>>>>>>        End
36850>>>>>>>>>>
36850>>>>>>>>>        Else Begin
36851>>>>>>>>>            Set peJsonTransferStatus to jtsHttpRequestFailed
36852>>>>>>>>>        End
36852>>>>>>>>>>
36852>>>>>>>>>                
36852>>>>>>>>>        Function_Return ucJsonReceived
36853>>>>>>>>>    End_Function
36854>>>>>>>>>    
36854>>>>>>>>>    // Generic HTTP Request - it is passed the Verb. Used by all other http requests
36854>>>>>>>>>    Function HttpVerbJson  String sHost String sFilePath Handle  hoJsonRequest String sVerb Boolean ByRef bOk Returns Handle
36856>>>>>>>>>        UChar[] ucJsonRequest ucJsonResponse
36858>>>>>>>>>        Handle hoJsonResponse
36858>>>>>>>>>        Integer eStat
36858>>>>>>>>>        
36858>>>>>>>>>        If (hoJsonRequest<>0) Begin
36860>>>>>>>>>            Get StringifyUTF8 of hoJsonRequest to ucJsonRequest
36861>>>>>>>>>        End
36861>>>>>>>>>>
36861>>>>>>>>>        
36861>>>>>>>>>        Get HttpVerbJsonUChar sHost sFilePath ucJsonRequest sVerb to ucJsonResponse
36862>>>>>>>>>        
36862>>>>>>>>>        If (SizeOfArray(ucJsonResponse)) Begin
36864>>>>>>>>>            Get UCharDatatoJson ucJsonResponse to hoJsonResponse
36865>>>>>>>>>            If (hoJsonResponse=0) Begin
36867>>>>>>>>>                // this indicates that data was returned but it could not be loaded as Json
36867>>>>>>>>>                Set peJsonTransferStatus to jtsNotJson
36868>>>>>>>>>                // note bad data is still is ppDataReceived (might be useful for debugging)
36868>>>>>>>>>            End
36868>>>>>>>>>>
36868>>>>>>>>>        End
36868>>>>>>>>>>
36868>>>>>>>>>        
36868>>>>>>>>>        // return Ok status by reference
36868>>>>>>>>>        Get peJsonTransferStatus to eStat
36869>>>>>>>>>        Move (eStat=jtsOk) to bOk
36870>>>>>>>>>        
36870>>>>>>>>>        Function_Return hoJsonResponse
36871>>>>>>>>>    End_Function
36872>>>>>>>>>    
36872>>>>>>>>>    Function HttpPostJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
36874>>>>>>>>>        Handle hoJson
36874>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "POST" (&bOk) to hoJson
36875>>>>>>>>>        Function_Return hoJson
36876>>>>>>>>>    End_Function
36877>>>>>>>>>    
36877>>>>>>>>>    Function HttpGetJson String sHost String sFilePath Boolean ByRef bOk Returns Handle
36879>>>>>>>>>        Pointer pJson
36879>>>>>>>>>        Integer iVoid iLen
36879>>>>>>>>>        Handle hoJson
36879>>>>>>>>>        Get HttpVerbJson sHost sFilePath 0 "GET" (&bOk) to hoJson
36880>>>>>>>>>        Function_Return hoJson
36881>>>>>>>>>    End_Function
36882>>>>>>>>>    
36882>>>>>>>>>    Function HttpPutJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
36884>>>>>>>>>        Handle hoJson
36884>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "PUT" (&bOk) to hoJson
36885>>>>>>>>>        Function_Return hoJson
36886>>>>>>>>>    End_Function
36887>>>>>>>>>    
36887>>>>>>>>>    Function HttpDeleteJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
36889>>>>>>>>>        Handle hoJson
36889>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "DELETE" (&bOk) to hoJson
36890>>>>>>>>>        Function_Return hoJson
36891>>>>>>>>>    End_Function
36892>>>>>>>>>    
36892>>>>>>>>>    Function HttpPatchJson  String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
36894>>>>>>>>>        Handle hoJson
36894>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "PATCH" (&bOk) to hoJson
36895>>>>>>>>>        Function_Return hoJson
36896>>>>>>>>>    End_Function
36897>>>>>>>>>    
36897>>>>>>>>>    // After an Json xfer request this message can be sent to display an error message if one occurred.
36897>>>>>>>>>    // Normally you would first check peJsonTransferStatus to see if it is not jtsOk. If not, send
36897>>>>>>>>>    // LastError to see the error
36897>>>>>>>>>    
36897>>>>>>>>>    // return last JSON transfer error text
36897>>>>>>>>>    Function TransferErrorDescription Returns String
36899>>>>>>>>>        String  sError sJsonError
36899>>>>>>>>>        Integer eJsonTransferStatus
36899>>>>>>>>>        Get peJsonTransferStatus to eJsonTransferStatus
36900>>>>>>>>>        Get psJsonParseError to sJsonError
36901>>>>>>>>>        Case Begin
36901>>>>>>>>>            Case (eJsonTransferStatus=jtsOk) ;                Move '' to sError
36904>>>>>>>>>            Case (eJsonTransferStatus=jtsHttpRequestFailed) ;                Move C_$HttpRequestFailed to sError
36908>>>>>>>>>            Case (eJsonTransferStatus=jtsInvalidContentType) ;                Move (SFormat(C_$InvalidContentTypeReceived,psContentTypeReceived(Self))) to sError
36912>>>>>>>>>            Case (eJsonTransferStatus=jtsNotJson) ;                Move (C_$ReceivedDataNotInJsonFormat * sJsonError) to sError
36916>>>>>>>>>            Case Else ;                Move C_$ReceivedDataIsBad to sError
36918>>>>>>>>>        Case End
36918>>>>>>>>>        Function_Return sError
36919>>>>>>>>>    End_Function
36920>>>>>>>>>    
36920>>>>>>>>>    // can be send to raise an error.
36920>>>>>>>>>    Procedure LastError
36922>>>>>>>>>        Integer eJsonTransferStatus
36922>>>>>>>>>        String sError
36922>>>>>>>>>        
36922>>>>>>>>>        Get peJsonTransferStatus to eJsonTransferStatus
36923>>>>>>>>>        If (eJsonTransferStatus<>jtsOk) Begin
36925>>>>>>>>>            Get TransferErrorDescription to sError
36926>>>>>>>>>            Error DFERR_JSON_HTTP sError
36927>>>>>>>>>>
36927>>>>>>>>>        End
36927>>>>>>>>>>
36927>>>>>>>>>    End_Procedure
36928>>>>>>>>>    
36928>>>>>>>>>    
36928>>>>>>>>>End_Class
36929>>>>>>>
36929>>>>>>>Define cValidos for "ABCDEFGHIJKLMNÑOPQRSTUVWXYZ0123456789._-"
36929>>>>>>>
36929>>>>>>>
36929>>>>>>>Function ValidarEmail String sEmail Returns Boolean
36932>>>>>>>    Boolean bRet
36932>>>>>>>    Move (Uppercase(sEmail)) to sEmail
36933>>>>>>>    Move (Trim(sEmail)) to sEmail
36934>>>>>>>//-----------------------------------------------------------------------------------------------    
36934>>>>>>>    
36934>>>>>>>//-------------------------------------detecta cadena vacia    
36934>>>>>>>    If (sEmail="")Begin
36936>>>>>>>        Send Info_Box "Escribe algo miarma" "ERROR"
36937>>>>>>>        Function_Return False
36938>>>>>>>    End
36938>>>>>>>>
36938>>>>>>>    //--------------
36938>>>>>>>    
36938>>>>>>>    
36938>>>>>>>//-------------------------------------valiada total de caracteres < 256
36938>>>>>>>    If (Length(sEmail)>=256)Begin
36940>>>>>>>        Send Info_Box "La extensión total no debe superar los 256 caracteres" "ERROR"
36941>>>>>>>        Function_Return False
36942>>>>>>>    End
36942>>>>>>>>
36942>>>>>>>    //-------------
36942>>>>>>>
36942>>>>>>>
36942>>>>>>>//------------------------------------NO comienza ni termina con punto
36942>>>>>>>    If (Left(sEmail,1)="." or Right(sEmail,1)=".")Begin
36944>>>>>>>        Send Info_Box "Un Email no puede empezar ni terminar en punto '.'" "Error"
36945>>>>>>>        Function_Return False
36946>>>>>>>    End
36946>>>>>>>>
36946>>>>>>>    //------------
36946>>>>>>>    
36946>>>>>>>//------------------------------------Verificar puntos CONSECUTIVOS
36946>>>>>>>    If (Pos("..", sEmail) > 0) Begin
36948>>>>>>>        Send Info_Box "No puede haber nunca dos o más puntos '.' seguidos" "ERROR"
36949>>>>>>>        Function_Return False
36950>>>>>>>    End
36950>>>>>>>>
36950>>>>>>>    //---------
36950>>>>>>>
36950>>>>>>>//------------------------------------Verificar si el email contiene "@" correctamente
36950>>>>>>>    Get ValidarArroba sEmail to bRet
36951>>>>>>>    
36951>>>>>>>    If (not(bRet)) Begin
36953>>>>>>>        Send Info_Box "El email debe contener uno y solo un @" "ERROR"
36954>>>>>>>        Function_Return False
36955>>>>>>>    End
36955>>>>>>>>
36955>>>>>>>    //----------
36955>>>>>>>    
36955>>>>>>>//-------------------------------------Verificar si la parte LOCAL tiene entre 1 y 64 caracteres    
36955>>>>>>>    Get LongitudParteLocal sEmail to bRet
36956>>>>>>>    
36956>>>>>>>    If (not(bRet)) Begin
36958>>>>>>>        Send Info_Box "La longitud antes del @ no es válida\nTiene que tener entre 1 y 64 caracteres" "ERROR"
36959>>>>>>>        Function_Return False
36960>>>>>>>    End
36960>>>>>>>>
36960>>>>>>>    //---------
36960>>>>>>>    
36960>>>>>>>//-------------------------------------Verificar si la parte DOMINIO tiene entre 4 y 255 caracteres
36960>>>>>>>    Get LongitudParteDominio sEmail to bRet
36961>>>>>>>    
36961>>>>>>>    If (not(bRet)) Begin
36963>>>>>>>        Send Info_Box "La longitud DESPUES del @ no es válida\ntiene que tener entre 4 y 255 caracteres\nAcabado en punto y la extensión" "ERROR"
36964>>>>>>>        Function_Return False
36965>>>>>>>    End
36965>>>>>>>>
36965>>>>>>>    //---------
36965>>>>>>>    
36965>>>>>>>//-------------------------------------Verificar primer digito de cada parte Alfanumerico
36965>>>>>>>    Get PrimerAlfanumerico sEmail to bRet
36966>>>>>>>    
36966>>>>>>>    If (not(bRet)) Begin
36968>>>>>>>        Send Info_Box "El PRIMER CARACTER de la parte LOCAL y de la parte despues del @\ntiene que ser LETRA o NÚMERO" "ERROR"
36969>>>>>>>        Function_Return False
36970>>>>>>>    End
36970>>>>>>>>
36970>>>>>>>
36970>>>>>>>//------------------------------------verificar que todos los digitos sean válidos
36970>>>>>>>    Get DigitosValidos sEmail to bRet
36971>>>>>>>    
36971>>>>>>>    If (not(bRet))Begin
36973>>>>>>>        Send Info_Box "Los unicos simbolos válidos son: .   _  - " "ERROR"
36974>>>>>>>        Function_Return False
36975>>>>>>>    End
36975>>>>>>>>
36975>>>>>>>    //----------
36975>>>>>>>    
36975>>>>>>>//----------------------------------verificar la longitud de la extensión
36975>>>>>>>    Get Extension sEmail to bRet
36976>>>>>>>    
36976>>>>>>>    If (not(bRet)) Begin
36978>>>>>>>        Send Info_Box "la extension debe estar entre 2 y 4 caracteres" "ERROR"
36979>>>>>>>        Function_Return False
36980>>>>>>>    End
36980>>>>>>>>
36980>>>>>>>    //---------
36980>>>>>>>    
36980>>>>>>>    
36980>>>>>>>//---------------------------------verificar el Email desde la API (NEUTRINO)
36980>>>>>>>    Get ValidacionAPI sEmail to bRet
36981>>>>>>>
36981>>>>>>>    Function_Return bRet
36982>>>>>>>
36982>>>>>>>//---------------------------------------------------------------------------------------------------
36982>>>>>>>    Function_Return True
36983>>>>>>>End_Function
36984>>>>>>>
36984>>>>>>>//----------------------------------Función para verificar si el email contiene al menos y solo un "@".
36984>>>>>>>Function ValidarArroba String sEmail Returns Boolean
36987>>>>>>>    Integer iCount iArrobaCount
36987>>>>>>>    Boolean bRet
36987>>>>>>>    
36987>>>>>>>    // Inicializar el contador de "@" a cero
36987>>>>>>>    Move 0 to iArrobaCount
36988>>>>>>>    
36988>>>>>>>    // Contar el número de "@" en el email
36988>>>>>>>    For iCount from 1 to (Length(sEmail))
36994>>>>>>>>
36994>>>>>>>        If (Mid(sEmail, 1, iCount) = "@") Begin
36996>>>>>>>            // Incrementar el contador de "@" si se encuentra uno
36996>>>>>>>            Increment iArrobaCount
36997>>>>>>>        End
36997>>>>>>>>
36997>>>>>>>    Loop
36998>>>>>>>>
36998>>>>>>>    
36998>>>>>>>    // Verificar si hay exactamente un "@" en el email
36998>>>>>>>    If (iArrobaCount = 1) Begin
37000>>>>>>>        // Si hay exactamente un "@" devuelve verdadero
37000>>>>>>>        Move True to bRet
37001>>>>>>>    End
37001>>>>>>>>
37001>>>>>>>    Else Begin
37002>>>>>>>        // Si hay mas de un "@" devolver falso
37002>>>>>>>        Move False to bRet
37003>>>>>>>    End
37003>>>>>>>>
37003>>>>>>>    
37003>>>>>>>    // Retornar el resultado de la validación, si solo hay un @ devuelve verdadero.
37003>>>>>>>    Function_Return bRet
37004>>>>>>>End_Function
37005>>>>>>>
37005>>>>>>>//----------------------------------Función para verificar la longitud de la parte local del email.
37005>>>>>>>Function LongitudParteLocal String sEmail Returns Boolean
37008>>>>>>>    Integer iPos
37008>>>>>>>    String sParteLocal
37008>>>>>>>    Boolean bRet
37008>>>>>>>
37008>>>>>>>    // Encontrar la posición del "@" en el correo electrónico
37008>>>>>>>    Move (Pos("@", sEmail)) to iPos
37009>>>>>>>    
37009>>>>>>>    // Extraer la parte local del correo electrónico
37009>>>>>>>    Move (Left(sEmail, iPos - 1)) to sParteLocal
37010>>>>>>>    
37010>>>>>>>    // Verificar si la longitud de la parte local es válida
37010>>>>>>>    If (Length(sParteLocal) >= 1 and Length(sParteLocal) <= 64) Begin
37012>>>>>>>        // Si la longitud es correcta, devolver verdadero
37012>>>>>>>        Move True to bRet
37013>>>>>>>    End
37013>>>>>>>>
37013>>>>>>>    Else Begin
37014>>>>>>>        // Si la longitud no es válida, devolver falso
37014>>>>>>>        Move False to bRet
37015>>>>>>>    End
37015>>>>>>>>
37015>>>>>>>    
37015>>>>>>>    Function_Return bRet
37016>>>>>>>End_Function
37017>>>>>>>
37017>>>>>>>//----------------------------------Función para verificar la longitud de la parte de DOMINIO del email.
37017>>>>>>>Function LongitudParteDominio String sEmail Returns Boolean
37020>>>>>>>    Integer iPos iPunto
37020>>>>>>>    String sParteDominio
37020>>>>>>>    Boolean bRet
37020>>>>>>>
37020>>>>>>>    // Encontrar la posición del "@" en el correo electrónico
37020>>>>>>>    Move (Pos("@", sEmail)) to iPos
37021>>>>>>>    
37021>>>>>>>    // Extraer la parte de dominio del correo electrónico
37021>>>>>>>    Move (Mid(sEmail, 255, iPos + 1)) to sParteDominio
37022>>>>>>>    Move (RightPos(".", sParteDominio)) to iPunto
37023>>>>>>>    
37023>>>>>>>    // verificar si antes del el ultimo punto hay mas de 4 caracteres
37023>>>>>>>    If (iPunto < 5) Begin
37025>>>>>>>        Move False to bRet
37026>>>>>>>        Function_Return bRet
37027>>>>>>>    End
37027>>>>>>>>
37027>>>>>>>    
37027>>>>>>>    // Verificar si la longitud de la parte de dominio es válida
37027>>>>>>>    If (Length(sParteDominio) >= 4 and Length(sParteDominio) <= 255) Begin
37029>>>>>>>        // Si la longitud es válida, devolver verdadero
37029>>>>>>>        Move True to bRet
37030>>>>>>>    End
37030>>>>>>>>
37030>>>>>>>    Else Begin
37031>>>>>>>        // Si la longitud no es válida, devolver falso
37031>>>>>>>        Move False to bRet
37032>>>>>>>    End
37032>>>>>>>>
37032>>>>>>>    
37032>>>>>>>    // Retornar el resultado de la validación
37032>>>>>>>    Function_Return bRet
37033>>>>>>>End_Function
37034>>>>>>>
37034>>>>>>>
37034>>>>>>>//------------------------------------------------verificar la extension del dominio
37034>>>>>>>Function Extension String sEmail Returns Boolean
37037>>>>>>>    Boolean bRet
37037>>>>>>>    String sParteDominio sExten
37037>>>>>>>    Integer iPos iPunto iLongExten
37037>>>>>>>    
37037>>>>>>>    // Encontrar la posición del "@" en el correo electrónico
37037>>>>>>>    Move (Pos("@", sEmail)) to iPos
37038>>>>>>>    // Extraer la parte de dominio del correo electrónico
37038>>>>>>>    Move (Mid(sEmail, 255, iPos + 1)) to sParteDominio
37039>>>>>>>    //---------esta sentencia me dice cual el es ultimo punto de la cadena
37039>>>>>>>    Move (RightPos(".", sParteDominio)) to iPunto
37040>>>>>>>    
37040>>>>>>>    // Extraer la parte de la extensión del correo electrónico
37040>>>>>>>    Move (Mid(sParteDominio, 5, iPunto+1)) to sExten
37041>>>>>>>    
37041>>>>>>>    // Calcular la longitud total de la extensión
37041>>>>>>>    Move (Length(sExten)) to iLongExten
37042>>>>>>>    
37042>>>>>>>    // Verificar si la longitud de la parte del dominio del correo electrónico es superior a 2
37042>>>>>>>    Move True to bRet
37043>>>>>>>    If (iLongExten < 2 or iLongExten > 4) Begin
37045>>>>>>>        Move False to bRet
37046>>>>>>>        Function_Return bRet
37047>>>>>>>    End
37047>>>>>>>>
37047>>>>>>>    
37047>>>>>>>    Function_Return bRet    
37048>>>>>>>End_Function
37049>>>>>>>
37049>>>>>>>//----------------------------------Función para verificar que la parte local y la parte de dominio comiencen por letra o dígito
37049>>>>>>>Function PrimerAlfanumerico String sEmail Returns Boolean
37052>>>>>>>    Boolean bRet
37052>>>>>>>    Integer iCount iCount2 iPos
37052>>>>>>>    String sPrimerDL sPrimerDD sChar sChar2
37052>>>>>>>
37052>>>>>>>    //iniciamos el boleano como falso
37052>>>>>>>    Move False to bRet
37053>>>>>>>        
37053>>>>>>>    //declaramos el primer digito de cada parte
37053>>>>>>>    Move (Left(sEmail,1)) to sPrimerDL
37054>>>>>>>    
37054>>>>>>>    Move (Pos("@", sEmail)) to iPos
37055>>>>>>>    Move (Mid(sEmail, 1, iPos + 1)) to sPrimerDD
37056>>>>>>>    
37056>>>>>>>    //buscamos que el primer digito de la parte LOCAL coincida con la constante quitando los simbolos 
37056>>>>>>>    For iCount from 1 to (Length(cValidos)-3)
37062>>>>>>>>
37062>>>>>>>        Move (Mid(cValidos, 1, iCount)) to sChar
37063>>>>>>>            If (sChar = sPrimerDL)Begin
37065>>>>>>>                Move True to bRet  
37066>>>>>>>            End
37066>>>>>>>>
37066>>>>>>>            If (bRet) Begin
37068>>>>>>>               
37068>>>>>>>    //buscamos que el primer digito de la parte DOMINIO coincida con la constante quitando los simbolos
37068>>>>>>>            Move False to bRet
37069>>>>>>>        For iCount2 from 1 to (Length(cValidos)-3)
37075>>>>>>>>
37075>>>>>>>            Move (Mid(cValidos, 1, iCount2)) to sChar2
37076>>>>>>>                If (sChar2 = sPrimerDD)Begin
37078>>>>>>>                    Move True to bRet
37079>>>>>>>                    Function_Return bRet
37080>>>>>>>                 End
37080>>>>>>>>
37080>>>>>>>         Loop    
37081>>>>>>>>
37081>>>>>>>                
37081>>>>>>>            End      
37081>>>>>>>>
37081>>>>>>>    Loop
37082>>>>>>>>
37082>>>>>>>        Function_Return bRet
37083>>>>>>>End_Function
37084>>>>>>>
37084>>>>>>>
37084>>>>>>>//------------------------------------------Función para verificar que el resto de digitos sean válidos
37084>>>>>>>Function DigitosValidos String sEmail Returns Boolean
37087>>>>>>>    Boolean bRet
37087>>>>>>>    Integer iPos iPunto iCount iCount2 iCount3 iCount4
37087>>>>>>>    String sParteLocal sParteDominio sLocalChar sLocalChar2 sDominChar sDominChar2
37087>>>>>>>    
37087>>>>>>>    //----------------encontrar el arroba y dividir en partes
37087>>>>>>>    Move (Pos("@", sEmail)) to iPos
37088>>>>>>>    
37088>>>>>>>    //----------extraemos la parte local
37088>>>>>>>    Move (Left(sEmail, iPos - 1)) to sParteLocal
37089>>>>>>>    
37089>>>>>>>    //---------extraemos la parte dominio
37089>>>>>>>    Move (Mid(sEmail, 255, iPos + 1)) to sParteDominio
37090>>>>>>>
37090>>>>>>>
37090>>>>>>>    //---------------------------------verificar la parte LOCAL
37090>>>>>>>    For iCount from 1 to (Length(sParteLocal))
37096>>>>>>>>
37096>>>>>>>        Move (Mid(sParteLocal, 1, iCount)) to sLocalChar
37097>>>>>>>        Move False to bRet
37098>>>>>>>        For iCount2 from 1 to (Length(cValidos))
37104>>>>>>>>
37104>>>>>>>            Move (Mid(cValidos, 1, iCount2)) to sLocalChar2
37105>>>>>>>            If (sLocalChar = sLocalChar2) Begin
37107>>>>>>>                Move True to bRet
37108>>>>>>>            End
37108>>>>>>>>
37108>>>>>>>        Loop
37109>>>>>>>>
37109>>>>>>>        If (not (bRet)) Begin
37111>>>>>>>            Function_Return bRet
37112>>>>>>>        End
37112>>>>>>>>
37112>>>>>>>    Loop
37113>>>>>>>>
37113>>>>>>>
37113>>>>>>>
37113>>>>>>>    //------------------------------verificar la parte DOMINIO
37113>>>>>>>    For iCount3 from 1 to (Length(sParteDominio))
37119>>>>>>>>
37119>>>>>>>        Move (Mid(sParteDominio, 1, iCount3)) to sDominChar
37120>>>>>>>        Move False to bRet
37121>>>>>>>        For iCount4 from 1 to (Length(cValidos))
37127>>>>>>>>
37127>>>>>>>            Move (Mid(cValidos, 1, iCount4)) to sDominChar2
37128>>>>>>>            If (sDominChar = sDominChar2) Begin
37130>>>>>>>                Move True to bRet
37131>>>>>>>            End
37131>>>>>>>>
37131>>>>>>>        Loop
37132>>>>>>>>
37132>>>>>>>        If (not (bRet)) Begin
37134>>>>>>>            Function_Return bRet
37135>>>>>>>        End
37135>>>>>>>>
37135>>>>>>>    Loop
37136>>>>>>>>
37136>>>>>>>
37136>>>>>>>    Function_Return bRet
37137>>>>>>>End_Function
37138>>>>>>>
37138>>>>>>>//----------------------------------------------Función para validar el email desde una api (Neutrino)
37138>>>>>>>Function ValidacionAPI String sEmail Returns Boolean
37141>>>>>>>    Handle hoHttp hoJsonRequest hoResponse
37141>>>>>>>    Boolean bRet bIsnull
37141>>>>>>>    String sResponse sResponse2
37141>>>>>>>    
37141>>>>>>>    //Documentación de referencia: https://www.neutrinoapi.com/api/email-validate/
37141>>>>>>>    
37141>>>>>>>    Get Create (RefClass(cJsonHttpTransfer)) to hoHttp
37142>>>>>>>    Get Create (RefClass(cJsonObject))       to hoJsonRequest
37143>>>>>>>    
37143>>>>>>>    Send InitializeJsonType of hoJsonRequest jsonTypeObject
37144>>>>>>>    
37144>>>>>>>    Send SetMemberValue of hoJsonRequest "email"        jsonTypeString  sEmail
37145>>>>>>>    Send SetMemberValue of hoJsonRequest "fix-typos"    jsonTypeBoolean False
37146>>>>>>>    
37146>>>>>>>    Get AddHeader of hoHttp "User-ID" "Henryrl83_" to bRet
37147>>>>>>>    Get AddHeader of hoHttp "API-Key" "bULS6bwuyVRWWKPZjkKPiU5ohIXaU7IQdAZVpr3rReyaotcF" to bRet
37148>>>>>>>    
37148>>>>>>>    Get HttpPostJson of hoHttp "neutrinoapi.net" "/email-validate" hoJsonRequest (&bRet) to hoResponse
37149>>>>>>>    
37149>>>>>>>    
37149>>>>>>>    If (bRet and (ResponseStatusCode(hoHttp) = 200)) Begin
37151>>>>>>>        Send Info_Box (Stringify(hoResponse)) "La respuesta de NEUTRINO"
37152>>>>>>>        If (HasMember(hoResponse,"valid") and HasMember(hoResponse, "is-disposable")) Begin
37154>>>>>>>            Get IsMemberOfJsonType of hoResponse "valid" jsonTypeNull to bIsnull
37155>>>>>>>            Get IsMemberOfJsonType of hoResponse "is-disposable" jsonTypeNull to bIsnull
37156>>>>>>>            If (bIsnull) Begin
37158>>>>>>>                Function_Return False
37159>>>>>>>            End
37159>>>>>>>>
37159>>>>>>>            Else Begin
37160>>>>>>>                Get MemberValue of hoResponse "valid" to sResponse
37161>>>>>>>                Get MemberValue of hoResponse "is-disposable" to sResponse2
37162>>>>>>>                If ((sResponse = "1") and (sResponse2 = "0")) Begin
37164>>>>>>>                    Function_Return True
37165>>>>>>>                End
37165>>>>>>>>
37165>>>>>>>                Else Begin
37166>>>>>>>                    Send Info_Box "La sintaxis es correcta\nEstá bien escrito\nPero el email no está verificado por NEUTRINO"
37167>>>>>>>                    Function_Return False
37168>>>>>>>                End
37168>>>>>>>>
37168>>>>>>>            End
37168>>>>>>>>
37168>>>>>>>        End
37168>>>>>>>>
37168>>>>>>>        Move True to bRet
37169>>>>>>>    End
37169>>>>>>>>
37169>>>>>>>    
37169>>>>>>>    Function_Return bRet
37170>>>>>>>End_Function
37171>>>>>
37171>>>>>Open schoolhouse
Including file: schoolhouse.fd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\schoolhouse.fd)
37173>>>>>Open student
Including file: student.fd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\student.fd)
37175>>>>>
37175>>>>>Object oValidationCounty is a DescriptionValidationTable
37177>>>>>    Procedure Fill_List
37180>>>>>        Forward Send Fill_List
37182>>>>>        Send Add_Table_Value "Huelva" "HUELVA"
37183>>>>>        Send Add_Table_Value "Sevilla" "SEVILLA"
37184>>>>>        Send Add_Table_Value "Cádiz" "CÁDIZ"
37185>>>>>        Send Add_Table_Value "Málaga" "MÁLAGA"
37186>>>>>        Send Add_Table_Value "Granada" "GRANADA"
37187>>>>>        Send Add_Table_Value "Córdoba" "CÓRDOBA"
37188>>>>>        Send Add_Table_Value "Almería" "ALMERÍA"
37189>>>>>        Send Add_Table_Value "Jaén" "JAÉN"
37190>>>>>    End_Procedure
37191>>>>>End_Object
37192>>>>>
37192>>>>>//registrar la funciones que luego usaremos para validar email
37192>>>>>Register_Function zValidar_Email Integer iField Returns Boolean
37192>>>>>
37192>>>>>Class cschoolhouseDataDictionary is a DataDictionary
37193>>>>>    
37193>>>>>    Procedure Construct_Object
37195>>>>>        Forward Send Construct_Object
37197>>>>>        Set Main_File to schoolhouse.File_Number
37198>>>>>
37198>>>>>        Set Add_Client_File to student.File_Number
37199>>>>>
37199>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
37200>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
37201>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
37202>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
37203>>>>>
37203>>>>>        Set Field_Option Field schoolhouse.ID DD_DISPLAYONLY to True
37204>>>>>        Set Key_Field_State Field schoolhouse.ID to True
37205>>>>>
37205>>>>>        Set Field_Value_Table Field schoolhouse.County to oValidationCounty
37206>>>>>        Set Field_Class_Name Field schoolhouse.County to "Combo"
37207>>>>>
37207>>>>>        Set Field_Option Field schoolhouse.ModifiedTime DD_DISPLAYONLY to True
37208>>>>>
37208>>>>>        Set Field_Option Field schoolhouse.CreatedTime DD_DISPLAYONLY to True
37209>>>>>
37209>>>>>//una vez verificado que el email es correcto se almacena en el campo correspondiente de la bbdd                
37209>>>>>        Set Field_Validate_msg Field schoolhouse.Email to get_zValidar_Email
37210>>>>>
37210>>>>>    End_Procedure
37211>>>>>
37211>>>>>//llamamos a las funciones definidas en los archivos para validar los email
37211>>>>>
37211>>>>>    //llamar a la funcion para validar el email    
37211>>>>>    Function zValidar_Email Integer iField Returns Boolean
37213>>>>>        Boolean bRet
37213>>>>>        String sEmail
37213>>>>>        
37213>>>>>        Get Field_Current_Value Field schoolhouse.Email to sEmail
37214>>>>>        
37214>>>>>        Get ValidarEmail sEmail to bRet
37215>>>>>        
37215>>>>>        Function_Return (not(bRet))
37216>>>>>    End_Function
37217>>>>>
37217>>>>>End_Class
37218>>>
37218>>>Object oSchoolHouse is a cWebView
37220>>>    Set piColumnCount to 12
37221>>>    Set psCaption to "Colegio"
37222>>>    Set peWebViewStyle to wvsDrilldown
37223>>>    Set peViewType to vtZoom
37224>>>    Set pbShowCaption to False
37225>>>    Set Verify_Save_Msg to 0
37226>>>    Set piMaxWidth to 1024
37227>>>
37227>>>    Object oschoolhouse_DD is a cschoolhouseDataDictionary
37229>>>    End_Object 
37230>>>
37230>>>    Set Main_DD To oschoolhouse_DD
37231>>>    Set Server  To oschoolhouse_DD
37232>>>
37232>>>
37232>>>    Object oWebMainPanel is a cWebPanel
37234>>>        Set piColumnCount to 12
37235>>>        WebSetResponsive piColumnCount rmMobile to 4
37236>>>
37236>>>        /*Object oschoolhouseID is a cWebForm            Entry_Item schoolhouse.ID            Set piColumnSpan to 2            Set piColumnIndex to 0            Set peLabelPosition to lpTop            Set psLabel to "ID"        End_Object*/ 
37236>>>
37236>>>        Object oschoolhouseName is a cWebForm
37238>>>            Entry_Item schoolhouse.Name
37239>>>            Set piColumnSpan to 8
37240>>>            Set piColumnIndex to 0
37241>>>            Set peLabelPosition to lpTop
37242>>>            Set psLabel to "Nombre"
37243>>>        End_Object 
37244>>>
37244>>>        Object oWebTabContainer is a cWebTabContainer
37246>>>            Set pbFillHeight to True
37247>>>            Set piColumnSpan to 12
37248>>>            Set pbShowLabel to False
37249>>>
37249>>>            Object oPage1 is a cWebTabPage
37251>>>                Set piColumnCount to 12
37252>>>                Set psCaption to "Datos de Contacto"
37253>>>
37253>>>                Object oschoolhouseAddress is a cWebForm
37255>>>                    Entry_Item schoolhouse.Address
37256>>>                    Set piColumnSpan to 6
37257>>>                    Set piColumnIndex to 0
37258>>>                    Set peLabelPosition to lpTop
37259>>>                    Set psLabel to "Dirección"
37260>>>                End_Object 
37261>>>                WebSetResponsive piColumnCount rmMobile to 4
37262>>>
37262>>>                Object oschoolhouseCity is a cWebForm
37264>>>                    Entry_Item schoolhouse.City
37265>>>                    Set piColumnSpan to 5
37266>>>                    Set piColumnIndex to 0
37267>>>                    Set peLabelPosition to lpTop
37268>>>                    Set psLabel to "Ciudad"
37269>>>                End_Object 
37270>>>
37270>>>                Object oschoolhouseZipCode is a cWebForm
37272>>>                    Entry_Item schoolhouse.ZipCode
37273>>>                    Set piColumnSpan to 2
37274>>>                    Set piColumnIndex to 5
37275>>>                    Set peLabelPosition to lpTop
37276>>>                    Set psLabel to "C.P"
37277>>>                End_Object 
37278>>>
37278>>>                Object oschoolhouseCounty is a cWebCombo
37280>>>                    Entry_Item schoolhouse.County
37281>>>                    Set piColumnSpan to 2
37282>>>                    Set piColumnIndex to 7
37283>>>                    Set peLabelPosition to lpTop
37284>>>                    Set psLabel to "Provincia"
37285>>>                End_Object 
37286>>>
37286>>>                Object oschoolhouseEmail is a cWebEdit
37288>>>                    Entry_Item schoolhouse.Email
37289>>>                    Set piColumnSpan to 12
37290>>>                    Set piColumnIndex to 0
37291>>>                    Set peLabelPosition to lpTop
37292>>>                    Set psLabel to "Email"
37293>>>                    Set piMinHeight to 150
37294>>>                End_Object 
37295>>>
37295>>>                Object oschoolhouseNotes is a cWebForm
37297>>>                    Entry_Item schoolhouse.Notes
37298>>>                    Set piColumnSpan to 12
37299>>>                    Set piColumnIndex to 0
37300>>>                    Set peLabelPosition to lpTop
37301>>>                    Set psLabel to "Comentarios Añadidos"
37302>>>                End_Object 
37303>>>            End_Object 
37304>>>
37304>>>            Object oPage2 is a cWebTabPage
37306>>>                Set piColumnCount to 12
37307>>>                Set psCaption to "Fecha y Hora Creación/Modificación"
37308>>>                WebSetResponsive piColumnCount rmMobile to 4
37309>>>
37309>>>                Object oschoolhouseModifiedTime is a cWebForm
37311>>>                    Entry_Item schoolhouse.ModifiedTime
37312>>>                    Set piColumnSpan to 6
37313>>>                    Set piColumnIndex to 0
37314>>>                    Set peLabelPosition to lpTop
37315>>>                    Set psLabel to "Fecha y Hora de Modificación"
37316>>>                End_Object 
37317>>>
37317>>>                Object oschoolhouseCreatedTime is a cWebForm
37319>>>                    Entry_Item schoolhouse.CreatedTime
37320>>>                    Set piColumnSpan to 6
37321>>>                    Set piColumnIndex to 0
37322>>>                    Set peLabelPosition to lpTop
37323>>>                    Set psLabel to "Fecha y Hora de Creación"
37324>>>                End_Object 
37325>>>            End_Object 
37326>>>        End_Object 
37327>>>    End_Object 
37328>>>
37328>>>    Object oActionGroup is a cWebMenuGroup
37330>>>
37330>>>        Object oSaveBtn is a cWebMenuItem
37332>>>            Set psCSSClass to "WebSaveMenuItem"
37333>>>            Set psCaption to "Guardar"
37334>>>
37334>>>            Procedure OnClick
37337>>>                Send Request_Save
37338>>>            End_Procedure
37339>>>
37339>>>        End_Object 
37340>>>
37340>>>        Object oEditBtn is a cWebMenuItem
37342>>>            Set psCSSClass to "WebEditMenuItem"
37343>>>            Set psCaption to "Editar"
37344>>>            Procedure OnClick
37347>>>                Send ChangeEditMode True
37348>>>                Send SetActionButtons
37349>>>            End_Procedure
37350>>>
37350>>>        End_Object 
37351>>>
37351>>>        Object oDeleteBtn is a cWebMenuItem
37353>>>            Set psCSSClass to "WebDeleteMenuItem"
37354>>>            Set psCaption to "Borrar"
37355>>>            Set peActionDisplay to adMenu
37356>>>
37356>>>            Procedure OnClick
37359>>>                Send Request_Delete
37360>>>            End_Procedure
37361>>>
37361>>>        End_Object 
37362>>>
37362>>>        Object oCancelChangesBtn is a cWebMenuItem
37364>>>            Set psCSSClass to "WebIcon_Refresh"
37365>>>            Set psCaption to "Limpiar Cambios"
37366>>>            Set peActionDisplay to adMenu
37367>>>            Procedure OnClick
37370>>>                Send RefreshRecord
37371>>>            End_Procedure
37372>>>
37372>>>        End_Object 
37373>>>    End_Object 
37374>>>
37374>>>    Procedure SetActionButtons
37377>>>        tWebNavigateData NavigateData
37377>>>        tWebNavigateData NavigateData
37377>>>        Boolean bHasRecord
37377>>>        Handle hoDD
37377>>>
37377>>>        Get Server to hoDD
37378>>>        Get GetNavigateData to NavigateData
37379>>>        Get HasRecord of hoDD to bHasRecord
37380>>>
37380>>>        // let's hide all buttons and then Show the ones we want
37380>>>        WebSet pbRender of oEditBtn to False
37381>>>        WebSet pbRender of oSaveBtn to False
37382>>>        WebSet pbRender of oCancelChangesBtn to False
37383>>>        WebSet pbRender of oDeleteBtn to False
37384>>>
37384>>>        If (NavigateData.bReadOnly) Begin
37386>>>            WebSet pbRender of oEditBtn to True
37387>>>        End
37387>>>>
37387>>>        Else Begin
37388>>>            WebSet pbRender of oSaveBtn to True
37389>>>            WebSet pbRender of oCancelChangesBtn to True
37390>>>            WebSet pbRender of oDeleteBtn to bHasRecord
37391>>>        End
37391>>>>
37391>>>    End_Procedure
37392>>>
37392>>>    Procedure OnViewSaved Handle hoServer Boolean bChanged
37395>>>        // Close after save
37395>>>        Send NavigateClose Self
37396>>>    End_Procedure
37397>>>
37397>>>    // this will close the view after a delete
37397>>>    Procedure OnViewDeleted Handle hoDDO
37400>>>        Send NavigateClose Self
37401>>>    End_Procedure
37402>>>
37402>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
37405>>>        Case Begin
37405>>>            Case (NavigateData.eNavigateType = nfFromMain)
37407>>>                // If from main, this is a propbably a main file Select to Zoom.
37407>>>                Case Break
37408>>>
37408>>>            Case (NavigateData.eNavigateType = nfFromParent)
37411>>>                // If from parent, this is a constrained drill down.
37411>>>                Case Break
37412>>>
37412>>>            Case (NavigateData.eNavigateType = nfFromChild)
37415>>>                // If from child, this is a probably a parent Zoom from a Zoom.
37415>>>                Case Break
37416>>>
37416>>>            Case Else // must be nfUndefined
37416>>>
37416>>>        Case End
37416>>>
37416>>>        Send SetActionButtons
37417>>>
37417>>>    End_Procedure
37418>>>
37418>>>End_Object 
37419>    Use SelectSchoolHouse.wo
Including file: SelectSchoolHouse.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\SelectSchoolHouse.wo)
37419>>>// C:\DataFlex Projects\ColegioAppWeb\AppSrc\SelectSchoolHouse.wo
37419>>>// SchoolHouse
37419>>>//
37419>>>
37419>>>Use cWebView.pkg
37419>>>Use cWebList.pkg
37419>>>Use cWebMenuGroup.pkg
37419>>>Use cWebMenuItem.pkg
37419>>>Use cWebColumnButton.pkg
37419>>>Use cWebColumn.pkg
37419>>>Use SchoolHouse.wo
37419>>>
37419>>>Use cschoolhouseDataDictionary.dd
37419>>>
37419>>>Object oSelectSchoolHouse is a cWebView
37421>>>    Set psCaption to "COLEGIOS"
37422>>>    Set peWebViewStyle to wvsDrilldown
37423>>>    Set peViewType to vtSelect
37424>>>    Set piColumnCount to 12
37425>>>    Set pbShowCaption to True
37426>>>    Set piMaxWidth to 1024
37427>>>
37427>>>    Object oschoolhouse_DD is a cschoolhouseDataDictionary
37429>>>    End_Object 
37430>>>
37430>>>    Set Main_DD To oschoolhouse_DD
37431>>>    Set Server  To oschoolhouse_DD
37432>>>
37432>>>
37432>>>    Object oList is a cWebList
37434>>>        Set piColumnSpan to 12
37435>>>        Set psCSSClass to "MobileList"
37436>>>        Set pbServerOnRowClick to True
37437>>>        Set pbFillHeight to True
37438>>>        Set pbShowHeader to False
37439>>>        Set piSortColumn to 0
37440>>>
37440>>>        /*Object oschoolhouseID is a cWebColumn            Entry_Item schoolhouse.ID            Set psCaption to "schoolhouse.ID"            Set piWidth to 124            Set piListColSpan to 2        End_Object*/
37440>>>
37440>>>        Object oDetailButton is a cWebColumnButton
37442>>>            Set psCaption to "btn"
37443>>>            Set piWidth to 45
37444>>>            Set pbFixedWidth to True
37445>>>            Set pbResizable to False
37446>>>            Set piListRowSpan to 8
37447>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
37448>>>            Set peAlign to alignRight
37449>>>            Set pbShowCaption to False
37450>>>            Set pbHidden to True
37451>>>
37451>>>            WebRegisterPath ntNavigateForward oSchoolHouse
37457>>>
37457>>>            Procedure OnClick
37460>>>                Send NavigatePath
37461>>>            End_Procedure
37462>>>
37462>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37465>>>                Move True to NavigateData.bReadOnly
37466>>>            End_Procedure
37467>>>
37467>>>        End_Object 
37468>>>
37468>>>        Object oschoolhouseName is a cWebColumn
37470>>>            Entry_Item schoolhouse.Name
37471>>>            Set psCaption to "schoolhouse.Name"
37472>>>            Set piWidth to 494
37473>>>            Set psCSSClass to "RowCaption"
37474>>>        End_Object 
37475>>>
37475>>>        Object oschoolhouseCity is a cWebColumn
37477>>>            Entry_Item schoolhouse.City
37478>>>            Set psCaption to "schoolhouse.City"
37479>>>            Set piWidth to 505
37480>>>            Set psCSSClass to "RowCaption"
37481>>>        End_Object 
37482>>>
37482>>>        Object oschoolhouseCounty is a cWebColumn
37484>>>            Entry_Item schoolhouse.County
37485>>>            Set psCaption to "schoolhouse.County"
37486>>>            Set piWidth to 281
37487>>>            Set psCSSClass to "RowCaption"
37488>>>            Set pbNewLine to True
37489>>>        End_Object 
37490>>>
37490>>>        Object oschoolhouseEmail is a cWebColumn
37492>>>            Entry_Item schoolhouse.Email
37493>>>            Set psCaption to "schoolhouse.Email"
37494>>>            Set piWidth to 345
37495>>>            Set psCSSClass to "RowCaption"
37496>>>        End_Object 
37497>>>
37497>>>        WebRegisterPath ntNavigateForward oSchoolHouse
37503>>>
37503>>>        Procedure OnRowClick String sRowId
37506>>>            tWebNavigateData NavigateData
37506>>>            tWebNavigateData NavigateData
37506>>>            Get GetNavigateData to NavigateData
37507>>>
37507>>>            Case Begin
37507>>>                Case (NavigateData.eNavigateType = nfFromParent)
37509>>>                    Send NavigateForward of oSchoolHouse Self
37510>>>                    Case Break
37511>>>
37511>>>                Case (NavigateData.eNavigateType = nfFromChild)
37514>>>                    Send NavigateClose Self
37515>>>                    Case Break
37516>>>
37516>>>                Case (NavigateData.eNavigateType = nfFromMain)
37519>>>                    Send NavigateClose Self
37520>>>                    Case Break
37521>>>                    
37521>>>                Case Else // must be nfUndefined
37521>>>                    Send NavigateForward of oSchoolHouse Self
37522>>>            Case End
37522>>>        End_Procedure
37523>>>
37523>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37526>>>            Move True to NavigateData.bReadOnly
37527>>>        End_Procedure
37528>>>
37528>>>    End_Object 
37529>>>
37529>>>    Object oActionGroup is a cWebMenuGroup
37531>>>
37531>>>        Object oSearch is a cWebMenuItem
37533>>>            Set psCSSClass to "WebPromptMenuItem"
37534>>>            Set psCaption to "Buscar"
37535>>>
37535>>>            Procedure OnClick
37538>>>                Send Search of oList
37539>>>            End_Procedure
37540>>>
37540>>>        End_Object 
37541>>>
37541>>>        Object oNewButton is a cWebMenuItem
37543>>>            Set psCSSClass to "WebClearMenuItem"
37544>>>            Set psCaption to "Nuevo"
37545>>>
37545>>>            WebRegisterPath ntNavigateForward oSchoolHouse
37551>>>
37551>>>            Procedure OnClick
37554>>>                Send NavigatePath
37555>>>            End_Procedure
37556>>>
37556>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
37559>>>                Move True to NavigateData.bNewRecord
37560>>>            End_Procedure
37561>>>
37561>>>        End_Object 
37562>>>    End_Object 
37563>>>
37563>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
37566>>>        WebSet pbRender of oNewButton to True
37567>>>        WebSet pbRender of oDetailButton to True
37568>>>
37568>>>        Case Begin
37568>>>            Case (NavigateData.eNavigateType = nfFromParent)
37570>>>                // If from parent, this is a constrained drill down
37570>>>                Case Break
37571>>>
37571>>>            Case (NavigateData.eNavigateType = nfFromChild)
37574>>>                // If from child, this is a probably a parent lookup from a Zoom
37574>>>                Case Break
37575>>>
37575>>>            Case (NavigateData.eNavigateType = nfFromMain)
37578>>>                // If from main, this is a probably a main-file lookup from a Zoom
37578>>>                WebSet pbRender of oDetailButton to False
37579>>>                Case Break
37580>>>
37580>>>            Case Else // must be nfUndefined
37580>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
37580>>>
37580>>>        Case End
37580>>>
37580>>>    End_Procedure
37581>>>
37581>>>
37581>>>End_Object 
37582>    Use Student.wo
Including file: Student.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\Student.wo)
37582>>>// C:\DataFlex Projects\ColegioAppWeb\AppSrc\Student.wo
37582>>>// Alumno
37582>>>//
37582>>>
37582>>>Use cWebView.pkg
37582>>>Use cWebPanel.pkg
37582>>>Use cWebMenuGroup.pkg
37582>>>Use cWebMenuItem.pkg
37582>>>Use cWebForm.pkg
37582>>>Use cWebTabContainer.pkg
37582>>>Use cWebTabPage.pkg
37582>>>Use cWebEdit.pkg
37582>>>
37582>>>Use cschoolhouseDataDictionary.dd
37582>>>Use cstudentDataDictionary.dd
Including file: cstudentDataDictionary.dd    (C:\DataFlex Projects\ColegioAppWeb\DDSrc\cstudentDataDictionary.dd)
37582>>>>>Use DataDict.pkg
37582>>>>>
37582>>>>>//importar los archivos donde tenemos las funciones principales de validacion
37582>>>>>Use ValidarDNI.pkg
Including file: ValidarDNI.pkg    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\ValidarDNI.pkg)
37582>>>>>>>Define cLetter for "TRWAGMYFPDXBNJZSQVHLCKE"
37582>>>>>>>Define cNumber for "0123456789"
37582>>>>>>>
37582>>>>>>>//-------------------------------------------
37582>>>>>>>Function ValidacionDNI String sDNI Returns Boolean
37585>>>>>>>    //Convertir en mayúsculas todo lo contenido en la cadena sDNI
37585>>>>>>>    Move (Uppercase(sDNI)) to sDNI
37586>>>>>>>    
37586>>>>>>>    //crea la variable boleana para usarla en la funciones internas de esta función principal
37586>>>>>>>    Boolean bRet
37586>>>>>>>   
37586>>>>>>>    //------------ comprobación de entrada VACÍA
37586>>>>>>>    If (sDNI="") Begin
37588>>>>>>>        Send Info_Box "Tienes que introducir algo" "ERROR"
37589>>>>>>>        Function_Return False
37590>>>>>>>    End
37590>>>>>>>>
37590>>>>>>>
37590>>>>>>>    //-----------------comprobación de LONGITUD de la cadena
37590>>>>>>>    Get DNILen sDNI to bRet
37591>>>>>>>    
37591>>>>>>>    If (not(bRet)) Begin
37593>>>>>>>        Send Info_Box "La longitud no es correcta, TIENE QUE TENER 9 DIGITOS" "ERROR"
37594>>>>>>>        Function_Return False
37595>>>>>>>    End
37595>>>>>>>>
37595>>>>>>>   
37595>>>>>>>    //-----------------comprobacion de que el último digito es una letra
37595>>>>>>>    Get DNILastChar sDNI to bRet
37596>>>>>>>    
37596>>>>>>>    If (not(bRet)) Begin
37598>>>>>>>        Send Info_Box "El último digito tiene que ser una LETRA válida" "ERROR"
37599>>>>>>>        Function_Return False
37600>>>>>>>    End
37600>>>>>>>>
37600>>>>>>>    
37600>>>>>>>    //------------------comprobación 8 primeros sean digitos
37600>>>>>>>    Get SinCaracteres sDNI to bRet
37601>>>>>>>    
37601>>>>>>>    If (not(bRet)) Begin
37603>>>>>>>        Send Info_Box "Si es un DNI los 8 primeros dígitos tienen que ser números\nSi es un NIE la primera letra debe ser X, Y,o Z" "ERROR"
37604>>>>>>>        Function_Return False
37605>>>>>>>    End
37605>>>>>>>>
37605>>>>>>>    
37605>>>>>>>    //------------------ comprobación de letra correspondiente
37605>>>>>>>    Get CalcularLetraDNI sDNI to bRet
37606>>>>>>>    
37606>>>>>>>        If (not(bRet)) Begin
37608>>>>>>>        Send Info_Box "El NIF/NIE no es válido" "ERROR"
37609>>>>>>>        Function_Return False
37610>>>>>>>        End
37610>>>>>>>>
37610>>>>>>>        
37610>>>>>>>    //--------------------
37610>>>>>>>     
37610>>>>>>>    Function_Return True
37611>>>>>>>End_Function
37612>>>>>>>
37612>>>>>>>//-----------------------------------------------longitud del dni introducido
37612>>>>>>>Function DNILen String sDNI Returns Boolean
37615>>>>>>>    Integer iLen
37615>>>>>>>    //-------------
37615>>>>>>>    Move (Length(sDNI)) to iLen
37616>>>>>>>    
37616>>>>>>>    If (iLen <> 9) Begin
37618>>>>>>>        Function_Return False
37619>>>>>>>    End
37619>>>>>>>>
37619>>>>>>>    //--------------
37619>>>>>>>    Function_Return True    
37620>>>>>>>End_Function
37621>>>>>>>
37621>>>>>>>
37621>>>>>>>//---------------------------------------------------última digito letra valida
37621>>>>>>>Function DNILastChar String sDNI Returns Boolean
37624>>>>>>>    Integer iCount
37624>>>>>>>    String sChar sCharCadena
37624>>>>>>>    
37624>>>>>>>    Move (Right(sDNI,1)) to sChar
37625>>>>>>>    For iCount from 1 to (Length(cLetter))
37631>>>>>>>>
37631>>>>>>>        Move (Mid(cLetter,1,iCount)) to sCharCadena
37632>>>>>>>        If (sChar=sCharCadena) Begin
37634>>>>>>>            Function_Return True            
37635>>>>>>>        End
37635>>>>>>>>
37635>>>>>>>    Loop
37636>>>>>>>>
37636>>>>>>>    Function_Return False    
37637>>>>>>>End_Function
37638>>>>>>>
37638>>>>>>>
37638>>>>>>>//-------------------------------------------------------comprueba si hay letras entre los 8 primeros dígitos
37638>>>>>>>Function SinCaracteres String sDNI Returns Boolean
37641>>>>>>>    Integer iCount iCount2
37641>>>>>>>    String sValue sDig sComprobado
37641>>>>>>>    Boolean bRet
37641>>>>>>>
37641>>>>>>>    Move (Left(sDNI,8)) to sValue    
37642>>>>>>>    // Convertir X, Y, Z a 0, 1, 2
37642>>>>>>>        
37642>>>>>>>    If (Left(sValue, 1) = "X") Begin
37644>>>>>>>        Move (Replace("X",sValue, "0")) to sValue
37645>>>>>>>    End
37645>>>>>>>>
37645>>>>>>>    If (Left(sValue, 1) = "Y") Begin
37647>>>>>>>        Move (Replace("Y", sValue, "1")) to sValue
37648>>>>>>>    End
37648>>>>>>>>
37648>>>>>>>    If (Left(sValue, 1) = "Z") Begin
37650>>>>>>>        Move (Replace("Z", sValue, "2")) to sValue
37651>>>>>>>    End
37651>>>>>>>>
37651>>>>>>>    //------------------contador para ver si hay caracteres en la cadena numerica
37651>>>>>>>    For iCount from 1 to (Length(sValue))
37657>>>>>>>>
37657>>>>>>>        Move False to bRet
37658>>>>>>>        Move (Mid(sValue, 1, iCount)) to sDig
37659>>>>>>>        For iCount2 from 1 to (Length(cNumber))
37665>>>>>>>>
37665>>>>>>>            Move (Mid(cNumber, 1, iCount2)) to sComprobado
37666>>>>>>>            If (sDig=sComprobado) Begin
37668>>>>>>>                Move True to bRet
37669>>>>>>>            End
37669>>>>>>>>
37669>>>>>>>        Loop
37670>>>>>>>>
37670>>>>>>>        If (not(bRet)) Begin
37672>>>>>>>            Function_Return False        
37673>>>>>>>        End
37673>>>>>>>>
37673>>>>>>>    Loop
37674>>>>>>>>
37674>>>>>>>    
37674>>>>>>>    Function_Return True    
37675>>>>>>>End_Function
37676>>>>>>>
37676>>>>>>>
37676>>>>>>>//-------------------------------------------------------calcula letra DNI
37676>>>>>>>Function CalcularLetraDNI String sDNI Returns Boolean
37679>>>>>>>    Integer iDNI iResto
37679>>>>>>>    String sLetter sChar
37679>>>>>>>    
37679>>>>>>>    // Convertir X, Y, Z a 0, 1, 2        
37679>>>>>>>    If (Left(sDNI, 1) = "X") Begin
37681>>>>>>>        Move (Replace("X",sDNI, "0")) to sDNI
37682>>>>>>>    End
37682>>>>>>>>
37682>>>>>>>    If (Left(sDNI, 1) = "Y") Begin
37684>>>>>>>        Move (Replace("Y", sDNI, "1")) to sDNI
37685>>>>>>>    End
37685>>>>>>>>
37685>>>>>>>    If (Left(sDNI, 1) = "Z") Begin
37687>>>>>>>        Move (Replace("Z", sDNI, "2")) to sDNI
37688>>>>>>>    End
37688>>>>>>>>
37688>>>>>>>
37688>>>>>>>    //-----------------------------------------asignar la letra al resto de la división
37688>>>>>>>    Move (Right(sDNI, 1)) to sChar 
37689>>>>>>>    Move (Left(sDNI,8)) to iDNI
37690>>>>>>>    Move (Mod(iDNI, 23)) to iResto
37691>>>>>>>    Move (Mid(cLetter, 1, (iResto + 1))) to sLetter
37692>>>>>>>    
37692>>>>>>>    // Asignar la letra correspondiente
37692>>>>>>>     If (sChar = sLetter) Begin
37694>>>>>>>        Function_Return True
37695>>>>>>>    End
37695>>>>>>>>
37695>>>>>>>  
37695>>>>>>>    Function_Return False
37696>>>>>>>End_Function
37697>>>>>Use ValidarEmail.pkg
37697>>>>>
37697>>>>>Open student
37699>>>>>Open schoolhouse
37701>>>>>
37701>>>>>Object oValidationCounty is a DescriptionValidationTable
37703>>>>>    Procedure Fill_List
37706>>>>>        Forward Send Fill_List
37708>>>>>        Send Add_Table_Value "Huelva" "HUELVA"
37709>>>>>        Send Add_Table_Value "Sevilla" "SEVILLA"
37710>>>>>        Send Add_Table_Value "Málaga" "MÁLAGA"
37711>>>>>        Send Add_Table_Value "Cadiz" "CÁDIZ"
37712>>>>>        Send Add_Table_Value "Córdoba" "CÓRDOBA"
37713>>>>>        Send Add_Table_Value "Jaén" "JAÉN"
37714>>>>>        Send Add_Table_Value "Almería" "ALMERÍA"
37715>>>>>        Send Add_Table_Value "Granada" "GRANADA"
37716>>>>>    End_Procedure
37717>>>>>End_Object
37718>>>>>
37718>>>>>//registrar las funciones que luego usaremos para validar email y dni
37718>>>>>Register_Function zValidar_Email Integer iField Returns Boolean
37718>>>>>Register_Function zValidar_Dni Integer iField   Returns Boolean
37718>>>>>
37718>>>>>Class cstudentDataDictionary is a DataDictionary
37719>>>>>    
37719>>>>>    Procedure Construct_Object
37721>>>>>        Forward Send Construct_Object
37723>>>>>        Set Main_File to student.File_Number
37724>>>>>
37724>>>>>        Set Add_Server_File to schoolhouse.File_Number
37725>>>>>
37725>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
37726>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
37727>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
37728>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
37729>>>>>
37729>>>>>        Set Key_Field_State Field student.ID to True
37730>>>>>        Set Field_Option Field student.ID DD_DISPLAYONLY to True
37731>>>>>
37731>>>>>        Set Field_Option Field student.ModifiedTime DD_DISPLAYONLY to True
37732>>>>>
37732>>>>>        Set Field_Option Field student.CreatedTime DD_DISPLAYONLY to True
37733>>>>>
37733>>>>>//una vez verificado que el email y el dni son correctos se almacena en el campo correspondiente de la bbdd        
37733>>>>>        Set Field_Validate_msg Field student.Email to get_zValidar_Email
37734>>>>>
37734>>>>>        Set Field_Mask_Type Field student.County to Mask_DateTime_Window
37735>>>>>        Set Field_Value_Table Field student.County to oValidationCounty
37736>>>>>        Set Field_Validate_msg Field student.DNI to   get_zValidar_Dni
37737>>>>>
37737>>>>>    End_Procedure
37738>>>>>
37738>>>>>//llamamos a las funciones definidas en los archivos para validar los email y dni
37738>>>>>
37738>>>>>    //llamar a la funcion para validar el email
37738>>>>>    Function zValidar_Email Integer iField Returns Boolean
37740>>>>>        Boolean bRet
37740>>>>>        String sEmail
37740>>>>>        
37740>>>>>        Get Field_Current_Value Field student.Email to sEmail
37741>>>>>        Get ValidarEmail sEmail to bRet
37742>>>>>        
37742>>>>>        Function_Return (not(bRet))
37743>>>>>        End_Function
37744>>>>>
37744>>>>>    //llamar a la funcion para validar el dni    
37744>>>>>    Function zValidar_Dni Integer iField Returns Boolean
37746>>>>>        Boolean bRet
37746>>>>>        String sDni
37746>>>>>        
37746>>>>>        Get Field_Current_Value Field student.DNI to sDni
37747>>>>>        Get ValidacionDNI sDni to bRet
37748>>>>>        
37748>>>>>        Function_Return (not(bRet))
37749>>>>>    End_Function
37750>>>>>
37750>>>>>End_Class
37751>>>
37751>>>Object oStudent is a cWebView
37753>>>    Set piColumnCount to 12
37754>>>    Set psCaption to "Alumno"
37755>>>    Set peWebViewStyle to wvsDrilldown
37756>>>    Set peViewType to vtZoom
37757>>>    Set pbShowCaption to False
37758>>>    Set Verify_Save_Msg to 0
37759>>>    Set piMaxWidth to 1024
37760>>>
37760>>>    Object oschoolhouse_DD is a cschoolhouseDataDictionary
37762>>>    End_Object 
37763>>>
37763>>>    Object ostudent_DD is a cstudentDataDictionary
37765>>>        Set DDO_Server To oschoolhouse_DD
37766>>>    End_Object 
37767>>>
37767>>>    Set Main_DD To ostudent_DD
37768>>>    Set Server  To ostudent_DD
37769>>>
37769>>>
37769>>>    Object oWebMainPanel is a cWebPanel
37771>>>        Set piColumnCount to 12
37772>>>        WebSetResponsive piColumnCount rmMobile to 4
37773>>>
37773>>>        /*Object ostudentID is a cWebForm            Entry_Item student.ID            Set piColumnSpan to 2            Set piColumnIndex to 0            Set peLabelPosition to lpTop            Set psLabel to "ID"        End_Object*/
37773>>>
37773>>>        Object ostudentName is a cWebForm
37775>>>            Entry_Item student.Name
37776>>>            Set piColumnSpan to 4
37777>>>            Set piColumnIndex to 0
37778>>>            Set peLabelPosition to lpTop
37779>>>            Set psLabel to "Nombre"
37780>>>        End_Object 
37781>>>
37781>>>        Object ostudentLastName is a cWebForm
37783>>>            Entry_Item student.LastName
37784>>>            Set piColumnSpan to 6
37785>>>            Set piColumnIndex to 4
37786>>>            Set peLabelPosition to lpTop
37787>>>            Set psLabel to "Apellidos"
37788>>>        End_Object 
37789>>>
37789>>>        Object ostudentBirthday is a cWebDateForm
37791>>>            Entry_Item student.Birthday
37792>>>            Set piColumnSpan to 2
37793>>>            Set piColumnIndex to 0
37794>>>            Set peLabelPosition to lpTop
37795>>>            Set psLabel to "Fecha de Nacimiento"
37796>>>        End_Object 
37797>>>
37797>>>        Object oWebTabContainer is a cWebTabContainer
37799>>>            Set pbFillHeight to True
37800>>>            Set piColumnSpan to 12
37801>>>            Set pbShowLabel to False
37802>>>
37802>>>            Object oPage1 is a cWebTabPage
37804>>>                Set piColumnCount to 12
37805>>>                Set psCaption to "Datos de Contacto"
37806>>>                WebSetResponsive piColumnCount rmMobile to 4
37807>>>
37807>>>                Object ostudentDNI is a cWebForm
37809>>>                    Entry_Item student.DNI
37810>>>                    Set piColumnSpan to 2
37811>>>                    Set piColumnIndex to 0
37812>>>                    Set peLabelPosition to lpTop
37813>>>                    Set psLabel to "DNI"
37814>>>                End_Object 
37815>>>
37815>>>                Object ostudentEmail is a cWebEdit
37817>>>                    Entry_Item student.Email
37818>>>                    Set piColumnSpan to 0
37819>>>                    Set piColumnIndex to 0
37820>>>                    Set peLabelPosition to lpTop
37821>>>                    Set psLabel to "Email"
37822>>>                    Set piMinHeight to 150
37823>>>                End_Object 
37824>>>
37824>>>                Object ostudentCounty is a cWebCombo
37826>>>                    Entry_Item student.County
37827>>>                    Set piColumnSpan to 4
37828>>>                    Set piColumnIndex to 0
37829>>>                    Set peLabelPosition to lpTop
37830>>>                    Set psLabel to "Provincia"
37831>>>                End_Object 
37832>>>
37832>>>                Object ostudentCity is a cWebForm
37834>>>                    Entry_Item student.City
37835>>>                    Set piColumnSpan to 7
37836>>>                    Set piColumnIndex to 4
37837>>>                    Set peLabelPosition to lpTop
37838>>>                    Set psLabel to "Ciudad"
37839>>>                End_Object 
37840>>>
37840>>>                Object ostudentAddress is a cWebForm
37842>>>                    Entry_Item student.Address
37843>>>                    Set piColumnSpan to 10
37844>>>                    Set piColumnIndex to 0
37845>>>                    Set peLabelPosition to lpTop
37846>>>                    Set psLabel to "Dirección"
37847>>>                End_Object 
37848>>>
37848>>>                /*Object oschoolhouseID is a cWebForm                    Entry_Item schoolhouse.ID                    Set piColumnSpan to 3                    Set piColumnIndex to 0                    Set peLabelPosition to lpTop                    Set psLabel to "SchoolHouseID"                    Set pbPromptButton to True                    WebRegisterPath ntNavigateForward oSchoolHouse                    Procedure OnPrompt                        Send NavigatePath                    End_Procedure                End_Object*/ 
37848>>>            End_Object 
37849>>>
37849>>>            Object oPage3 is a cWebTabPage
37851>>>                Set piColumnCount to 12
37852>>>                Set psCaption to "Colegio"
37853>>>                WebSetResponsive piColumnCount rmMobile to 4
37854>>>
37854>>>                /*Object oschoolhouseID is a cWebForm                    Entry_Item schoolhouse.ID                    Set piColumnSpan to 3                    Set piColumnIndex to 0                    Set peLabelPosition to lpTop                    Set psLabel to "ID"                    Set pbPromptButton to False                    WebRegisterPath ntNavigateForward oSelectSchoolHouse                    Procedure OnPrompt                        Send NavigatePath                    End_Procedure                End_Object*/ 
37854>>>
37854>>>                Object oschoolhouseName is a cWebForm
37856>>>                    Entry_Item schoolhouse.Name
37857>>>                    Set piColumnSpan to 6
37858>>>                    Set piColumnIndex to 0
37859>>>                    Set peLabelPosition to lpTop
37860>>>                    Set psLabel to "Nombre"
37861>>>                    Set pbPromptButton to True
37862>>>
37862>>>                    WebRegisterPath ntNavigateForward oSelectSchoolHouse
37868>>>
37868>>>                    Procedure OnPrompt
37871>>>                        Send NavigatePath
37872>>>                    End_Procedure
37873>>>                End_Object 
37874>>>
37874>>>                Object oschoolhouseEmail is a cWebEdit
37876>>>                    Entry_Item schoolhouse.Email
37877>>>                    Set piColumnSpan to 0
37878>>>                    Set piColumnIndex to 0
37879>>>                    Set peLabelPosition to lpTop
37880>>>                    Set psLabel to "Email"
37881>>>                    Set piMinHeight to 150
37882>>>                End_Object 
37883>>>            End_Object 
37884>>>
37884>>>            Object oPage2 is a cWebTabPage
37886>>>                Set piColumnCount to 12
37887>>>                Set psCaption to "Otros"
37888>>>                WebSetResponsive piColumnCount rmMobile to 4
37889>>>
37889>>>                Object ostudentNotes is a cWebForm
37891>>>                    Entry_Item student.Notes
37892>>>                    Set piColumnSpan to 12
37893>>>                    Set piColumnIndex to 0
37894>>>                    Set peLabelPosition to lpTop
37895>>>                    Set psLabel to "Comentarios añadidos"
37896>>>                End_Object 
37897>>>
37897>>>                /*Object ostudentModifiedTime is a cWebForm                    Entry_Item student.ModifiedTime                    Set piColumnSpan to 6                    Set piColumnIndex to 0                    Set peLabelPosition to lpTop                    Set psLabel to "Fecha y hora de modificación"                End_Object                 Object ostudentCreatedTime is a cWebForm                    Entry_Item student.CreatedTime                    Set piColumnSpan to 6                    Set piColumnIndex to 0                    Set peLabelPosition to lpTop                    Set psLabel to "Fecha y hora de Creación"                End_Object*/ 
37897>>>            End_Object 
37898>>>        End_Object 
37899>>>    End_Object 
37900>>>
37900>>>    Object oActionGroup is a cWebMenuGroup
37902>>>
37902>>>        Object oSaveBtn is a cWebMenuItem
37904>>>            Set psCSSClass to "WebSaveMenuItem"
37905>>>            Set psCaption to "Guardar"
37906>>>
37906>>>            Procedure OnClick
37909>>>                Send Request_Save
37910>>>            End_Procedure
37911>>>
37911>>>        End_Object 
37912>>>
37912>>>        Object oEditBtn is a cWebMenuItem
37914>>>            Set psCSSClass to "WebEditMenuItem"
37915>>>            Set psCaption to "Editar"
37916>>>            Procedure OnClick
37919>>>                Send ChangeEditMode True
37920>>>                Send SetActionButtons
37921>>>            End_Procedure
37922>>>
37922>>>        End_Object 
37923>>>
37923>>>        Object oDeleteBtn is a cWebMenuItem
37925>>>            Set psCSSClass to "WebDeleteMenuItem"
37926>>>            Set psCaption to "Borrar"
37927>>>            Set peActionDisplay to adMenu
37928>>>
37928>>>            Procedure OnClick
37931>>>                Send Request_Delete
37932>>>            End_Procedure
37933>>>
37933>>>        End_Object 
37934>>>
37934>>>        Object oCancelChangesBtn is a cWebMenuItem
37936>>>            Set psCSSClass to "WebIcon_Refresh"
37937>>>            Set psCaption to "Limpiar Cambios"
37938>>>            Set peActionDisplay to adMenu
37939>>>            Procedure OnClick
37942>>>                Send RefreshRecord
37943>>>            End_Procedure
37944>>>
37944>>>        End_Object 
37945>>>    End_Object 
37946>>>
37946>>>    Procedure SetActionButtons
37949>>>        tWebNavigateData NavigateData
37949>>>        tWebNavigateData NavigateData
37949>>>        Boolean bHasRecord
37949>>>        Handle hoDD
37949>>>
37949>>>        Get Server to hoDD
37950>>>        Get GetNavigateData to NavigateData
37951>>>        Get HasRecord of hoDD to bHasRecord
37952>>>
37952>>>        // let's hide all buttons and then Show the ones we want
37952>>>        WebSet pbRender of oEditBtn to False
37953>>>        WebSet pbRender of oSaveBtn to False
37954>>>        WebSet pbRender of oCancelChangesBtn to False
37955>>>        WebSet pbRender of oDeleteBtn to False
37956>>>
37956>>>        If (NavigateData.bReadOnly) Begin
37958>>>            WebSet pbRender of oEditBtn to True
37959>>>        End
37959>>>>
37959>>>        Else Begin
37960>>>            WebSet pbRender of oSaveBtn to True
37961>>>            WebSet pbRender of oCancelChangesBtn to True
37962>>>            WebSet pbRender of oDeleteBtn to bHasRecord
37963>>>        End
37963>>>>
37963>>>    End_Procedure
37964>>>
37964>>>    Procedure OnViewSaved Handle hoServer Boolean bChanged
37967>>>        // Close after save
37967>>>        Send NavigateClose Self
37968>>>    End_Procedure
37969>>>
37969>>>    // this will close the view after a delete
37969>>>    Procedure OnViewDeleted Handle hoDDO
37972>>>        Send NavigateClose Self
37973>>>    End_Procedure
37974>>>
37974>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
37977>>>        Case Begin
37977>>>            Case (NavigateData.eNavigateType = nfFromMain)
37979>>>                // If from main, this is a propbably a main file Select to Zoom.
37979>>>                Case Break
37980>>>
37980>>>            Case (NavigateData.eNavigateType = nfFromParent)
37983>>>                // If from parent, this is a constrained drill down.
37983>>>                Case Break
37984>>>
37984>>>            Case (NavigateData.eNavigateType = nfFromChild)
37987>>>                // If from child, this is a probably a parent Zoom from a Zoom.
37987>>>                Case Break
37988>>>
37988>>>            Case Else // must be nfUndefined
37988>>>
37988>>>        Case End
37988>>>
37988>>>        Send SetActionButtons
37989>>>
37989>>>    End_Procedure
37990>>>
37990>>>End_Object 
37991>    Use SelectStudent.wo
Including file: SelectStudent.wo    (C:\DataFlex Projects\ColegioAppWeb\AppSrc\SelectStudent.wo)
37991>>>// C:\DataFlex Projects\ColegioAppWeb\AppSrc\SelectStudent.wo
37991>>>// SelectStudent
37991>>>//
37991>>>
37991>>>Use cWebView.pkg
37991>>>Use cWebList.pkg
37991>>>Use cWebMenuGroup.pkg
37991>>>Use cWebMenuItem.pkg
37991>>>Use cWebColumnButton.pkg
37991>>>Use cWebColumn.pkg
37991>>>Use Student.wo
37991>>>
37991>>>Use cschoolhouseDataDictionary.dd
37991>>>Use cstudentDataDictionary.dd
37991>>>
37991>>>Object oSelectStudent is a cWebView
37993>>>    Set psCaption to "ALUMNOS"
37994>>>    Set peWebViewStyle to wvsDrilldown
37995>>>    Set peViewType to vtSelect
37996>>>    Set piColumnCount to 12
37997>>>    Set pbShowCaption to True
37998>>>    Set piMaxWidth to 1024
37999>>>
37999>>>    Object oschoolhouse_DD is a cschoolhouseDataDictionary
38001>>>    End_Object 
38002>>>
38002>>>    Object ostudent_DD is a cstudentDataDictionary
38004>>>        Set DDO_Server To oschoolhouse_DD
38005>>>    End_Object 
38006>>>
38006>>>    Set Main_DD To ostudent_DD
38007>>>    Set Server  To ostudent_DD
38008>>>
38008>>>
38008>>>    Object oList is a cWebList
38010>>>        Set piColumnSpan to 12
38011>>>        Set psCSSClass to "MobileList"
38012>>>        Set pbServerOnRowClick to True
38013>>>        Set pbFillHeight to True
38014>>>        Set pbShowHeader to False
38015>>>        Set piSortColumn to 0
38016>>>
38016>>>        /*Object ostudentID is a cWebColumn            Entry_Item student.ID            Set psCaption to "student.ID"            Set piWidth to 124        End_Object*/
38016>>>
38016>>>        Object oDetailButton is a cWebColumnButton
38018>>>            Set psCaption to "btn"
38019>>>            Set piWidth to 45
38020>>>            Set pbFixedWidth to True
38021>>>            Set pbResizable to False
38022>>>            Set piListRowSpan to 8
38023>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
38024>>>            Set peAlign to alignRight
38025>>>            Set pbShowCaption to False
38026>>>            Set pbHidden to True
38027>>>
38027>>>            WebRegisterPath ntNavigateForward oStudent
38033>>>
38033>>>            Procedure OnClick
38036>>>                Send NavigatePath
38037>>>            End_Procedure
38038>>>
38038>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38041>>>                Move True to NavigateData.bReadOnly
38042>>>            End_Procedure
38043>>>
38043>>>        End_Object 
38044>>>
38044>>>        Object ostudentName is a cWebColumn
38046>>>            Entry_Item student.Name
38047>>>            Set psCaption to "student.Name"
38048>>>            Set piWidth to 192
38049>>>        End_Object 
38050>>>
38050>>>        Object ostudentLastName is a cWebColumn
38052>>>            Entry_Item student.LastName
38053>>>            Set psCaption to "student.LastName"
38054>>>            Set piWidth to 282
38055>>>        End_Object 
38056>>>
38056>>>        Object ostudentDNI is a cWebColumn
38058>>>            Entry_Item student.DNI
38059>>>            Set psCaption to "student.DNI"
38060>>>            Set piWidth to 205
38061>>>        End_Object 
38062>>>
38062>>>        Object ostudentEmail is a cWebColumn
38064>>>            Entry_Item student.Email
38065>>>            Set psCaption to "student.Email"
38066>>>            Set piWidth to 319
38067>>>        End_Object 
38068>>>
38068>>>        /*Object oschoolhouseID is a cWebColumn            Entry_Item schoolhouse.ID            Set psCaption to "schoolhouse.ID"            Set piWidth to 124            Set pbNewLine to True        End_Object*/ 
38068>>>
38068>>>        Object oschoolhouseName is a cWebColumn
38070>>>            Entry_Item schoolhouse.Name
38071>>>            Set psCaption to "schoolhouse.Name"
38072>>>            Set piWidth to 2243
38073>>>            Set pbNewLine to True
38074>>>        End_Object 
38075>>>
38075>>>        Object oschoolhouseEmail is a cWebColumn
38077>>>            Entry_Item schoolhouse.Email
38078>>>            Set psCaption to "schoolhouse.Email"
38079>>>            Set piWidth to 2182
38080>>>        End_Object 
38081>>>
38081>>>        WebRegisterPath ntNavigateForward oStudent
38087>>>
38087>>>        Procedure OnRowClick String sRowId
38090>>>            tWebNavigateData NavigateData
38090>>>            tWebNavigateData NavigateData
38090>>>            Get GetNavigateData to NavigateData
38091>>>
38091>>>            Case Begin
38091>>>                Case (NavigateData.eNavigateType = nfFromParent)
38093>>>                    Send NavigateForward of oStudent Self
38094>>>                    Case Break
38095>>>
38095>>>                Case (NavigateData.eNavigateType = nfFromChild)
38098>>>                    Send NavigateClose Self
38099>>>                    Case Break
38100>>>
38100>>>                Case (NavigateData.eNavigateType = nfFromMain)
38103>>>                    Send NavigateClose Self
38104>>>                    Case Break
38105>>>
38105>>>                Case Else // must be nfUndefined
38105>>>                    Send NavigateForward of oStudent Self
38106>>>
38106>>>            Case End
38106>>>        End_Procedure
38107>>>
38107>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38110>>>            Move True to NavigateData.bReadOnly
38111>>>        End_Procedure
38112>>>
38112>>>    End_Object 
38113>>>
38113>>>    Object oActionGroup is a cWebMenuGroup
38115>>>
38115>>>        Object oSearch is a cWebMenuItem
38117>>>            Set psCSSClass to "WebPromptMenuItem"
38118>>>            Set psCaption to "Buscar"
38119>>>
38119>>>            Procedure OnClick
38122>>>                Send Search of oList
38123>>>            End_Procedure
38124>>>
38124>>>        End_Object 
38125>>>
38125>>>        Object oNewButton is a cWebMenuItem
38127>>>            Set psCSSClass to "WebClearMenuItem"
38128>>>            Set psCaption to "Nuevo"
38129>>>
38129>>>            WebRegisterPath ntNavigateForward oStudent
38135>>>
38135>>>            Procedure OnClick
38138>>>                Send NavigatePath
38139>>>            End_Procedure
38140>>>
38140>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38143>>>                Move True to NavigateData.bNewRecord
38144>>>            End_Procedure
38145>>>
38145>>>        End_Object 
38146>>>    End_Object 
38147>>>
38147>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
38150>>>        WebSet pbRender of oNewButton to True
38151>>>        WebSet pbRender of oDetailButton to True
38152>>>
38152>>>        Case Begin
38152>>>            Case (NavigateData.eNavigateType = nfFromParent)
38154>>>                // If from parent, this is a constrained drill down
38154>>>                // If Row select does main-zoom we don't need this
38154>>>                WebSet pbRender of oDetailButton to False
38155>>>                Case Break
38156>>>
38156>>>            Case (NavigateData.eNavigateType = nfFromChild)
38159>>>                // If from child, this is a probably a parent lookup from a Zoom
38159>>>                Case Break
38160>>>
38160>>>            Case (NavigateData.eNavigateType = nfFromMain)
38163>>>                // If from main, this is a probably a main-file lookup from a Zoom
38163>>>                WebSet pbRender of oDetailButton to False
38164>>>                Case Break
38165>>>
38165>>>            Case Else // must be nfUndefined
38165>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
38165>>>                // If Row select does main-zoom we don't need this
38165>>>                WebSet pbRender of oDetailButton to False
38166>>>
38166>>>        Case End
38166>>>
38166>>>    End_Procedure
38167>>>
38167>>>
38167>>>End_Object 
38168>    Set phoDefaultView to oDashboard
38169>
38169>End_Object
38170>
38170>Send StartWebApp of oWebApp
38171>
Summary
Memory Available: 16908877824
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 25380
Total Resources: 0
Total Commands : 38170
Total Windows  : 0
Total Pages    : 0
Static Data    : 470167
Message area   : 255117
Total Blocks   : 16979
